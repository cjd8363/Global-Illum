diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/GNUmakefile netpbm-10.27/GNUmakefile
--- netpbm-10.27-orig/GNUmakefile	2005-03-24 20:52:44.000000000 +0100
+++ netpbm-10.27/GNUmakefile	2005-05-12 12:36:02.046875000 +0200
@@ -51,11 +51,12 @@ all package install:
 	@echo "Makefile.common to replace \$(CURDIR) with \$(shell /bin/pwd) "
 else
 
-
-include Makefile.srcdir
-BUILDDIR = $(CURDIR)
+CSRCDIR = $(CURDIR)
+CBUILDDIR = $(CURDIR)
+SRCDIR = $(shell pwd | sed -e "s,/cygdrive/k/,k:/,")
+BUILDDIR = ${SRCDIR}
 SUBDIR = 
-VPATH=.:$(SRCDIR)
+VPATH=. $(CSRCDIR) $(CSRCDIR)/res
 
 include $(BUILDDIR)/Makefile.config
 
@@ -181,12 +182,12 @@ MINOR=$(NETPBM_MINOR_RELEASE)
 POINT=$(NETPBM_POINT_RELEASE)
 
 init_package:
-	@if [ -d $(PKGDIR) ]; then \
-	  echo "Directory $(PKGDIR) already exists.  Please specify a "; \
-	  echo "directory that can be created fresh, like this: "; \
-	  echo "  make package PKGDIR=/tmp/newnetpbm "; \
-	  false; \
-	  fi
+#	@if [ -d $(PKGDIR) ]; then \
+#	  echo "Directory $(PKGDIR) already exists.  Please specify a "; \
+#	  echo "directory that can be created fresh, like this: "; \
+#	  echo "  make package PKGDIR=/tmp/newnetpbm "; \
+#	  false; \
+#	  fi
 	mkdir $(PKGDIR)
 	echo "Netpbm install package made by 'make package'" \
 	    >$(PKGDIR)/pkginfo
@@ -210,10 +211,10 @@ endif
 
 .PHONY: install-merge install-nonmerge
 install-merge: install.merge install.lib install.data \
-	install.manweb install.man
+#	install.manweb install.man
 
 install-nonmerge: install.bin install.lib install.data \
-	install.manweb install.man
+#	install.manweb install.man
 
 .PHONY: merge
 merge: netpbm
@@ -366,3 +367,10 @@ localdistclean:
 # The following endif is for the else block that contains virtually the
 # whole file, for the test of the existence of CURDIR.
 endif
+
+DIRS:
+	@echo "SRCDIR = $(SRCDIR)"
+	@echo "CURDIR = $(CURDIR)"
+	@echo "VPATH =  $(VPATH)"
+	@echo "CSRCDIR =  $(CSRCDIR)"
+	@echo "CBUILDDIR =  $(CBUILDDIR)"
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/Makefile.common netpbm-10.27/Makefile.common
--- netpbm-10.27-orig/Makefile.common	2005-02-22 04:39:13.000000000 +0100
+++ netpbm-10.27/Makefile.common	2005-05-12 12:26:22.390625000 +0200
@@ -165,6 +165,10 @@ $(OBJECTS): %.o: %.c $(HEADERLINKS)
 	$(CC) -c -I$(SRCDIR)/$(SUBDIR) -I. $(INCLUDES) -DNDEBUG \
 	    $(CPPFLAGS) $(CFLAGS) $(CFLAGS_PERSONAL) $(CADD) -o $@ $<
 
+# Rule to make compiled resource (Windows)
+%-res.o: $(SRCDIR)/res/%-res.rc 
+	windres --include-dir $(SRCDIR)/res -i $(SRCDIR)/res/$(<F) -o $@
+
 # libopt is a utility program used in the make file below.
 LIBOPT = $(BUILDDIR)/buildtools/libopt
 
@@ -252,10 +256,10 @@ endif
 # Earlier ones do it regardless of __FAST_MATH__.
 
 MATHLIB ?= -lm
-$(PORTBINARIES) $(MATHBINARIES): %: %.o $(NETPBMLIB) $(LIBOPT)
+$(PORTBINARIES) $(MATHBINARIES): %: %.o %-res.o $(NETPBMLIB) $(LIBOPT)
 # Note that LDFLAGS might contain -L options, so order is important.
 # LDFLAGS is commonly set as an environment variable.
-	$(LD) -o $@ $@.o $(MATHLIB) `$(LIBOPT) $(NETPBMLIB)` \
+	$(LD) -o $@ $@.o $@-res.o $(MATHLIB) `$(LIBOPT) $(NETPBMLIB)` \
 	  $(LDFLAGS) $(LDLIBS) $(RPATH) $(LADD)
 
 
@@ -344,7 +348,7 @@ INSTALLBIN_TARGETS = $(BINARIES:%=%_inst
 .PHONY: $(INSTALLBIN_TARGETS)
 $(INSTALLBIN_TARGETS): $(PKGDIR)/bin
 	$(INSTALL) -c $(STRIPFLAG) -m $(INSTALL_PERM_BIN) \
-	  $(@:%_installbin=%) $<
+	  $(@:%_installbin=%)$(EXE) $</$(@:%_installbin=%)$(EXE)
 
 $(SCRIPTS:%=%_installscript): $(PKGDIR)/bin
 	$(INSTALL) -c -m $(INSTALL_PERM_BIN) \
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/Makefile.srcdir netpbm-10.27/Makefile.srcdir
--- netpbm-10.27-orig/Makefile.srcdir	2002-06-10 05:39:35.000000000 +0200
+++ netpbm-10.27/Makefile.srcdir	2005-05-12 09:29:46.843750000 +0200
@@ -1 +0,0 @@
-SRCDIR = $(CURDIR)
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/analyzer/Makefile netpbm-10.27/analyzer/Makefile
--- netpbm-10.27-orig/analyzer/Makefile	2004-02-08 03:04:18.000000000 +0100
+++ netpbm-10.27/analyzer/Makefile	2005-05-12 10:44:42.796875000 +0200
@@ -42,9 +42,9 @@ install.bin: install.bin.local
 install.bin.local: $(PKGDIR)/bin
 # Remember that $(SYMLINK) might just be a copy command.
 	cd $(PKGDIR)/bin ; \
-	$(SYMLINK) pamslice$(EXE) pgmslice
+	$(SYMLINK) pamslice$(EXE) pgmslice$(EXE)
 	cd $(PKGDIR)/bin ; \
-	$(SYMLINK) pamfile$(EXE) pnmfile
+	$(SYMLINK) pamfile$(EXE) pnmfile$(EXE)
 
 FORCE:
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/analyzer/pgmhist.c netpbm-10.27/analyzer/pgmhist.c
--- netpbm-10.27-orig/analyzer/pgmhist.c	2003-07-06 21:23:19.000000000 +0200
+++ netpbm-10.27/analyzer/pgmhist.c	2005-05-12 11:36:40.250000000 +0200
@@ -45,6 +45,7 @@ main( argc, argv )
     grayrow = pgm_allocrow( cols );
 
     /* Build histogram. */
+    overflow_add(maxval, 1);
     MALLOCARRAY(hist, maxval + 1);
     MALLOCARRAY(rcount, maxval + 1);
     if ( hist == NULL || rcount == NULL )
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/analyzer/pgmtexture.c netpbm-10.27/analyzer/pgmtexture.c
--- netpbm-10.27-orig/analyzer/pgmtexture.c	2003-08-07 18:18:16.000000000 +0200
+++ netpbm-10.27/analyzer/pgmtexture.c	2005-05-12 11:36:40.250000000 +0200
@@ -75,7 +75,10 @@ vector (int nl, int nh)
 {
   float *v;
 
-  MALLOCARRAY(v, (unsigned) (nh - nl + 1));
+  overflow_add(nh, 1);
+  if(nh < nl)
+      pm_error("assert: h < l");
+  v = (float *) malloc2 ((nh - nl + 1), sizeof (float));
   if (v == NULL)
     pm_error("Unable to allocate memory for a vector.");
   return v - nl;
@@ -91,16 +94,22 @@ matrix (int nrl, int nrh, int ncl, int n
   float **m;
 
   /* allocate pointers to rows */
-  MALLOCARRAY(m, (unsigned) (nrh - nrl + 1));
+  overflow_add(nrh, 1);
+  if(nrh < nrl)
+      pm_error("assert: nrh < nrl");
+  m = (float **) malloc2(nrh - nrl + 1, sizeof (float *));
   if (m == NULL)
     pm_error("Unable to allocate memory for a matrix.");
 
   m -= ncl;
 
+  if(nch < ncl)
+      pm_error("assert: nch < ncl");
+  overflow_add(nch, 1);
   /* allocate rows and set pointers to them */
   for (i = nrl; i <= nrh; i++)
   {
-    MALLOCARRAY(m[i], (unsigned) (nch - ncl + 1));
+    m[i] = (float *) malloc2(nch - ncl + 1, sizeof (float));
     if (m[i] == NULL)
       pm_error("Unable to allocate memory for a matrix row.");
     m[i] -= ncl;
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/buildtools/Makefile netpbm-10.27/buildtools/Makefile
--- netpbm-10.27-orig/buildtools/Makefile	2004-12-09 19:00:24.000000000 +0100
+++ netpbm-10.27/buildtools/Makefile	2005-05-12 09:29:46.843750000 +0200
@@ -36,7 +36,7 @@ typegen.o endiangen.o:%.o:%.c
 	$(CC_FOR_BUILD) -c -o $@ $<
 
 $(PROGS):%:%.o
-	$(LD_FOR_BUILD) -o $@ $<
+	$(LD_FOR_BUILD) -o $@ $< $(LIBS)
 
 clean: cleanlocal
 .PHONY: cleanlocal
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/buildtools/configure.pl netpbm-10.27/buildtools/configure.pl
--- netpbm-10.27-orig/buildtools/configure.pl	2005-03-23 18:33:19.000000000 +0100
+++ netpbm-10.27/buildtools/configure.pl	2005-05-12 10:07:10.484375000 +0200
@@ -141,16 +141,16 @@ sub chooseTestCompiler($$) {
         if ($ENV{"CC"}) {
             $cc = $ENV{"CC"};
         } else {
-            if (commandExists("cc")) {
-                $cc = "cc";
-            } elsif (commandExists("gcc")) {
+            if (commandExists("gcc")) {
                 $cc = "gcc";
+            } elsif (commandExists("cc")) {
+                $cc = "cc";
             }
         }
-    } elsif ($compiler eq "cc") {
-        $cc = "cc";
     } elsif ($compiler eq "gcc") {
         $cc = "gcc";
+    } elsif ($compiler eq "cc") {
+        $cc = "cc";
     } else {
         die("Internal error: invalid value \"$compiler\" for \$compiler");
     }
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/Makefile netpbm-10.27/converter/other/Makefile
--- netpbm-10.27-orig/converter/other/Makefile	2005-03-25 22:53:04.000000000 +0100
+++ netpbm-10.27/converter/other/Makefile	2005-05-12 12:42:19.953125000 +0200
@@ -22,6 +22,7 @@ ifneq ($(PNGLIB),NONE)
   ifneq ($(PNGHDR_DIR)x,x)
     INCLUDES += -I$(PNGHDR_DIR)
   endif
+  CFLAGS += -DPNG_USE_DLL 
   ifneq ($(ZHDR_DIR)x,x)
     INCLUDES += -I$(ZHDR_DIR)
   endif
@@ -95,7 +96,7 @@ ifneq ($(JPEGLIB),NONE)
 endif
 
 OBJECTS = $(BINARIES:%=%.o) $(EXTRA_OBJECTS)
-MERGE_OBJECTS = $(MERGEBINARIES:%=%.o2) $(EXTRA_OBJECTS)
+MERGE_OBJECTS = $(MERGEBINARIES:%=%.o) $(EXTRA_OBJECTS)
 
 
 SCRIPTS = anytopnm pnmtoplainpnm
@@ -115,28 +116,28 @@ else
   LIBOPTR =
 endif
 
-tifftopnm pnmtotiff pnmtotiffcmyk: %: %.o $(NETPBMLIB) $(LIBOPT)
-	$(LD) $(LDFLAGS) -o $@ $@.o \
+tifftopnm pnmtotiff pnmtotiffcmyk: %: %.o %-res.o $(NETPBMLIB) $(LIBOPT)
+	$(LD) $(LDFLAGS) -o $@ $@.o $@-res.o \
 	  `$(LIBOPT) $(NETPBMLIB) $(LIBOPTR) $(TIFFLIB) $(TIFFLIB_EXTRALIBS)` \
 	   $(MATHLIB) $(LDLIBS) $(RPATH) $(LADD)
 
-pngtopnm: %: %.o $(NETPBMLIB) $(LIBOPT)
-	$(LD) $(LDFLAGS) -o $@ $@.o \
+pngtopnm: %: %.o %-res.o $(NETPBMLIB) $(LIBOPT)
+	$(LD) $(LDFLAGS) -o $@ $@.o $@-res.o \
 	  `$(LIBOPT) $(NETPBMLIB) $(LIBOPTR) $(PNGLIB) $(ZLIB)` \
 	  $(MATHLIB) $(LDLIBS) $(RPATH) $(LADD)
 
-pnmtopng: %: %.o pngtxt.o $(NETPBMLIB) $(LIBOPT)
-	$(LD) $(LDFLAGS) -o $@ $@.o pngtxt.o \
+pnmtopng: %: %.o %-res.o pngtxt.o $(NETPBMLIB) $(LIBOPT)
+	$(LD) $(LDFLAGS) -o $@ $@.o $@-res.o pngtxt.o \
 	  `$(LIBOPT) $(NETPBMLIB) $(LIBOPTR) $(PNGLIB) $(ZLIB)` \
 	  $(MATHLIB) $(LDLIBS) $(RPATH) $(LADD)
 
-jpegtopnm: %: %.o jpegdatasource.o exif.o $(NETPBMLIB) $(LIBOPT)
-	$(LD) $(LDFLAGS) -o $@ $< jpegdatasource.o exif.o \
+jpegtopnm: %: %.o %-res.o jpegdatasource.o exif.o $(NETPBMLIB) $(LIBOPT)
+	$(LD) $(LDFLAGS) -o $@ $< jpegdatasource.o exif.o $@-res.o \
 	  `$(LIBOPT) $(NETPBMLIB) $(LIBOPTR) $(JPEGLIB)` \
 	  $(MATHLIB) $(LDLIBS) $(RPATH) $(LADD) 
 
-pnmtojpeg: %: %.o $(NETPBMLIB) $(LIBOPT)
-	$(LD) $(LDFLAGS) -o $@ $@.o \
+pnmtojpeg: %: %.o %-res.o $(NETPBMLIB) $(LIBOPT)
+	$(LD) $(LDFLAGS) -o $@ $@.o $@-res.o \
 	  `$(LIBOPT) $(NETPBMLIB) $(LIBOPTR) $(JPEGLIB)` \
 	  $(MATHLIB) $(LDLIBS) $(RPATH) $(LADD)
 
@@ -146,18 +147,18 @@ ifeq ($(URTLIB), $(BUNDLED_URTLIB))
   URTLIBDEP = $(URTLIB)
 endif
 
-rletopnm pnmtorle: %: %.o $(NETPBMLIB) $(URTLIBDEP) $(LIBOPT)
-	$(LD) $(LDFLAGS) -o $@ $@.o \
+rletopnm pnmtorle: %: %.o %-res.o $(NETPBMLIB) $(URTLIBDEP) $(LIBOPT)
+	$(LD) $(LDFLAGS) -o $@ $@.o $@-res.o \
 	  `$(LIBOPT) $(NETPBMLIB) $(URTLIB)` $(MATHLIB) $(LDLIBS) \
 	   $(RPATH) $(LADD)
 
-pnmtops: %: %.o bmepsoe.o $(NETPBMLIB) $(LIBOPT)
-	$(LD) $(LDFLAGS) -o $@ $@.o bmepsoe.o \
+pnmtops: %: %.o %-res.o bmepsoe.o $(NETPBMLIB) $(LIBOPT)
+	$(LD) $(LDFLAGS) -o $@ $@.o $@-res.o bmepsoe.o \
 	  `$(LIBOPT) $(NETPBMLIB) $(ZLIB)` $(MATHLIB) $(LDLIBS) \
 	   $(RPATH) $(LADD)
 
-pnmtorast rasttopnm: %: %.o rast.o $(NETPBMLIB) $(LIBOPT)
-	$(LD) $(LDFLAGS) -o $@ $@.o rast.o \
+pnmtorast rasttopnm: %: %.o %-res.o rast.o $(NETPBMLIB) $(LIBOPT)
+	$(LD) $(LDFLAGS) -o $@ $@.o $@-res.o rast.o \
 	  `$(LIBOPT) $(NETPBMLIB)` $(MATHLIB) $(LDLIBS) \
 	   $(RPATH) $(LADD)
 
@@ -167,19 +168,19 @@ install.bin.local: $(PKGDIR)/bin
 # Remember that $(SYMLINK) might just be a copy command.
 # backward compatibility: program used to be named pnmnoraw
 	cd $(PKGDIR)/bin ; \
-	$(SYMLINK) pnmtoplainpnm$(EXE) pnmnoraw
+	$(SYMLINK) pnmtoplainpnm pnmnoraw
 # backward compatibility: program used to be gemtopbm
 	cd $(PKGDIR)/bin ; \
-	$(SYMLINK) gemtopnm$(EXE) gemtopbm
+	$(SYMLINK) gemtopnm$(EXE) gemtopbm$(EXE)
 # In October 2001, pnmtojpeg replaced ppmtojpeg
 	cd $(PKGDIR)/bin ; \
-	$(SYMLINK) pnmtojpeg$(EXE) ppmtojpeg
+	$(SYMLINK) pnmtojpeg$(EXE) ppmtojpeg$(EXE)
 # In March 2002, bmptopnm replaced bmptoppm
 	cd $(PKGDIR)/bin ; \
-	$(SYMLINK) bmptopnm$(EXE) bmptoppm
+	$(SYMLINK) bmptopnm$(EXE) bmptoppm$(EXE)
 # In May 2002, pamtouil replaced ppmtouil
 	cd $(PKGDIR)/bin ; \
-	$(SYMLINK) pamtouil$(EXE) ppmtouil
+	$(SYMLINK) pamtouil$(EXE) ppmtouil$(EXE)
 # In March 2005, we realized that pamtopnm obviates pnmtopnm
 	cd $(PKGDIR)/bin ; \
-	$(SYMLINK) pnmtopnm$(EXE) pamtopnm
+	$(SYMLINK) pamtopnm$(EXE) pnmtopnm$(EXE)
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/anytopnm netpbm-10.27/converter/other/anytopnm
--- netpbm-10.27-orig/converter/other/anytopnm	2004-10-13 17:05:53.000000000 +0200
+++ netpbm-10.27/converter/other/anytopnm	2005-05-12 10:52:42.078125000 +0200
@@ -522,11 +522,7 @@ else
     inputFile="-"
 fi
 
-tempdir="${TMPDIR-/tmp}/anytopnm.$$"
-mkdir $tempdir || { echo "Could not create temporary file. Exiting."; exit 1;}
-chmod 700 $tempdir
-
-trap 'rm -rf $tempdir' 0 1 3 15
+tempdir=$(mktemp -d -t anytopnm.XXXXXXXXXX) || exit 1
 
 findAwk;
 
@@ -549,9 +545,17 @@ if [ "$filetype" = "unknown" ]; then
     echo "$progname: unknown file type.  " \
         "'file' says mime type is '$mimeType', " 1>&2
     echo "type description is '$typeDescription'" 1>&2
+    if [ -d "$tempdir" ] ; then
+        rm -rf "$tempdir"
+    fi
+
     exit 1
     fi
 
 convertIt $file $filetype
 
+if [ -d "$tempdir" ] ; then
+    rm -rf "$tempdir"
+fi
+
 exit 0
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/bmptopnm.c netpbm-10.27/converter/other/bmptopnm.c
--- netpbm-10.27-orig/converter/other/bmptopnm.c	2004-10-22 17:21:45.000000000 +0200
+++ netpbm-10.27/converter/other/bmptopnm.c	2005-05-12 11:38:41.312500000 +0200
@@ -932,7 +932,7 @@ readBmp(FILE *               const ifP, 
         xel **               const colormapP,
         bool                 const verbose) {
 
-    xel * colormap;  /* malloc'ed */
+    xel * colormap = NULL;  /* malloc'ed */
     unsigned int pos;
 
     /* The following are all information from the BMP headers */
@@ -968,6 +968,7 @@ readBmp(FILE *               const ifP, 
                    , BMPoffbits(BMPheader.class, BMPheader.cBitCount, 
                                 BMPheader.cmapsize));
     }
+	if(BMPheader.cmapsize != 0)
     {
         unsigned int bytesRead;
         BMPreadcolormap(ifP, BMPheader.cBitCount, BMPheader.class, 
@@ -1080,7 +1081,7 @@ main(int argc, char ** argv) {
     parse_command_line(argc, argv, &cmdline);
 
     ifP = pm_openr(cmdline.input_filespec);
-    if (strcmp(cmdline.input_filespec, "-"))
+    if (!strcmp(cmdline.input_filespec, "-"))
         ifname = "Standard Input";
     else 
         ifname = cmdline.input_filespec;
@@ -1105,7 +1106,7 @@ main(int argc, char ** argv) {
     writeRaster(BMPraster, cols, rows, outputType, cBitCount, pixelformat,
                 colormap);
 
-    free(colormap);
+    if (colormap) free(colormap);
     free(BMPraster);
 
     exit(0);
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/fiasco/Makefile netpbm-10.27/converter/other/fiasco/Makefile
--- netpbm-10.27-orig/converter/other/fiasco/Makefile	2003-09-13 04:44:09.000000000 +0200
+++ netpbm-10.27/converter/other/fiasco/Makefile	2005-05-12 09:29:46.875000000 +0200
@@ -36,9 +36,9 @@ SUBDIRS = codec input output lib
 
 include $(SRCDIR)/Makefile.common
 
-$(BINARIES):%:%.o $(COMMON_OBJECTS) $(FIASCOLIBS) $(NETPBMLIB) \
+$(BINARIES):%:%.o %-res.o $(COMMON_OBJECTS) $(FIASCOLIBS) $(NETPBMLIB) \
    $(LIBOPT)
-	$(LD) $(LDFLAGS) -o $@ $< $(COMMON_OBJECTS) \
+	$(LD) $(LDFLAGS) -o $@ $< $@-res.o $(COMMON_OBJECTS) \
 	`$(LIBOPT) $(FIASCOLIBS) $(NETPBMLIB)` $(MATHLIB) $(LDLIBS) \
 	$(RPATH) $(LADD)
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/fiasco/lib/bit-io.c netpbm-10.27/converter/other/fiasco/lib/bit-io.c
--- netpbm-10.27-orig/converter/other/fiasco/lib/bit-io.c	2004-03-13 20:35:59.000000000 +0100
+++ netpbm-10.27/converter/other/fiasco/lib/bit-io.c	2005-05-12 10:02:33.281250000 +0200
@@ -65,7 +65,7 @@ open_file (const char *filename, const c
     FILE       *fp;      /* file pointer of I/O stream */
     char       *ext_filename = NULL; /* full path of file */
     char       *env_path     = NULL; /* path given by 'env_var' */
-    char const * const PATH_SEP     = " ;:,"; /* path separation characters */
+    char const * const FIASCO_PATH_SEP     = " ;:,"; /* path separation characters */
     char const * const DEFAULT_PATH = "."; /* default for output files */
     const char * const read_mode  = "rb";
     const char * const write_mode = "wb";
@@ -106,9 +106,9 @@ open_file (const char *filename, const c
    
     /*
      *  Try to open file in the directory given by the environment
-     *  variable env_var - individual path components are separated by PATH_SEP 
+     *  variable env_var - individual path components are separated by FIASCO_PATH_SEP 
      */
-    path = strtok (env_path, PATH_SEP);
+    path = strtok (env_path, FIASCO_PATH_SEP);
     do 
     {
         if (ext_filename) 
@@ -121,7 +121,7 @@ open_file (const char *filename, const c
         strcat (ext_filename, filename);
         fp = fopen (ext_filename, mode == READ_ACCESS ? read_mode : write_mode);
     }
-    while (fp == NULL && (path = strtok (NULL, PATH_SEP)) != NULL);
+    while (fp == NULL && (path = strtok (NULL, FIASCO_PATH_SEP)) != NULL);
 
     Free (env_path);
    
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/gemtopnm.c netpbm-10.27/converter/other/gemtopnm.c
--- netpbm-10.27-orig/converter/other/gemtopnm.c	2004-09-18 05:15:23.000000000 +0200
+++ netpbm-10.27/converter/other/gemtopnm.c	2005-05-12 11:36:39.437500000 +0200
@@ -106,6 +106,7 @@ main(argc, argv)
 
 	pnm_writepnminit( stdout, cols, rows, MAXVAL, type, 0 );
 
+    overflow_add(cols, padright);
     { 
         /* allocate input row data structure */
         int plane;
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/giftopnm.c netpbm-10.27/converter/other/giftopnm.c
--- netpbm-10.27-orig/converter/other/giftopnm.c	2005-02-03 21:32:21.000000000 +0100
+++ netpbm-10.27/converter/other/giftopnm.c	2005-05-12 10:49:35.093750000 +0200
@@ -1301,6 +1301,7 @@ convertImages(FILE * const ifP, 
                          requestedImageSeq+1,
                          imageSeq, imageSeq>1?"s":"" );
         } else {
+            if (verbose)
             pm_message("Reading Image Sequence %d", imageSeq);
             convertImage(ifP, !allImages && (imageSeq != requestedImageSeq), 
                          imageout_file, alphafile, gifScreen, gif89);
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/jbig/Makefile netpbm-10.27/converter/other/jbig/Makefile
--- netpbm-10.27-orig/converter/other/jbig/Makefile	2004-12-10 01:17:24.000000000 +0100
+++ netpbm-10.27/converter/other/jbig/Makefile	2005-05-12 09:37:38.906250000 +0200
@@ -37,8 +37,8 @@ HEADERLINKS = pm_config.h pm.h pbm.h pgm
 
 include $(SRCDIR)/Makefile.common
 
-$(BINARIES): %: %.o $(JBIGLIB_DEP) $(NETPBMLIB) $(LIBOPT)
-	$(LD) $(LDFLAGS) -o $@ $< \
+$(BINARIES): %: %.o %-res.o $(JBIGLIB_DEP) $(NETPBMLIB) $(LIBOPT)
+	$(LD) $(LDFLAGS) -o $@ $< $@-res.o \
 	 `$(LIBOPT) $(NETPBMLIB) $(JBIGLIB)` $(MATHLIB) $(LDLIBS) \
 	  $(RPATH) $(LADD)
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/jpeg2000/Makefile netpbm-10.27/converter/other/jpeg2000/Makefile
--- netpbm-10.27-orig/converter/other/jpeg2000/Makefile	2005-03-28 02:43:16.000000000 +0200
+++ netpbm-10.27/converter/other/jpeg2000/Makefile	2005-05-12 09:39:05.015625000 +0200
@@ -45,9 +45,9 @@ HEADERLINKS = pm_config.h pm.h pbm.h pgm
 
 include $(SRCDIR)/Makefile.common
 
-$(BINARIES): %: %.o $(JASPERLIB_DEP) $(NETPBMLIB) $(LIBOPT)
+$(BINARIES): %: %.o %-res.o $(JASPERLIB_DEP) $(NETPBMLIB) $(LIBOPT)
 	echo deps: $^
-	$(LD) $(LDFLAGS) $(MATHLIB) $(LDLIBS) -o $@ $< \
+	$(LD) $(LDFLAGS) $(MATHLIB) $(LDLIBS) -o $@ $@-res.o $< \
 	 `$(LIBOPT) $(NETPBMLIB) $(JASPERLIB)` $(JASPERDEPLIBS) -lm \
 	  $(RPATH) $(LADD)
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/jpeg2000/libjasper/jpc/jpc_qmfb.c netpbm-10.27/converter/other/jpeg2000/libjasper/jpc/jpc_qmfb.c
--- netpbm-10.27-orig/converter/other/jpeg2000/libjasper/jpc/jpc_qmfb.c	2004-09-09 04:31:33.000000000 +0200
+++ netpbm-10.27/converter/other/jpeg2000/libjasper/jpc/jpc_qmfb.c	2005-05-12 09:29:46.921875000 +0200
@@ -207,8 +207,8 @@ static void jpc_qmfb1d_split(jpc_fix_t *
 
 #if defined(WIN32)
 	/* Get a buffer. */
-	if (bufsize > QMFB_SPLITBUFSIZE) {
-		if (!(buf = jas_malloc(bufsize * sizeof(jpc_fix_t)))) {
+	if (BUFSIZ > QMFB_SPLITBUFSIZE) {
+		if (!(buf = jas_malloc(BUFSIZ * sizeof(jpc_fix_t)))) {
 			/* We have no choice but to commit suicide in this case. */
 			abort();
 		}
@@ -322,8 +322,8 @@ static void jpc_qmfb1d_join(jpc_fix_t *s
 
 #if defined(WIN32)
 	/* Allocate memory for the join buffer from the heap. */
-	if (bufsize > QMFB_JOINBUFSIZE) {
-		if (!(buf = jas_malloc(bufsize * sizeof(jpc_fix_t)))) {
+	if (BUFSIZ > QMFB_JOINBUFSIZE) {
+		if (!(buf = jas_malloc(BUFSIZ * sizeof(jpc_fix_t)))) {
 			/* We have no choice but to commit suicide. */
 			abort();
 		}
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/jpegtopnm.c netpbm-10.27/converter/other/jpegtopnm.c
--- netpbm-10.27-orig/converter/other/jpegtopnm.c	2004-10-26 06:20:07.000000000 +0200
+++ netpbm-10.27/converter/other/jpegtopnm.c	2005-05-12 11:36:39.390625000 +0200
@@ -828,6 +828,7 @@ convertImage(FILE *                     
     /* Calculate output image dimensions so we can allocate space */
     jpeg_calc_output_dimensions(cinfoP);
 
+    overflow2(cinfoP->output_width, cinfoP->output_components);
     jpegbuffer = ((*cinfoP->mem->alloc_sarray)
                   ((j_common_ptr) cinfoP, JPOOL_IMAGE,
                    cinfoP->output_width * cinfoP->output_components, 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/pbmtopgm.c netpbm-10.27/converter/other/pbmtopgm.c
--- netpbm-10.27-orig/converter/other/pbmtopgm.c	2004-09-18 05:15:02.000000000 +0200
+++ netpbm-10.27/converter/other/pbmtopgm.c	2005-05-12 11:33:01.593750000 +0200
@@ -45,6 +45,7 @@ main(int argc, char *argv[]) {
                  "than the image height (%u rows)", height, rows);
 
     outrow = pgm_allocrow(cols) ;
+    overflow2(width, height);
     maxval = MIN(PGM_OVERALLMAXVAL, width*height);
     pgm_writepgminit(stdout, cols, rows, maxval, 0) ;
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/pngtopnm.c netpbm-10.27/converter/other/pngtopnm.c
--- netpbm-10.27-orig/converter/other/pngtopnm.c	2005-03-25 06:08:44.000000000 +0100
+++ netpbm-10.27/converter/other/pngtopnm.c	2005-05-12 11:36:39.421875000 +0200
@@ -744,18 +744,30 @@ convertpng (FILE *             const ifp
   }
 
   if (info_ptr->bit_depth == 16)
+  {
+    overflow2(2, info_ptr->width);
     linesize = 2 * info_ptr->width;
+  }
   else
     linesize = info_ptr->width;
 
   if (info_ptr->color_type == PNG_COLOR_TYPE_GRAY_ALPHA)
+  {
     linesize *= 2;
+    overflow2(2, linesize);
+  }
   else
   if (info_ptr->color_type == PNG_COLOR_TYPE_RGB)
+  {
+    overflow2(3, linesize);
     linesize *= 3;
+  }
   else
   if (info_ptr->color_type == PNG_COLOR_TYPE_RGB_ALPHA)
+  {
+    overflow2(4, linesize);
     linesize *= 4;
+  }
 
   for (y = 0 ; y < info_ptr->height ; y++) {
     png_image[y] = malloc (linesize);
@@ -969,11 +981,12 @@ convertpng (FILE *             const ifp
     }
   }
 
-  if ((pnm_type == PGM_TYPE) && (maxval > PGM_OVERALLMAXVAL))
-    maxmaxval = PGM_OVERALLMAXVAL;
-  else if ((pnm_type == PPM_TYPE) && (maxval > PPM_OVERALLMAXVAL))
-    maxmaxval = PPM_OVERALLMAXVAL;
-  else maxmaxval = maxval;
+  /*
+   * The conditions maxval > [PGM,PPM]_OVERALL removed because
+   * [PGM,PPM]_OVERALL == 0xffff and maxval is png_uint_16, so
+   * the condition can never be true.
+   */
+  maxmaxval = maxval;
 
   writePnm(stdout, maxval, pnm_type, info_ptr, png_image, bgColor, 
            cmdline.alpha, totalgamma);
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/pnmtoddif.c netpbm-10.27/converter/other/pnmtoddif.c
--- netpbm-10.27-orig/converter/other/pnmtoddif.c	2002-07-30 19:09:13.000000000 +0200
+++ netpbm-10.27/converter/other/pnmtoddif.c	2005-05-12 11:36:39.484375000 +0200
@@ -484,6 +484,7 @@ int main(int argc, char *argv[])
     switch (PNM_FORMAT_TYPE(format)) {
     case PBM_TYPE:
         ip.bits_per_pixel = 1;
+        overflow_add(cols, 7);
         ip.bytes_per_line = (cols + 7) / 8;
         ip.spectral = 2;
         ip.components = 1;
@@ -499,6 +500,7 @@ int main(int argc, char *argv[])
         ip.polarity = 2;
         break;
     case PPM_TYPE:
+        overflow2(cols, 3);
         ip.bytes_per_line = 3 * cols;
         ip.bits_per_pixel = 24;
         ip.spectral = 5;
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/pnmtojpeg.c netpbm-10.27/converter/other/pnmtojpeg.c
--- netpbm-10.27-orig/converter/other/pnmtojpeg.c	2004-07-17 06:05:54.000000000 +0200
+++ netpbm-10.27/converter/other/pnmtojpeg.c	2005-05-12 11:39:25.015625000 +0200
@@ -320,7 +320,7 @@ parse_command_line(const int argc, char 
         pm_error("Smoothing factor %d is greater than 100 (%%).",
                  cmdline_p->smoothing_factor);
 
-    if (strcmp(cmdline_p->input_filespec, "=") == 0 &&
+    if (strcmp(cmdline_p->input_filespec, "-") == 0 &&
         cmdline_p->exif_filespec && 
         strcmp(cmdline_p->exif_filespec, "-") == 0)
 
@@ -588,6 +588,8 @@ compute_rescaling_array(JSAMPLE ** const
   const long half_maxval = maxval / 2;
   long val;
 
+  overflow_add(maxval, 1);
+  overflow2(maxval+1, sizeof(JSAMPLE));
   *rescale_p = (JSAMPLE *)
     (cinfo.mem->alloc_small) ((j_common_ptr) &cinfo, JPOOL_IMAGE,
                               (size_t) (((long) maxval + 1L) * 
@@ -664,6 +666,7 @@ convert_scanlines(struct jpeg_compress_s
     */
 
   /* Allocate the libpnm output and compressor input buffers */
+  overflow2(cinfo_p->image_width, cinfo_p->input_components);
   buffer = (*cinfo_p->mem->alloc_sarray)
     ((j_common_ptr) cinfo_p, JPOOL_IMAGE,
      (unsigned int) cinfo_p->image_width * cinfo_p->input_components, 
@@ -931,7 +934,11 @@ read_scan_script (j_compress_ptr cinfo, 
          * want JPOOL_PERMANENT.  
          */
         const unsigned int scan_info_size = nscans * sizeof(jpeg_scan_info);
-        jpeg_scan_info * const scan_info = 
+        const jpeg_scan_info * scan_info;
+	
+	overflow2(nscans, sizeof(jpeg_scan_info));
+	
+	scan_info = 
             (jpeg_scan_info *)
             (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
                                         scan_info_size);
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/pnmtopalm/Makefile netpbm-10.27/converter/other/pnmtopalm/Makefile
--- netpbm-10.27-orig/converter/other/pnmtopalm/Makefile	2004-06-21 00:56:23.000000000 +0200
+++ netpbm-10.27/converter/other/pnmtopalm/Makefile	2005-05-12 09:29:46.937500000 +0200
@@ -21,12 +21,12 @@ HEADERLINKS = pm_config.h pm.h pbm.h pgm
 
 include $(SRCDIR)/Makefile.common
 
-$(BINARIES): %: %.o palmcolormap.o $(NETPBMLIB) $(LIBOPT)
-	$(LD) $(LDFLAGS) -o $@ $< palmcolormap.o `$(LIBOPT) $(NETPBMLIB)` \
+$(BINARIES): %: %.o %-res.o palmcolormap.o $(NETPBMLIB) $(LIBOPT)
+	$(LD) $(LDFLAGS) -o $@ $< $@-res.o palmcolormap.o `$(LIBOPT) $(NETPBMLIB)` \
 	  $(MATHLIB) $(LDLIBS) $(RPATH) $(LADD)
 
-gen_palm_colormap : $(SUBDIR)/gen_palm_colormap.c palmcolormap.o
-	$(CC) $(INCLUDES) $(CFLAGS) $(LDFLAGS) -o $@ $< palmcolormap.o \
+gen_palm_colormap : $(SUBDIR)/gen_palm_colormap.c palmcolormap.o %-res.o
+	$(CC) $(INCLUDES) $(CFLAGS) $(LDFLAGS) -o $@ $@-res.o $< palmcolormap.o \
 	  `$(LIBOPT) $(NETPBMLIB)` $(MATHLIB) $(LDLIBS) $(LADD)
 
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/pnmtopalm/palmcolormap.c netpbm-10.27/converter/other/pnmtopalm/palmcolormap.c
--- netpbm-10.27-orig/converter/other/pnmtopalm/palmcolormap.c	2004-10-16 19:50:24.000000000 +0200
+++ netpbm-10.27/converter/other/pnmtopalm/palmcolormap.c	2005-05-12 11:36:39.421875000 +0200
@@ -232,7 +232,7 @@ Colormap
     return 0;
 
   colormap = malloc(sizeof(Colormap_s));
-  colormap->color_entries = malloc(sizeof(Color_s) * ncolors);
+  colormap->color_entries = malloc2(sizeof(Color_s), ncolors);
   colormap->nentries = ncolors;
   colormap->ncolors = ncolors;
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/pnmtops.c netpbm-10.27/converter/other/pnmtops.c
--- netpbm-10.27-orig/converter/other/pnmtops.c	2005-01-06 02:04:39.000000000 +0100
+++ netpbm-10.27/converter/other/pnmtops.c	2005-05-12 11:36:39.453125000 +0200
@@ -187,16 +187,21 @@ parseCommandLine(int argc, char ** argv,
     cmdlineP->canturn =  !noturn;
     cmdlineP->showpage = !noshowpage;
     
+    overflow2(width, 72);
     cmdlineP->width  = width * 72;
+    overflow2(width, 72);
     cmdlineP->height = height * 72;
 
-    if (imagewidth_spec)
+    if (imagewidth_spec) {
+        overflow2(imagewidth, 72);
         cmdlineP->imagewidth = imagewidth * 72;
+    }
     else
         cmdlineP->imagewidth = 0;
-    if (imageheight_spec)
+    if (imageheight_spec) {
+        overflow2(imagewidth, 72);
         cmdlineP->imageheight = imageheight * 72;
-    else
+    } else
         cmdlineP->imageheight = 0;
 
     if (!cmdlineP->psfilter &&
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/pnmtorle.c netpbm-10.27/converter/other/pnmtorle.c
--- netpbm-10.27-orig/converter/other/pnmtorle.c	2003-07-10 06:04:49.000000000 +0200
+++ netpbm-10.27/converter/other/pnmtorle.c	2005-05-12 11:36:39.375000000 +0200
@@ -19,6 +19,8 @@
  * If you modify this software, you should include a notice giving the
  * name of the person performing the modification, the date of modification,
  * and the reason for such modification.
+ *
+ *  2002-12-19: Fix maths wrapping bugs. Alan Cox <alan@redhat.com>
  */
 /*
  * pnmtorle - A program which will convert pbmplus (ppm or pgm) images
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/pnmtosgi.c netpbm-10.27/converter/other/pnmtosgi.c
--- netpbm-10.27-orig/converter/other/pnmtosgi.c	2003-07-10 06:04:07.000000000 +0200
+++ netpbm-10.27/converter/other/pnmtosgi.c	2005-05-12 11:36:39.359375000 +0200
@@ -213,6 +213,22 @@ write_channels(cols, rows, channels, put
     }
 }
 
+static void *
+xmalloc2(int x, int y)
+{
+    void *mem;
+
+    overflow2(x,y);
+    if( x * y == 0 )
+        return NULL;
+
+    mem = malloc2(x, y);
+    if( mem == NULL )
+        pm_error("out of memory allocating %d bytes", x * y);
+    return mem;
+}
+
+
 static void
 put_big_short(short s)
 {
@@ -250,6 +266,7 @@ build_channels(FILE *ifp, int cols, int 
 #endif
 
     if( storage != STORAGE_VERBATIM ) {
+        overflow2(channels, rows);
         MALLOCARRAY_NOFAIL(table, channels * rows);
         MALLOCARRAY_NOFAIL(rletemp, WORSTCOMPR(cols));
     }
@@ -303,6 +320,8 @@ compress(temp, row, rows, cols, chan_no,
             break;
         case STORAGE_RLE:
             tabrow = chan_no * rows + row;
+            overflow2(chan_no, rows);
+            overflow_add(chan_no* rows, row);
             len = rle_compress(temp, cols);    /* writes result into rletemp */
             channel[chan_no][row].length = len;
             MALLOCARRAY(p, len);
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/pnmtotiff.c netpbm-10.27/converter/other/pnmtotiff.c
--- netpbm-10.27-orig/converter/other/pnmtotiff.c	2005-03-28 01:16:55.000000000 +0200
+++ netpbm-10.27/converter/other/pnmtotiff.c	2005-05-12 11:36:39.406250000 +0200
@@ -620,11 +620,14 @@ computeRasterParm(int              const
     if (*bitspersampleP < 8) {
         int samplesperbyte;
         samplesperbyte = 8 / *bitspersampleP;
+	overflow2(cols, *samplesperpixelP);
+	overflow_add(cols * *samplesperpixelP, samplesperbyte);
         *bytesperrowP = 
             (cols * *samplesperpixelP + samplesperbyte-1) / samplesperbyte;
-    } else 
+    } else {
+	overflow3( *samplesperpixelP,  cols, *bitspersampleP);
         *bytesperrowP = (cols * *samplesperpixelP * *bitspersampleP) / 8;
-
+    }
     if (requested_rowsperstrip == -1 )
         *rowsperstripP = (8 * 1024) / *bytesperrowP;
     else 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/pstopnm.c netpbm-10.27/converter/other/pstopnm.c
--- netpbm-10.27-orig/converter/other/pstopnm.c	2004-06-23 04:22:33.000000000 +0200
+++ netpbm-10.27/converter/other/pstopnm.c	2005-05-12 09:55:09.046875000 +0200
@@ -786,7 +786,9 @@ execute_ghostscript(const char pstrans[]
            we get a SIGPIPE.  We must survive that signal in order to report
            on the fate of the child.  So we ignore SIGPIPE:
         */
+#ifdef SIGPIPE
         signal(SIGPIPE, SIG_IGN);
+#endif /* SIGPIPE */
 
         eof = FALSE;
         while (!eof) {
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/rletopnm.c netpbm-10.27/converter/other/rletopnm.c
--- netpbm-10.27-orig/converter/other/rletopnm.c	2004-10-19 17:36:22.000000000 +0200
+++ netpbm-10.27/converter/other/rletopnm.c	2005-05-12 11:36:39.390625000 +0200
@@ -19,6 +19,8 @@
  * If you modify this software, you should include a notice giving the
  * name of the person performing the modification, the date of modification,
  * and the reason for such modification.
+ *
+ *  2002-12-19: Fix maths wrapping bugs. Alan Cox <alan@redhat.com>
  */
 /*
  * rletopnm - A conversion program to convert from Utah's "rle" image format
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/sgitopnm.c netpbm-10.27/converter/other/sgitopnm.c
--- netpbm-10.27-orig/converter/other/sgitopnm.c	2003-07-10 05:42:28.000000000 +0200
+++ netpbm-10.27/converter/other/sgitopnm.c	2005-05-12 11:36:39.359375000 +0200
@@ -252,13 +252,17 @@ read_channels(ifp, head, table, func, oc
 
     if (ochan < 0) {
         maxchannel = (head->zsize < 3) ? head->zsize : 3;
+        overflow2(head->ysize, maxchannel);
         MALLOCARRAY_NOFAIL(image, head->ysize * maxchannel);
     } else {
         maxchannel = ochan + 1;
         MALLOCARRAY_NOFAIL(image, head->ysize);
     }
-    if ( table ) 
+    if ( table ) {
+        overflow2(head->xsize, 2);
+        overflow_add(head->xsize*2, 2);
         MALLOCARRAY_NOFAIL(temp, WORSTCOMPR(head->xsize));
+    }
 
     for( channel = 0; channel < maxchannel;  channel++ ) {
 #ifdef DEBUG
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/sirtopnm.c netpbm-10.27/converter/other/sirtopnm.c
--- netpbm-10.27-orig/converter/other/sirtopnm.c	2002-01-04 18:22:45.000000000 +0100
+++ netpbm-10.27/converter/other/sirtopnm.c	2005-05-12 11:36:39.343750000 +0200
@@ -69,6 +69,7 @@ char* argv[];
 	    }
 	    break;
 	case PPM_TYPE:
+        overflow3(cols, rows, 3);
 	    picsize = cols * rows * 3;
 	    planesize = cols * rows;
             if ( !( sirarray = (unsigned char*) malloc( picsize ) ) ) 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/tifftopnm.c netpbm-10.27/converter/other/tifftopnm.c
--- netpbm-10.27-orig/converter/other/tifftopnm.c	2005-03-28 01:32:05.000000000 +0200
+++ netpbm-10.27/converter/other/tifftopnm.c	2005-05-12 11:36:39.375000000 +0200
@@ -742,7 +742,8 @@ convertRasterByRows(FILE *         const
     if (scanbuf == NULL)
         pm_error("can't allocate memory for scanline buffer");
 
-    MALLOCARRAY(samplebuf, cols * spp);
+    /* samplebuf is unsigned int * !!! */
+    samplebuf = (unsigned int *) malloc3(cols , sizeof(unsigned int) , spp);
     if (samplebuf == NULL)
         pm_error ("can't allocate memory for row buffer");
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/other/xwdtopnm.c netpbm-10.27/converter/other/xwdtopnm.c
--- netpbm-10.27-orig/converter/other/xwdtopnm.c	2005-01-02 19:36:02.000000000 +0100
+++ netpbm-10.27/converter/other/xwdtopnm.c	2005-05-12 11:36:39.468750000 +0200
@@ -247,6 +247,9 @@ processX10Header(X10WDFileHeader *  cons
         *colorsP = pnm_allocrow( 2 );
         PNM_ASSIGN1( (*colorsP)[0], 0 );
         PNM_ASSIGN1( (*colorsP)[1], *maxvalP );
+        overflow_add(h10P->pixmap_width, 15);
+        if(h10P->pixmap_width < 0)
+            pm_error("assert: negative width");
         *padrightP =
             ( ( h10P->pixmap_width + 15 ) / 16 ) * 16 - h10P->pixmap_width;
         *bits_per_itemP = 16;
@@ -256,9 +259,13 @@ processX10Header(X10WDFileHeader *  cons
         *formatP = PGM_TYPE;
         *visualclassP = StaticGray;
         *maxvalP = ( 1 << h10P->display_planes ) - 1;
+        overflow_add(*maxvalP, 1);
         *colorsP = pnm_allocrow( *maxvalP + 1 );
         for ( i = 0; i <= *maxvalP; ++i )
             PNM_ASSIGN1( (*colorsP)[i], i );
+        overflow_add(h10P->pixmap_width, 15);
+        if(h10P->pixmap_width < 0)
+            pm_error("assert: negative width");
         *padrightP =
             ( ( h10P->pixmap_width + 15 ) / 16 ) * 16 - h10P->pixmap_width;
         *bits_per_itemP = 16;
@@ -577,6 +584,7 @@ processX11Header(X11WDFileHeader *  cons
 
     *colsP = h11FixedP->pixmap_width;
     *rowsP = h11FixedP->pixmap_height;
+    overflow2(h11FixedP->bytes_per_line, 8);
     *padrightP =
         h11FixedP->bytes_per_line * 8 / h11FixedP->bits_per_pixel -
         h11FixedP->pixmap_width;
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pbm/Makefile netpbm-10.27/converter/pbm/Makefile
--- netpbm-10.27-orig/converter/pbm/Makefile	2004-10-16 20:08:45.000000000 +0200
+++ netpbm-10.27/converter/pbm/Makefile	2005-05-12 09:29:46.937500000 +0200
@@ -73,7 +73,7 @@ thinkjettopbm.c:%.c:%.c1 $(SRCDIR)/lib/u
 	cat $(SRCDIR)/lib/util/lexheader $< | \
 	  grep -v "^[[:space:]]*int yylex(void);" | \
 	  grep -v "^[[:space:]]*int yywrap(void);" \
-	  >$@
+	  >$@; dtou $@
 
 clean: localclean
 .PHONY: localclean
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pbm/icontopbm.c netpbm-10.27/converter/pbm/icontopbm.c
--- netpbm-10.27-orig/converter/pbm/icontopbm.c	2003-01-08 20:19:42.000000000 +0100
+++ netpbm-10.27/converter/pbm/icontopbm.c	2005-05-12 11:36:39.875000000 +0200
@@ -12,6 +12,8 @@
 
 #include <string.h>
 
+#include <string.h>
+#include <limits.h>
 #include "pbm.h"
 
 /* size in bytes of a bitmap */
@@ -86,6 +88,11 @@ ReadIconFile(FILE *                const
     if ( *heightP <= 0 )
         pm_error( "invalid height (must be positive): %d", *heightP );
 
+    if ( *widthP > INT_MAX - 16 || *widthP < 0)
+        pm_error( "invalid width: %d", *widthP);
+    
+    overflow2(*widthP + 16, *heightP);
+    
     data_length = BitmapSize( *widthP, *heightP );
     *dataP = (short unsigned int *) malloc( data_length );
     if ( *dataP == NULL )
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pbm/mdatopbm.c netpbm-10.27/converter/pbm/mdatopbm.c
--- netpbm-10.27-orig/converter/pbm/mdatopbm.c	2004-03-20 05:09:15.000000000 +0100
+++ netpbm-10.27/converter/pbm/mdatopbm.c	2005-05-12 11:36:39.828125000 +0200
@@ -245,10 +245,13 @@ main(int argc, char **argv) {
         pm_readlittleshort(infile, &yy); nInCols = yy;
     }
     
+    overflow2(nOutCols, 8);
     nOutCols = 8 * nInCols;
     nOutRows = nInRows;
-    if (bScale) 
+    if (bScale) {
+        overflow2(nOutRows, 2);
         nOutRows *= 2;
+    }
 
     data = pbm_allocarray(nOutCols, nOutRows);
     
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pbm/mgrtopbm.c netpbm-10.27/converter/pbm/mgrtopbm.c
--- netpbm-10.27-orig/converter/pbm/mgrtopbm.c	2005-02-20 20:58:25.000000000 +0100
+++ netpbm-10.27/converter/pbm/mgrtopbm.c	2005-05-12 11:36:39.890625000 +0200
@@ -68,6 +68,8 @@ getinit(FILE * const file, 
     if (head.h_high < ' ' || head.l_high < ' ')
         pm_error("Invalid width field in MGR header");
     
+    overflow_add(*colsP, pad);
+
     *colsP = (((int)head.h_wide - ' ') << 6) + ((int)head.l_wide - ' ');
     *rowsP = (((int)head.h_high - ' ') << 6) + ((int) head.l_high - ' ');
     *padrightP = ( ( *colsP + pad - 1 ) / pad ) * pad - *colsP;
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pbm/pbmto10x.c netpbm-10.27/converter/pbm/pbmto10x.c
--- netpbm-10.27-orig/converter/pbm/pbmto10x.c	2004-03-20 05:23:36.000000000 +0100
+++ netpbm-10.27/converter/pbm/pbmto10x.c	2005-05-12 11:36:39.781250000 +0200
@@ -162,7 +162,7 @@ main(int argc, char * argv[]) {
         res_60x72();
 
     pm_close(ifp);
-    exit(0);
+    return 0;
 }
 
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pbm/pbmto4425.c netpbm-10.27/converter/pbm/pbmto4425.c
--- netpbm-10.27-orig/converter/pbm/pbmto4425.c	2002-09-06 18:03:50.000000000 +0200
+++ netpbm-10.27/converter/pbm/pbmto4425.c	2005-05-12 11:36:39.781250000 +0200
@@ -1,6 +1,7 @@
 #include <string.h>
 
 #include "pbm.h"
+#include <string.h>
 
 /*extern char *sys_errlist[];
 char *malloc();*/
@@ -72,7 +73,7 @@ char *argv[];
   xres = vmap_width * 2;
   yres = vmap_height * 3;
 
-  vmap = malloc(vmap_width * vmap_height * sizeof(char));
+  vmap = malloc3(vmap_width, vmap_height, sizeof(char));
   if(vmap == NULL)
 	{
 	  pm_error( "Cannot allocate memory" );
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pbm/pbmtoascii.c netpbm-10.27/converter/pbm/pbmtoascii.c
--- netpbm-10.27-orig/converter/pbm/pbmtoascii.c	2002-07-30 17:42:53.000000000 +0200
+++ netpbm-10.27/converter/pbm/pbmtoascii.c	2005-05-12 11:36:39.890625000 +0200
@@ -115,9 +115,11 @@ char* argv[];
         pm_usage( usage );
 
     pbm_readpbminit( ifp, &cols, &rows, &format );
+    overflow_add(cols, gridx);
     ccols = ( cols + gridx - 1 ) / gridx;
     bitrow = pbm_allocrow( cols );
     sig = (int*) pm_allocrow( ccols, sizeof(int) );
+    overflow_add(ccols, 1);
     line = (char*) pm_allocrow( ccols + 1, sizeof(char) );
 
     for ( row = 0; row < rows; row += gridy )
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pbm/pbmtocmuwm.c netpbm-10.27/converter/pbm/pbmtocmuwm.c
--- netpbm-10.27-orig/converter/pbm/pbmtocmuwm.c	1993-10-04 11:10:46.000000000 +0200
+++ netpbm-10.27/converter/pbm/pbmtocmuwm.c	2005-05-12 11:36:39.796875000 +0200
@@ -43,6 +43,7 @@ main( argc, argv )
     bitrow = pbm_allocrow( cols );
     
     /* Round cols up to the nearest multiple of 8. */
+    overflow_add(cols, 7);
     padright = ( ( cols + 7 ) / 8 ) * 8 - cols;
 
     putinit( rows, cols );
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pbm/pbmtogem.c netpbm-10.27/converter/pbm/pbmtogem.c
--- netpbm-10.27-orig/converter/pbm/pbmtogem.c	2000-06-09 09:07:05.000000000 +0200
+++ netpbm-10.27/converter/pbm/pbmtogem.c	2005-05-12 11:36:39.906250000 +0200
@@ -123,6 +123,7 @@ putinit (rows, cols)
   bitsperitem = 0;
   bitshift = 7;
   outcol = 0;
+  overflow_add(cols, 7);
   outmax = (cols + 7) / 8;
   outrow = (unsigned char *) pm_allocrow (outmax, sizeof (unsigned char));
   lastrow = (unsigned char *) pm_allocrow (outmax, sizeof (unsigned char));
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pbm/pbmtogo.c netpbm-10.27/converter/pbm/pbmtogo.c
--- netpbm-10.27-orig/converter/pbm/pbmtogo.c	2002-07-30 17:47:49.000000000 +0200
+++ netpbm-10.27/converter/pbm/pbmtogo.c	2005-05-12 11:36:39.812500000 +0200
@@ -90,6 +90,7 @@ main( argc, argv )
     bitrow = pbm_allocrow(cols);
 
     /* Round cols up to the nearest multiple of 8. */
+    overflow_add(cols, 7);
     rucols = ( cols + 7 ) / 8;
     bytesperrow = rucols;       /* GraphOn uses bytes */
     rucols = rucols * 8;
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pbm/pbmtoicon.c netpbm-10.27/converter/pbm/pbmtoicon.c
--- netpbm-10.27-orig/converter/pbm/pbmtoicon.c	2002-07-30 17:47:48.000000000 +0200
+++ netpbm-10.27/converter/pbm/pbmtoicon.c	2005-05-12 11:36:39.921875000 +0200
@@ -42,6 +42,7 @@ main( argc, argv )
     bitrow = pbm_allocrow( cols );
     
     /* Round cols up to the nearest multiple of 16. */
+    overflow_add(cols, 15);
     pad = ( ( cols + 15 ) / 16 ) * 16 - cols;
     padleft = pad / 2;
     padright = pad - padleft;
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pbm/pbmtolj.c netpbm-10.27/converter/pbm/pbmtolj.c
--- netpbm-10.27-orig/converter/pbm/pbmtolj.c	2004-03-20 05:43:25.000000000 +0100
+++ netpbm-10.27/converter/pbm/pbmtolj.c	2005-05-12 11:36:39.859375000 +0200
@@ -30,6 +30,7 @@
 #include "pbm.h"
 #include <string.h>
 #include <assert.h>
+#include <string.h>
 
 static int dpi = 75;
 static int floating = 0;  /* suppress the ``ESC & l 0 E'' ? */
@@ -123,7 +124,11 @@ main( argc, argv )
     pbm_readpbminit( ifp, &cols, &rows, &format );
     bitrow = pbm_allocrow( cols );
 
+    overflow_add(cols, 8);
     rowBufferSize = (cols + 7) / 8;
+    overflow_add(rowBufferSize, 128);
+    overflow_add(rowBufferSize, rowBufferSize+128);
+    overflow_add(rowBufferSize+10, rowBufferSize/8);
     packBufferSize = rowBufferSize + (rowBufferSize + 127) / 128 + 1;
     deltaBufferSize = rowBufferSize + rowBufferSize / 8 + 10;
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pbm/pbmtomacp.c netpbm-10.27/converter/pbm/pbmtomacp.c
--- netpbm-10.27-orig/converter/pbm/pbmtomacp.c	2002-09-06 18:04:22.000000000 +0200
+++ netpbm-10.27/converter/pbm/pbmtomacp.c	2005-05-12 11:36:39.921875000 +0200
@@ -104,6 +104,7 @@ char *argv[];
   if( !lflg )
     left = 0;
 
+  overflow_add(left, MAX_COLS - 1);
   if( rflg )
   { if( right - left >= MAX_COLS )
       right = left + MAX_COLS - 1;
@@ -114,6 +115,8 @@ char *argv[];
   if( !tflg )
     top = 0;
 
+  overflow_add(top, MAX_LINES - 1);
+
   if( bflg )
   { if( bottom - top >= MAX_LINES )
       bottom = top + MAX_LINES - 1;
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pbm/pbmtomda.c netpbm-10.27/converter/pbm/pbmtomda.c
--- netpbm-10.27-orig/converter/pbm/pbmtomda.c	2004-01-11 22:11:22.000000000 +0100
+++ netpbm-10.27/converter/pbm/pbmtomda.c	2005-05-12 11:36:39.906250000 +0200
@@ -179,6 +179,7 @@ int main(int argc, char **argv)
     
     nOutRowsUnrounded = bScale ? nInRows/2 : nInRows;
 
+    overflow_add(nOutRowsUnrounded, 3);
     nOutRows = ((nOutRowsUnrounded + 3) / 4) * 4;
         /* MDA wants rows a multiple of 4 */   
     nOutCols = nInCols / 8;
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pbm/pbmtomgr.c netpbm-10.27/converter/pbm/pbmtomgr.c
--- netpbm-10.27-orig/converter/pbm/pbmtomgr.c	1993-10-04 11:10:50.000000000 +0200
+++ netpbm-10.27/converter/pbm/pbmtomgr.c	2005-05-12 11:36:39.765625000 +0200
@@ -43,6 +43,7 @@ main( argc, argv )
     bitrow = pbm_allocrow( cols );
     
     /* Round cols up to the nearest multiple of 8. */
+    overflow_add(cols, 7);
     padright = ( ( cols + 7 ) / 8 ) * 8 - cols;
 
     putinit( rows, cols );
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pbm/pbmtoppa/Makefile netpbm-10.27/converter/pbm/pbmtoppa/Makefile
--- netpbm-10.27-orig/converter/pbm/pbmtoppa/Makefile	2004-03-29 18:50:15.000000000 +0200
+++ netpbm-10.27/converter/pbm/pbmtoppa/Makefile	2005-05-12 09:29:46.953125000 +0200
@@ -3,7 +3,7 @@ ifeq ($(SRCDIR)x,x)
   BUILDDIR = $(SRCDIR)
 endif
 SUBDIR = converter/pbm/pbmtoppa
-VPATH=.:$(SRCDIR)/$(SUBDIR)
+VPATH=.:$(SRCDIR)/$(SUBDIR):$(CSRCDIR)/res
 
 include $(BUILDDIR)/Makefile.config
 
@@ -20,8 +20,8 @@ HEADERLINKS = pm_config.h pm.h pbm.h
 
 include $(SRCDIR)/Makefile.common
 
-pbmtoppa: $(OBJECTS) $(NETPBMLIB) $(LIBOPT)
-	$(LD) $(LDFLAGS) -o pbmtoppa $(OBJECTS) \
+pbmtoppa: %: $(OBJECTS) %-res.o $(NETPBMLIB) $(LIBOPT)
+	$(LD) $(LDFLAGS) -o pbmtoppa $(OBJECTS) $@-res.o \
 	  -lm `$(LIBOPT) $(NETPBMLIB)` $(LDLIBS) \
 	  $(RPATH) $(LADD)
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pbm/pbmtoppa/pbm.c netpbm-10.27/converter/pbm/pbmtoppa/pbm.c
--- netpbm-10.27-orig/converter/pbm/pbmtoppa/pbm.c	2000-06-01 19:20:30.000000000 +0200
+++ netpbm-10.27/converter/pbm/pbmtoppa/pbm.c	2005-05-12 11:36:39.843750000 +0200
@@ -105,6 +105,7 @@ int pbm_readline(pbm_stat* pbm,unsigned 
     return 0;
 
   case P4:
+    overflow_add(pbm->width, 7);
     tmp=(pbm->width+7)/8;
     tmp2=fread(data,1,tmp,pbm->fptr);
     if(tmp2 == tmp)
@@ -129,6 +130,7 @@ void pbm_unreadline (pbm_stat *pbm, void
     return;
 
   pbm->unread = 1;
+  overflow_add(pbm->width, 7);
   pbm->revdata = malloc ((pbm->width+7)/8);
   memcpy (pbm->revdata, data, (pbm->width+7)/8);
   pbm->current_line--;
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pbm/pbmtoppa/pbmtoppa.c netpbm-10.27/converter/pbm/pbmtoppa/pbmtoppa.c
--- netpbm-10.27-orig/converter/pbm/pbmtoppa/pbmtoppa.c	2002-07-30 17:48:16.000000000 +0200
+++ netpbm-10.27/converter/pbm/pbmtoppa/pbmtoppa.c	2005-05-12 11:36:39.843750000 +0200
@@ -19,6 +19,10 @@
 
 #include "defaults.h"
 
+#ifdef __WIN32__
+#include <windows.h>
+#endif /* __WIN32__ */
+
 /* Paper sizes in 600ths of an inch. */
 
 /* US is 8.5 in by 11 in */
@@ -389,6 +393,14 @@ main (int argc, char *argv[])
 
   if(!stat(defaultcfgfile,&tmpstat))
     read_config_file(defaultcfgfile);
+#ifdef __WIN32__
+  else {
+	char ppaConfigFileName [MAX_PATH];
+	sprintf(ppaConfigFileName, "%s\\etc\\pbmtoppa.conf", exec_parent);
+    if(!stat(ppaConfigFileName,&tmpstat))
+      read_config_file(ppaConfigFileName);
+  }
+#endif /* __WIN32__ */
 
   for(argn=1; argn<argc; argn++)
   {
@@ -471,6 +483,7 @@ main (int argc, char *argv[])
     }
   }
 
+  overflow_add(Width, 7);
   Pwidth=(Width+7)/8;
   printer.fptr=out;
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pbm/pbmtox10bm.c netpbm-10.27/converter/pbm/pbmtox10bm.c
--- netpbm-10.27-orig/converter/pbm/pbmtox10bm.c	2002-07-30 17:47:46.000000000 +0200
+++ netpbm-10.27/converter/pbm/pbmtox10bm.c	2005-05-12 11:36:39.828125000 +0200
@@ -57,6 +57,7 @@ main( argc, argv )
     bitrow = pbm_allocrow( cols );
 
     /* Compute padding to round cols up to the nearest multiple of 16. */
+    overflow_add(cols, 15);
     padright = ( ( cols + 15 ) / 16 ) * 16 - cols;
 
     printf( "#define %s_width %d\n", name, cols );
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pbm/pbmtoxbm.c netpbm-10.27/converter/pbm/pbmtoxbm.c
--- netpbm-10.27-orig/converter/pbm/pbmtoxbm.c	2004-03-13 20:37:59.000000000 +0100
+++ netpbm-10.27/converter/pbm/pbmtoxbm.c	2005-05-12 11:36:39.812500000 +0200
@@ -100,6 +100,7 @@ main(int argc, char * argv[]) {
     bitrow = pbm_allocrow(cols);
     
     /* Compute padding to round cols up to the nearest multiple of 8. */
+    overflow_add(cols, 8);
     padright = ((cols + 7)/8) * 8 - cols;
 
     printf("#define %s_width %d\n", name, cols);
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pbm/pbmtoybm.c netpbm-10.27/converter/pbm/pbmtoybm.c
--- netpbm-10.27-orig/converter/pbm/pbmtoybm.c	1993-10-04 11:10:43.000000000 +0200
+++ netpbm-10.27/converter/pbm/pbmtoybm.c	2005-05-12 11:36:39.875000000 +0200
@@ -45,6 +45,7 @@ main( argc, argv )
     bitrow = pbm_allocrow( cols );
     
     /* Compute padding to round cols up to the nearest multiple of 16. */
+    overflow_add(cols, 16);
     padright = ( ( cols + 15 ) / 16 ) * 16 - cols;
 
     putinit( cols, rows );
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pbm/pbmtozinc.c netpbm-10.27/converter/pbm/pbmtozinc.c
--- netpbm-10.27-orig/converter/pbm/pbmtozinc.c	2002-07-30 17:47:45.000000000 +0200
+++ netpbm-10.27/converter/pbm/pbmtozinc.c	2005-05-12 11:36:39.765625000 +0200
@@ -66,6 +66,7 @@ main( argc, argv )
     bitrow = pbm_allocrow( cols );
 
     /* Compute padding to round cols up to the nearest multiple of 16. */
+    overflow_add(cols, 16);
     padright = ( ( cols + 15 ) / 16 ) * 16 - cols;
 
     printf( "USHORT %s[] = {\n",name);
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pbm/pktopbm.c netpbm-10.27/converter/pbm/pktopbm.c
--- netpbm-10.27-orig/converter/pbm/pktopbm.c	2004-03-20 05:52:21.000000000 +0100
+++ netpbm-10.27/converter/pbm/pktopbm.c	2005-05-12 11:36:39.859375000 +0200
@@ -274,6 +274,7 @@ main(int argc, char *argv[]) {
         if (flagbyte == 7) {            /* long form preamble */
             integer packetlength = get32() ;    /* character packet length */
             car = get32() ;         /* character number */
+            overflow_add(packetlength, pktopbm_pkloc);
             endofpacket = packetlength + pktopbm_pkloc;
                 /* calculate end of packet */
             if ((car >= MAXPKCHAR) || !filename[car]) {
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pbm/thinkjettopbm.l netpbm-10.27/converter/pbm/thinkjettopbm.l
--- netpbm-10.27-orig/converter/pbm/thinkjettopbm.l	2005-01-02 23:39:18.000000000 +0100
+++ netpbm-10.27/converter/pbm/thinkjettopbm.l	2005-05-12 11:36:39.843750000 +0200
@@ -94,7 +94,9 @@ DIG             [0-9]
 <RASTERMODE>\033\*b{DIG}+W  {
                             int l;
                             if (rowCount >= rowCapacity) {
+				overflow_add(rowCapacity, 100);
                                 rowCapacity += 100;
+				overflow2(rowCapacity, sizeof *rows);
                                 rows = realloc (rows, rowCapacity * sizeof *rows);
                                 if (rows == NULL)
                                     pm_error ("Out of memory.");
@@ -204,6 +206,8 @@ yywrap (void)
     /*
      * Quite simple since ThinkJet bit arrangement matches PBM
      */
+
+    overflow2(maxRowLength, 8);
     pbm_writepbminit(stdout, maxRowLength*8, rowCount, 0);
 
     packed_bitrow = malloc(maxRowLength);
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pbm/ybmtopbm.c netpbm-10.27/converter/pbm/ybmtopbm.c
--- netpbm-10.27-orig/converter/pbm/ybmtopbm.c	1993-10-04 11:10:35.000000000 +0200
+++ netpbm-10.27/converter/pbm/ybmtopbm.c	2005-05-12 11:36:39.921875000 +0200
@@ -88,6 +88,7 @@ getinit( file, colsP, rowsP, depthP, pad
 	pm_error( "EOF / read error" );
 
     *depthP = 1;
+    overflow_add(*colsP, 15);
     *padrightP = ( ( *colsP + 15 ) / 16 ) * 16 - *colsP;
     bitsperitem = 0;
     }
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pgm/lispmtopgm.c netpbm-10.27/converter/pgm/lispmtopgm.c
--- netpbm-10.27-orig/converter/pgm/lispmtopgm.c	2002-09-06 18:27:00.000000000 +0200
+++ netpbm-10.27/converter/pgm/lispmtopgm.c	2005-05-12 11:36:39.750000000 +0200
@@ -57,6 +57,7 @@ main( argc, argv )
         pm_error( "depth (%d bits) is too large", depth);
 
     pgm_writepgminit( stdout, cols, rows, (gray) maxval, 0 );
+    overflow_add(cols, 7);
     grayrow = pgm_allocrow( ( cols + 7 ) / 8 * 8 );
 
     for ( row = 0; row < rows; ++row )
@@ -102,6 +103,8 @@ getinit( file, colsP, rowsP, depthP, pad
     if ( *depthP == 0 )
 	*depthP = 1;	/* very old file */
     
+    overflow_add((int)colsP, 31);
+        
     *padrightP = ( ( *colsP + 31 ) / 32 ) * 32 - *colsP;
     
     if ( *colsP != (cols_32 - *padrightP) ) {
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/pgm/psidtopgm.c netpbm-10.27/converter/pgm/psidtopgm.c
--- netpbm-10.27-orig/converter/pgm/psidtopgm.c	2002-07-30 17:57:36.000000000 +0200
+++ netpbm-10.27/converter/pgm/psidtopgm.c	2005-05-12 11:36:39.734375000 +0200
@@ -60,6 +60,7 @@ char* argv[];
 	    "bits/sample (%d) is too large.", bitspersample );
 
     pgm_writepgminit( stdout, cols, rows, (gray) maxval, 0 );
+    overflow_add(cols, 7);
     grayrow = pgm_allocrow( ( cols + 7 ) / 8 * 8 );
     for ( row = 0; row < rows; ++row)
 	{
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/Makefile netpbm-10.27/converter/ppm/Makefile
--- netpbm-10.27-orig/converter/ppm/Makefile	2004-10-16 20:55:28.000000000 +0200
+++ netpbm-10.27/converter/ppm/Makefile	2005-05-12 11:36:39.562500000 +0200
@@ -11,7 +11,7 @@ SUBDIRS = hpcdtoppm ppmtompeg
 
 PORTBINARIES =	411toppm eyuvtoppm gouldtoppm ilbmtoppm imgtoppm \
 		leaftoppm mtvtoppm neotoppm \
-		pcxtoppm pc1toppm pi1toppm picttoppm pjtoppm \
+		pcxtoppm pc1toppm pi1toppm pjtoppm \
 		ppmtoacad ppmtoarbtxt \
 		ppmtobmp ppmtoeyuv ppmtogif ppmtoicr ppmtoilbm \
 		ppmtoleaf ppmtolj ppmtomitsu ppmtoneo \
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/hpcdtoppm/Makefile netpbm-10.27/converter/ppm/hpcdtoppm/Makefile
--- netpbm-10.27-orig/converter/ppm/hpcdtoppm/Makefile	2003-09-19 22:34:03.000000000 +0200
+++ netpbm-10.27/converter/ppm/hpcdtoppm/Makefile	2005-05-12 10:45:29.187500000 +0200
@@ -19,7 +19,7 @@ install: install.bin.local
 install.bin.local: $(PKGDIR)/bin
 # In June 2002, pcdovtoppm replaced pcdindex
 	cd $(PKGDIR)/bin ; \
-	$(SYMLINK) pcdindex$(EXE) pcdovtoppm
+	$(SYMLINK) pcdindex$(EXE) pcdovtoppm$(EXE)
 
 
 FORCE:
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/ilbmtoppm.c netpbm-10.27/converter/ppm/ilbmtoppm.c
--- netpbm-10.27-orig/converter/ppm/ilbmtoppm.c	2003-08-10 00:30:10.000000000 +0200
+++ netpbm-10.27/converter/ppm/ilbmtoppm.c	2005-05-12 11:36:39.656250000 +0200
@@ -580,6 +580,7 @@ decode_row(ifp, chunksizeP, chunkyrow, n
     rawtype *chp;
 
     cols = bmhd->w;
+    overflow_add(cols, 15);
     bytes = RowBytes(cols);
     for( plane = 0; plane < nPlanes; plane++ ) {
         int mask;
@@ -620,6 +621,7 @@ decode_mask(ifp, chunksizeP, chunkyrow, 
         case mskNone:
             break;
         case mskHasMask:        /* mask plane */
+            overflow_add(cols, 15);
             read_ilbm_plane(ifp, chunksizeP, RowBytes(cols), 
                             bmhd->compression);
             if( maskfile ) {
@@ -668,6 +670,23 @@ decode_mask(ifp, chunksizeP, chunkyrow, 
  Multipalette handling
  ****************************************************************************/
 
+static void *
+xmalloc2(x, y)
+    int x;
+    int y;
+{
+    void *mem;
+
+    overflow2(x,y);
+    if( x * y == 0 )
+        return NULL;
+
+    mem = malloc2(x,y);
+    if( mem == NULL )
+        pm_error("out of memory allocating %d bytes", x * y);
+    return mem;
+}
+
 
 static void
 multi_adjust(cmap, row, palchange)
@@ -1262,6 +1281,9 @@ dcol_to_ppm(ifp, chunksize, bmhd, cmap, 
     if( redmaxval != maxval || greenmaxval != maxval || bluemaxval != maxval )
         pm_message("scaling colors to %d bits", pm_maxvaltobits(maxval));
     
+    overflow_add(redmaxval, 1);
+    overflow_add(greenmaxval, 1);
+    overflow_add(bluemaxval, 1);
     MALLOCARRAY_NOFAIL(redtable,   redmaxval   +1);
     MALLOCARRAY_NOFAIL(greentable, greenmaxval +1);
     MALLOCARRAY_NOFAIL(bluetable,  bluemaxval  +1);
@@ -1674,7 +1696,9 @@ PCHG_ConvertSmall(PCHG, cmap, mask, data
             ChangeCount32 = *data++;
             datasize -= 2;
 
+            overflow_add(ChangeCount16, ChangeCount32);
             changes = ChangeCount16 + ChangeCount32;
+            overflow_add(changes, 1);
             for( i = 0; i < changes; i++ ) {
                 if( totalchanges >= PCHG->TotalChanges ) goto fail;
                 if( datasize < 2 ) goto fail;
@@ -1801,6 +1825,7 @@ PCHG_ConvertBig(PCHG, cmap, mask, datasi
             if( datasize < 2 ) goto fail;
             changes = BIG_WORD(data); data += 2; datasize -= 2;
 
+            overflow_add(changes, 1);
             MALLOCARRAY_NOFAIL(cmap->mp_change[row], changes + 1);
             for( i = 0; i < changes; i++ ) {
                 if( totalchanges >= PCHG->TotalChanges ) goto fail;
@@ -1913,6 +1938,9 @@ read_pchg(ifp, iffid, chunksize, cmap)
         cmap->mp_change[i] = NULL;
     if( PCHG.StartLine < 0 ) {
         int nch;
+        if(PCHG.MaxReg < PCHG.MinReg)
+        	pm_error("assert: MinReg > MaxReg");
+        overflow_add(PCHG.MaxReg-PCHG.MinReg, 2);
         nch = PCHG.MaxReg - PCHG.MinReg +1;
         MALLOCARRAY_NOFAIL(cmap->mp_init, nch + 1);
         for( i = 0; i < nch; i++ )
@@ -1990,6 +2018,7 @@ process_body( FILE *          const ifp,
     if( typeid == ID_ILBM ) {
         int isdeep;
 
+        overflow_add(bmhd->w, 15);
         MALLOCARRAY_NOFAIL(ilbmrow, RowBytes(bmhd->w));
         *viewportmodesP |= fakeviewport;      /* -isham/-isehb */
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/imgtoppm.c netpbm-10.27/converter/ppm/imgtoppm.c
--- netpbm-10.27-orig/converter/ppm/imgtoppm.c	2002-09-06 18:30:03.000000000 +0200
+++ netpbm-10.27/converter/ppm/imgtoppm.c	2005-05-12 11:36:39.671875000 +0200
@@ -84,6 +84,7 @@ main(int argc, char ** argv) {
             len = atoi((char*) buf );
             if ( fread( buf, len, 1, ifp ) != 1 )
                 pm_error( "bad colormap buf" );
+            overflow2(cmaplen, 3);
             if ( cmaplen * 3 != len )
             {
                 pm_message(
@@ -105,6 +106,7 @@ main(int argc, char ** argv) {
                 pm_error( "bad pixel data header" );
             buf[8] = '\0';
             len = atoi((char*) buf );
+            overflow2(cols, rows);
             if ( len != cols * rows )
                 pm_message(
                     "pixel data length (%d) does not match image size (%d)",
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/pcxtoppm.c netpbm-10.27/converter/ppm/pcxtoppm.c
--- netpbm-10.27-orig/converter/ppm/pcxtoppm.c	2004-04-19 23:30:42.000000000 +0200
+++ netpbm-10.27/converter/ppm/pcxtoppm.c	2005-05-12 11:36:39.687500000 +0200
@@ -376,6 +376,7 @@ pcx_16col_to_ppm(ifp, cols, rows, BytesP
     }
 
     /*  BytesPerLine should be >= BitsPerPixel * cols / 8  */
+    overflow2(BytesPerLine, 8);
     rawcols = BytesPerLine * 8 / BitsPerPixel;
     if( cols > rawcols ) {
         pm_message("warning - BytesPerLine = %d, "
@@ -383,6 +384,7 @@ pcx_16col_to_ppm(ifp, cols, rows, BytesP
                    BytesPerLine, rawcols);
         cols = rawcols;
     }
+    overflow2(Planes, BytesPerLine);
     pcxrow = (unsigned char *)
         pm_allocrow(Planes * BytesPerLine, sizeof(unsigned char));
     rawrow = (unsigned char *)pm_allocrow(rawcols, sizeof(unsigned char));
@@ -578,6 +580,8 @@ pcx_planes_to_pixels(pixels, bitplanes, 
     /*
      * clear the pixel buffer
      */
+    
+    overflow2(bytesperline, 8);
     npixels = (bytesperline * 8) / bitsperpixel;
     p    = pixels;
     while (--npixels >= 0)
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/picttoppm.c netpbm-10.27/converter/ppm/picttoppm.c
--- netpbm-10.27-orig/converter/ppm/picttoppm.c	2005-02-20 22:36:52.000000000 +0100
+++ netpbm-10.27/converter/ppm/picttoppm.c	2005-05-12 11:36:39.578125000 +0200
@@ -1,3 +1,5 @@
+#error "Unfixable. Don't ship me"
+
 /*
  * picttoppm.c -- convert a MacIntosh PICT file to PPM format.
  *
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/pjtoppm.c netpbm-10.27/converter/ppm/pjtoppm.c
--- netpbm-10.27-orig/converter/ppm/pjtoppm.c	2003-07-06 23:45:36.000000000 +0200
+++ netpbm-10.27/converter/ppm/pjtoppm.c	2005-05-12 11:36:39.593750000 +0200
@@ -127,19 +127,21 @@ main(argc, argv)
                 case 'V':   /* send plane */
                 case 'W':   /* send last plane */
                     if (rows == -1 || r >= rows || image == NULL) {
-                        if (rows == -1 || r >= rows)
+                        if (rows == -1 || r >= rows) {
+                            overflow_add(rows, 100);
                             rows += 100;
+                        }
                         if (image == NULL) {
-                            MALLOCARRAY(image, rows * planes);
-                            MALLOCARRAY(imlen, rows * planes);
+                            image = (unsigned char **)
+                                malloc3(rows , planes , sizeof(unsigned char *));
+                            imlen = (int *) malloc3(rows , planes,  sizeof(int));
                         }
                         else {
+                            overflow2(rows,planes);
                             image = (unsigned char **) 
-                                realloc(image, 
-                                        rows * planes * 
+                                realloc2(image, rows * planes,
                                         sizeof(unsigned char *));
-                            imlen = (int *) 
-                                realloc(imlen, rows * planes * sizeof(int));
+                            imlen = (int *) realloc2(imlen, rows * planes, sizeof(int));
                         }
                     }
                     if (image == NULL || imlen == NULL)
@@ -212,8 +214,10 @@ main(argc, argv)
                 for (i = 0, c = 0; c < imlen[p + r * planes]; c += 2)
                     for (cmd = image[p + r * planes][c],
                              val = image[p + r * planes][c+1]; 
-                         cmd >= 0 && i < newcols; cmd--, i++) 
+                         cmd >= 0 && i < newcols; cmd--, i++) {
                         buf[i] = val;
+                        overflow_add(i, 1);
+                    }
                 cols = cols > i ? cols : i;
                 free(image[p + r * planes]);
                 /* 
@@ -224,6 +228,7 @@ main(argc, argv)
                 image[p + r * planes] = (unsigned char *) realloc(buf, i);
             }
         }
+        overflow2(cols, 8);
         cols *= 8;
     }
             
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/ppmtoeyuv.c netpbm-10.27/converter/ppm/ppmtoeyuv.c
--- netpbm-10.27-orig/converter/ppm/ppmtoeyuv.c	2003-07-07 00:22:35.000000000 +0200
+++ netpbm-10.27/converter/ppm/ppmtoeyuv.c	2005-05-12 11:36:39.656250000 +0200
@@ -113,6 +113,7 @@ create_multiplication_tables(const pixva
 
     int index;
 
+    overflow_add(maxval, 1);
     MALLOCARRAY_NOFAIL(mult299   , maxval+1);
     MALLOCARRAY_NOFAIL(mult587   , maxval+1);
     MALLOCARRAY_NOFAIL(mult114   , maxval+1);
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/ppmtoicr.c netpbm-10.27/converter/ppm/ppmtoicr.c
--- netpbm-10.27-orig/converter/ppm/ppmtoicr.c	2003-02-22 23:05:03.000000000 +0100
+++ netpbm-10.27/converter/ppm/ppmtoicr.c	2005-05-12 11:36:39.671875000 +0200
@@ -169,7 +169,7 @@ char* argv[];
 
 	if (rleflag) {	
 		pm_message("sending run-length encoded picture data ..." );
-		testimage = (char*) malloc(rows*cols);
+		testimage = (char*) malloc2(rows, cols);
 		p = testimage;
 		for (i=0; i<rows; i++)
 			for (j=0; j<cols; j++) 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/ppmtoilbm.c netpbm-10.27/converter/ppm/ppmtoilbm.c
--- netpbm-10.27-orig/converter/ppm/ppmtoilbm.c	2004-03-20 06:06:39.000000000 +0100
+++ netpbm-10.27/converter/ppm/ppmtoilbm.c	2005-05-12 11:36:39.625000000 +0200
@@ -810,12 +810,16 @@ main(argc, argv)
 
     if( mode != MODE_CMAP ) {
         register int i;
+        overflow_add(cols, 15);
         MALLOCARRAY_NOFAIL(coded_rowbuf, RowBytes(cols));
         for( i = 0; i < RowBytes(cols); i++ )
             coded_rowbuf[i] = 0;
-        if( DO_COMPRESS )
+        if( DO_COMPRESS ) {
+            overflow2(cols,2);
+            overflow_add(cols *2, 2);
             MALLOCARRAY_NOFAIL(compr_rowbuf, WORSTCOMPR(RowBytes(cols)));
     }
+    }
 
     switch( mode ) {
         case MODE_HAM:
@@ -1905,6 +1909,7 @@ ppm_to_rgb8(ifp, cols, rows, maxval)
 
     maskmethod = 0;     /* no masking - RGB8 uses genlock bits */
     compmethod = 4;     /* RGB8 files are always compressed */
+    overflow2(cols, 4);
     MALLOCARRAY_NOFAIL(compr_row, cols * 4);
 
     if( maxval != 255 ) {
@@ -1993,6 +1998,7 @@ ppm_to_rgbn(ifp, cols, rows, maxval)
 
     maskmethod = 0;     /* no masking - RGBN uses genlock bits */
     compmethod = 4;     /* RGBN files are always compressed */
+    overflow2(cols, 2);
     MALLOCARRAY_NOFAIL(compr_row, cols * 2);
 
     if( maxval != 15 ) {
@@ -2405,6 +2411,21 @@ runbyte1(size)
     register unsigned char *inbuf = coded_rowbuf;
     register unsigned char *outbuf = compr_rowbuf;
 
+static void *
+xmalloc2(x,y)
+    int x;
+    int y;
+{
+    void *mem;
+    
+    overflow2(x, y);
+
+    mem = malloc2(x, y);
+    if( mem == NULL )
+        pm_error("out of memory allocating %d bytes", x * y);
+    return mem;
+}
+
 
     in=out=0;
     while( in<size ) {
@@ -2475,6 +2496,7 @@ make_val_table(oldmaxval, newmaxval)
     int i;
     int *table;
 
+    overflow_add(oldmaxval, 1);
     MALLOCARRAY_NOFAIL(table, oldmaxval + 1);
     for(i = 0; i <= oldmaxval; i++ )
         table[i] = (i * newmaxval + oldmaxval/2) / oldmaxval;
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/ppmtolj.c netpbm-10.27/converter/ppm/ppmtolj.c
--- netpbm-10.27-orig/converter/ppm/ppmtolj.c	2002-09-06 18:31:57.000000000 +0200
+++ netpbm-10.27/converter/ppm/ppmtolj.c	2005-05-12 11:36:39.562500000 +0200
@@ -182,6 +182,7 @@ int main(int argc, char *argv[]) {
     pixels = ppm_readppm( ifp, &cols, &rows, &maxval );
 
     pm_close( ifp );
+    overflow2(cols,6);
     obuf = (unsigned char *) pm_allocrow(cols * 3, sizeof(unsigned char));
     cbuf = (unsigned char *) pm_allocrow(cols * 6, sizeof(unsigned char));
     if (mode == C_TRANS_MODE_DELTA)
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/ppmtomitsu.c netpbm-10.27/converter/ppm/ppmtomitsu.c
--- netpbm-10.27-orig/converter/ppm/ppmtomitsu.c	2003-07-06 23:04:25.000000000 +0200
+++ netpbm-10.27/converter/ppm/ppmtomitsu.c	2005-05-12 11:36:39.484375000 +0200
@@ -164,6 +164,8 @@ int main( argc, argv )
         medias = MSize_User;
 
         if (dpi300) {
+        	overflow2(medias.maxcols, 2);
+        	overflow2(medias.maxrows, 2);
                 medias.maxcols *= 2;
                 medias.maxrows *= 2;
         }
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/ppmtompeg/Makefile netpbm-10.27/converter/ppm/ppmtompeg/Makefile
--- netpbm-10.27-orig/converter/ppm/ppmtompeg/Makefile	2004-11-27 00:20:03.000000000 +0100
+++ netpbm-10.27/converter/ppm/ppmtompeg/Makefile	2005-05-12 09:29:46.968750000 +0200
@@ -72,15 +72,15 @@ else
   LIBOPTR =
 endif
 
-ppmtompeg: $(OBJECTS) $(NETPBMLIB) $(LIBOPT)
+ppmtompeg: $(OBJECTS) ppmtompeg-res.o $(NETPBMLIB) $(LIBOPT)
 	$(LD) -o $@ $(LDFLAGS) \
-          $(OBJECTS) `$(LIBOPT) $(NETPBMLIB) $(LIBOPTR) $(JPEGLIBX)` \
+          $(OBJECTS) $@-res.o `$(LIBOPT) $(NETPBMLIB) $(LIBOPTR) $(JPEGLIBX)` \
 	  $(NETWORKLD) $(MATHLIB) $(LDLIBS) \
 	  $(RPATH) $(LADD)
 
-profile: $(OBJECTS) $(NETPBMLIB) $(LIBOPT)
+profile: $(OBJECTS) profile-res.o $(NETPBMLIB) $(LIBOPT)
 	$(LD) -o $@ -Bstatic -pg $(LDFLAGS) \
-          $(OBJECTS) `$(LIBOPT) $(NETPBMLIB) $(LIBOPTR) $(JPEGLIBX)` \
+          $(OBJECTS) $@-res.o `$(LIBOPT) $(NETPBMLIB) $(LIBOPTR) $(JPEGLIBX)` \
 	  $(NETWORKLD) $(MATHLIB) $(LDLIBS) \
 	  $(RPATH) $(LADD)
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/ppmtompeg/frame.c netpbm-10.27/converter/ppm/ppmtompeg/frame.c
--- netpbm-10.27-orig/converter/ppm/ppmtompeg/frame.c	2004-11-27 00:44:01.000000000 +0100
+++ netpbm-10.27/converter/ppm/ppmtompeg/frame.c	2005-05-12 11:36:39.531250000 +0200
@@ -137,24 +137,24 @@ int i;
 omfrw->orig_y = NULL;
 Fsize_x = out_x;
 /* Allocate new frame memory */
-    omfrw->orig_y = (uint8 **) malloc(sizeof(uint8 *) * Fsize_y);
+    omfrw->orig_y = (uint8 **) malloc2(sizeof(uint8 *), Fsize_y);
     ERRCHK(omfrw->orig_y, "malloc");
     for (y = 0; y < Fsize_y; y++) {
-    omfrw->orig_y[y] = (uint8 *) malloc(sizeof(uint8) * out_x);
+    omfrw->orig_y[y] = (uint8 *) malloc2(sizeof(uint8), out_x);
     ERRCHK(omfrw->orig_y[y], "malloc");
     }
 
-    omfrw->orig_cr = (uint8 **) malloc(sizeof(int8 *) * Fsize_y / 2);
+    omfrw->orig_cr = (uint8 **) malloc2(sizeof(int8 *), Fsize_y / 2);
     ERRCHK(omfrw->orig_cr, "malloc");
     for (y = 0; y < Fsize_y / 2; y++) {
-    omfrw->orig_cr[y] = (uint8 *) malloc(sizeof(int8) * out_x / 2);
+    omfrw->orig_cr[y] = (uint8 *) malloc2(sizeof(int8), out_x / 2);
     ERRCHK(omfrw->orig_cr[y], "malloc");
     }
 
-    omfrw->orig_cb = (uint8 **) malloc(sizeof(int8 *) * Fsize_y / 2);
+    omfrw->orig_cb = (uint8 **) malloc2(sizeof(int8 *), Fsize_y / 2);
     ERRCHK(omfrw->orig_cb, "malloc");
     for (y = 0; y < Fsize_y / 2; y++) {
-    omfrw->orig_cb[y] = (uint8 *) malloc(sizeof(int8) * out_x / 2);
+    omfrw->orig_cb[y] = (uint8 *) malloc2(sizeof(int8), out_x / 2);
     ERRCHK(omfrw->orig_cb[y], "malloc");
     }
 
@@ -205,24 +205,24 @@ int i;
 Fsize_y = out_y;
 
 /* Allocate new frame memory */
-    omfrh->orig_y = (uint8 **) malloc(sizeof(uint8 *) * out_y);
+    omfrh->orig_y = (uint8 **) malloc2(sizeof(uint8 *), out_y);
     ERRCHK(omfrh->orig_y, "malloc");
     for (y = 0; y < out_y; y++) {
-    omfrh->orig_y[y] = (uint8 *) malloc(sizeof(uint8) * Fsize_x);
+    omfrh->orig_y[y] = (uint8 *) malloc2(sizeof(uint8), Fsize_x);
     ERRCHK(omfrh->orig_y[y], "malloc");
     }
 
-    omfrh->orig_cr = (uint8 **) malloc(sizeof(int8 *) * out_y / 2);
+    omfrh->orig_cr = (uint8 **) malloc2(sizeof(int8 *), out_y / 2);
     ERRCHK(omfrh->orig_cr, "malloc");
     for (y = 0; y < out_y / 2; y++) {
-    omfrh->orig_cr[y] = (uint8 *) malloc(sizeof(int8) * Fsize_x / 2);
+    omfrh->orig_cr[y] = (uint8 *) malloc2(sizeof(int8), Fsize_x / 2);
     ERRCHK(omfrh->orig_cr[y], "malloc");
     }
 
-    omfrh->orig_cb = (uint8 **) malloc(sizeof(int8 *) * out_y / 2);
+    omfrh->orig_cb = (uint8 **) malloc2(sizeof(int8 *), out_y / 2);
     ERRCHK(omfrh->orig_cb, "malloc");
     for (y = 0; y < out_y / 2; y++) {
-    omfrh->orig_cb[y] = (uint8 *) malloc(sizeof(int8) * Fsize_x / 2);
+    omfrh->orig_cb[y] = (uint8 *) malloc2(sizeof(int8), Fsize_x / 2);
     ERRCHK(omfrh->orig_cb[y], "malloc");
     }
 
@@ -522,20 +522,20 @@ Frame_AllocBlocks(frame)
     dctx = Fsize_x / DCTSIZE;
     dcty = Fsize_y / DCTSIZE;
 
-    frame->y_blocks = (Block **) malloc(sizeof(Block *) * dcty);
+    frame->y_blocks = (Block **) malloc2(sizeof(Block *), dcty);
     ERRCHK(frame->y_blocks, "malloc");
     for (i = 0; i < dcty; i++) {
-    frame->y_blocks[i] = (Block *) malloc(sizeof(Block) * dctx);
+    frame->y_blocks[i] = (Block *) malloc2(sizeof(Block), dctx);
     ERRCHK(frame->y_blocks[i], "malloc");
     }
 
-    frame->cr_blocks = (Block **) malloc(sizeof(Block *) * (dcty >> 1));
-    frame->cb_blocks = (Block **) malloc(sizeof(Block *) * (dcty >> 1));
+    frame->cr_blocks = (Block **) malloc2(sizeof(Block *), (dcty >> 1));
+    frame->cb_blocks = (Block **) malloc2(sizeof(Block *), (dcty >> 1));
     ERRCHK(frame->cr_blocks, "malloc");
     ERRCHK(frame->cb_blocks, "malloc");
     for (i = 0; i < (dcty >> 1); i++) {
-    frame->cr_blocks[i] = (Block *) malloc(sizeof(Block) * (dctx >> 1));
-    frame->cb_blocks[i] = (Block *) malloc(sizeof(Block) * (dctx >> 1));
+    frame->cr_blocks[i] = (Block *) malloc2(sizeof(Block), (dctx >> 1));
+    frame->cb_blocks[i] = (Block *) malloc2(sizeof(Block), (dctx >> 1));
     ERRCHK(frame->cr_blocks[i], "malloc");
     ERRCHK(frame->cb_blocks[i], "malloc");
     }
@@ -567,24 +567,24 @@ Frame_AllocYCC(frame)
     /*
      * first, allocate tons of memory
      */
-    frame->orig_y = (uint8 **) malloc(sizeof(uint8 *) * Fsize_y);
+    frame->orig_y = (uint8 **) malloc2(sizeof(uint8 *), Fsize_y);
     ERRCHK(frame->orig_y, "malloc");
     for (y = 0; y < Fsize_y; y++) {
-    frame->orig_y[y] = (uint8 *) malloc(sizeof(uint8) * Fsize_x);
+    frame->orig_y[y] = (uint8 *) malloc2(sizeof(uint8), Fsize_x);
     ERRCHK(frame->orig_y[y], "malloc");
     }
 
-    frame->orig_cr = (uint8 **) malloc(sizeof(int8 *) * (Fsize_y >> 1));
+    frame->orig_cr = (uint8 **) malloc2(sizeof(int8 *), (Fsize_y >> 1));
     ERRCHK(frame->orig_cr, "malloc");
     for (y = 0; y < (Fsize_y >> 1); y++) {
-    frame->orig_cr[y] = (uint8 *) malloc(sizeof(int8) * (Fsize_x >> 1));
+    frame->orig_cr[y] = (uint8 *) malloc2(sizeof(int8), (Fsize_x >> 1));
     ERRCHK(frame->orig_cr[y], "malloc");
     }
 
-    frame->orig_cb = (uint8 **) malloc(sizeof(int8 *) * (Fsize_y >> 1));
+    frame->orig_cb = (uint8 **) malloc2(sizeof(int8 *), (Fsize_y >> 1));
     ERRCHK(frame->orig_cb, "malloc");
     for (y = 0; y < (Fsize_y >> 1); y++) {
-    frame->orig_cb[y] = (uint8 *) malloc(sizeof(int8) * (Fsize_x >> 1));
+    frame->orig_cb[y] = (uint8 *) malloc2(sizeof(int8), (Fsize_x >> 1));
     ERRCHK(frame->orig_cb[y], "malloc");
     }
 
@@ -618,22 +618,22 @@ Frame_AllocHalf(frame)
         return;
     }
 
-    frame->halfX = (uint8 **) malloc(Fsize_y*sizeof(uint8 *));
+    frame->halfX = (uint8 **) malloc2(Fsize_y, sizeof(uint8 *));
     ERRCHK(frame->halfX, "malloc");
-    frame->halfY = (uint8 **) malloc((Fsize_y-1)*sizeof(uint8 *));
+    frame->halfY = (uint8 **) malloc2((Fsize_y-1), sizeof(uint8 *));
     ERRCHK(frame->halfY, "malloc");
-    frame->halfBoth = (uint8 **) malloc((Fsize_y-1)*sizeof(uint8 *));
+    frame->halfBoth = (uint8 **) malloc2((Fsize_y-1), sizeof(uint8 *));
     ERRCHK(frame->halfBoth, "malloc");
     for ( y = 0; y < Fsize_y; y++ ) {
-        frame->halfX[y] = (uint8 *) malloc((Fsize_x-1)*sizeof(uint8));
+        frame->halfX[y] = (uint8 *) malloc2((Fsize_x-1), sizeof(uint8));
         ERRCHK(frame->halfX[y], "malloc");
     }
     for ( y = 0; y < Fsize_y-1; y++ ) {
-        frame->halfY[y] = (uint8 *) malloc(Fsize_x*sizeof(uint8));
+        frame->halfY[y] = (uint8 *) malloc2(Fsize_x, sizeof(uint8));
         ERRCHK(frame->halfY[y], "malloc");
     }
     for ( y = 0; y < Fsize_y-1; y++ ) {
-        frame->halfBoth[y] = (uint8 *) malloc((Fsize_x-1)*sizeof(uint8));
+        frame->halfBoth[y] = (uint8 *) malloc2((Fsize_x-1), sizeof(uint8));
         ERRCHK(frame->halfBoth[y], "malloc");
     }
 }
@@ -667,24 +667,24 @@ Frame_AllocDecoded(frame, makeReference)
        it for some reason, so do it this way at least for now -- more
        flexible
      */
-    frame->decoded_y = (uint8 **) malloc(sizeof(uint8 *) * Fsize_y);
+    frame->decoded_y = (uint8 **) malloc2(sizeof(uint8 *), Fsize_y);
     ERRCHK(frame->decoded_y, "malloc");
     for (y = 0; y < Fsize_y; y++) {
-    frame->decoded_y[y] = (uint8 *) malloc(sizeof(uint8) * Fsize_x);
+    frame->decoded_y[y] = (uint8 *) malloc2(sizeof(uint8), Fsize_x);
     ERRCHK(frame->decoded_y[y], "malloc");
     }
 
-    frame->decoded_cr = (uint8 **) malloc(sizeof(int8 *) * (Fsize_y >> 1));
+    frame->decoded_cr = (uint8 **) malloc2(sizeof(int8 *), (Fsize_y >> 1));
     ERRCHK(frame->decoded_cr, "malloc");
     for (y = 0; y < (Fsize_y >> 1); y++) {
-    frame->decoded_cr[y] = (uint8 *) malloc(sizeof(uint8) * (Fsize_x >> 1));
+    frame->decoded_cr[y] = (uint8 *) malloc2(sizeof(uint8), (Fsize_x >> 1));
     ERRCHK(frame->decoded_cr[y], "malloc");
     }
 
-    frame->decoded_cb = (uint8 **) malloc(sizeof(int8 *) * (Fsize_y >> 1));
+    frame->decoded_cb = (uint8 **) malloc2(sizeof(int8 *), (Fsize_y >> 1));
     ERRCHK(frame->decoded_cb, "malloc");
     for (y = 0; y < (Fsize_y >> 1); y++) {
-    frame->decoded_cb[y] = (uint8 *) malloc(sizeof(uint8) * (Fsize_x >> 1));
+    frame->decoded_cb[y] = (uint8 *) malloc2(sizeof(uint8), (Fsize_x >> 1));
     ERRCHK(frame->decoded_cb[y], "malloc");
     }
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/ppmtompeg/iframe.c netpbm-10.27/converter/ppm/ppmtompeg/iframe.c
--- netpbm-10.27-orig/converter/ppm/ppmtompeg/iframe.c	2004-11-27 04:58:15.000000000 +0100
+++ netpbm-10.27/converter/ppm/ppmtompeg/iframe.c	2005-05-12 11:36:39.546875000 +0200
@@ -859,6 +859,7 @@ BlockComputeSNR(current, snr, psnr)
     int ysz = (Fsize_y>>3) * sizeof(int32 *);
     int xsz = (Fsize_x>>3);
     
+    overflow2(Fsize_y>>3, sizeof(int32 *));
     needs_init = FALSE;
     for (y=0; y<3; y++) {
       varDiff[y] = ratio[y] = total[y] = 0.0;
@@ -877,6 +878,7 @@ BlockComputeSNR(current, snr, psnr)
       fprintf(stderr, "Out of memory in BlockComputeSNR\n");
       exit(-1);
     }
+    overflow2(xsz, 4);
     for (y = 0; y < ySize[0]>>3; y++) {
       SignalY[y]  = (int32 *) calloc(xsz,4);
       SignalCr[y]  = (int32 *) calloc(xsz,4);
@@ -1032,27 +1034,27 @@ AllocDctBlocks()
     dctx = Fsize_x / DCTSIZE;
     dcty = Fsize_y / DCTSIZE;
 
-    dct = (Block **) malloc(sizeof(Block *) * dcty);
+    dct = (Block **) malloc2(sizeof(Block *), dcty);
     ERRCHK(dct, "malloc");
     for (i = 0; i < dcty; i++) {
-    dct[i] = (Block *) malloc(sizeof(Block) * dctx);
+    dct[i] = (Block *) malloc2(sizeof(Block), dctx);
     ERRCHK(dct[i], "malloc");
     }
 
-    dct_data = (dct_data_type **) malloc(sizeof(dct_data_type *) * dcty);
+    dct_data = (dct_data_type **) malloc2(sizeof(dct_data_type *), dcty);
     ERRCHK(dct_data, "malloc");
     for (i = 0; i < dcty; i++) {
-    dct_data[i] = (dct_data_type *) malloc(sizeof(dct_data_type) * dctx);
+    dct_data[i] = (dct_data_type *) malloc2(sizeof(dct_data_type), dctx);
     ERRCHK(dct[i], "malloc");
     }
 
-    dctr = (Block **) malloc(sizeof(Block *) * (dcty >> 1));
-    dctb = (Block **) malloc(sizeof(Block *) * (dcty >> 1));
+    dctr = (Block **) malloc2(sizeof(Block *), (dcty >> 1));
+    dctb = (Block **) malloc2(sizeof(Block *), (dcty >> 1));
     ERRCHK(dctr, "malloc");
     ERRCHK(dctb, "malloc");
     for (i = 0; i < (dcty >> 1); i++) {
-    dctr[i] = (Block *) malloc(sizeof(Block) * (dctx >> 1));
-    dctb[i] = (Block *) malloc(sizeof(Block) * (dctx >> 1));
+    dctr[i] = (Block *) malloc2(sizeof(Block), (dctx >> 1));
+    dctb[i] = (Block *) malloc2(sizeof(Block), (dctx >> 1));
     ERRCHK(dctr[i], "malloc");
     ERRCHK(dctb[i], "malloc");
     }
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/ppmtompeg/jpeg.c netpbm-10.27/converter/ppm/ppmtompeg/jpeg.c
--- netpbm-10.27-orig/converter/ppm/ppmtompeg/jpeg.c	2002-10-17 16:49:49.000000000 +0200
+++ netpbm-10.27/converter/ppm/ppmtompeg/jpeg.c	2005-05-12 11:36:39.515625000 +0200
@@ -228,7 +228,7 @@ int end;                /* last frame to
       exit(1);
     }  
 
-  inoffsets = (int *)malloc(no_frames*sizeof(int));
+  inoffsets = (int *)malloc2(no_frames, sizeof(int));
     
   if (fread (&(width),sizeof(int),1,inFile) != 1)
     {
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/ppmtompeg/parallel.c netpbm-10.27/converter/ppm/ppmtompeg/parallel.c
--- netpbm-10.27-orig/converter/ppm/ppmtompeg/parallel.c	2005-03-05 06:07:50.000000000 +0100
+++ netpbm-10.27/converter/ppm/ppmtompeg/parallel.c	2005-05-12 11:36:39.515625000 +0200
@@ -1058,8 +1058,11 @@ GetRemoteFrame(MpegFrame * const frameP,
             int numBytes;  /* Number of data bytes in message */
             FILE * filePtr;
             char fileName[256];
+#define TMPFILE_TEMPLATE "/tmp/ppmtompeg.XXXXXX"
 
-            sprintf(fileName, "/tmp/foobar%d", machineNumber);
+            strcpy(fileName, TMPFILE_TEMPLATE);
+            if (-1 == mkstemp(fileName))
+                pm_error( "could not create temporary convolution file");
             filePtr = fopen(fileName, "wb");
 
             /* read in stuff, write to file, perform local conversion */
@@ -2122,6 +2125,8 @@ DecodeServer(int          const numInput
 
     /* should keep list of port numbers to notify when frames become ready */
 
+    overflow2(numInputFiles, sizeof(int));
+    overflow2(numInputFiles, sizeof(boolean));
     ready = (boolean *) calloc(numInputFiles, sizeof(boolean));
     waitMachine = (int *) calloc(numInputFiles, sizeof(int));
     waitPort = (int *) malloc(numMachines*sizeof(int));
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/ppmtompeg/psearch.c netpbm-10.27/converter/ppm/ppmtompeg/psearch.c
--- netpbm-10.27-orig/converter/ppm/ppmtompeg/psearch.c	2002-10-14 04:22:16.000000000 +0200
+++ netpbm-10.27/converter/ppm/ppmtompeg/psearch.c	2005-05-12 11:36:39.500000000 +0200
@@ -218,6 +218,13 @@ SetSearchRange(int const pixelsP, int co
 
         int index;
     
+        overflow2(searchRangeP, 2);
+        overflow2(searchRangeB, 2);
+        overflow_add(searchRangeP*2, 3);
+        overflow_add(searchRangeB*2, 3);
+        overflow2(2*searchRangeB+3, sizeof(int));
+        overflow2(2*searchRangeP+3, sizeof(int));
+
         pmvHistogram = (int **) malloc((2*searchRangeP+3)*sizeof(int *));
         bbmvHistogram = (int **) malloc((2*searchRangeB+3)*sizeof(int *));
         bfmvHistogram = (int **) malloc((2*searchRangeB+3)*sizeof(int *));
@@ -824,6 +831,9 @@ ShowPMVHistogram(fpointer)
     int *columnTotals;
     int rowTotal;
 
+    overflow2(searchRangeP, 2);
+    overflow_add(searchRangeP*2,  3);
+    overflow2(searchRangeP*2+3, sizeof(int));
     columnTotals = (int *) calloc(2*searchRangeP+3, sizeof(int));
 
 #ifdef COMPLETE_DISPLAY
@@ -871,6 +881,9 @@ ShowBBMVHistogram(fpointer)
 
     fprintf(fpointer, "B-frame Backwards:\n");
 
+    overflow2(searchRangeB, 2);
+    overflow_add(searchRangeB*2,  3);
+    overflow2(searchRangeB*2+3, sizeof(int));
     columnTotals = (int *) calloc(2*searchRangeB+3, sizeof(int));
 
 #ifdef COMPLETE_DISPLAY
@@ -918,6 +931,9 @@ ShowBFMVHistogram(fpointer)
 
     fprintf(fpointer, "B-frame Forwards:\n");
 
+    overflow2(searchRangeB, 2);
+    overflow_add(searchRangeB*2,  3);
+    overflow2(searchRangeB*2+3, sizeof(int));
     columnTotals = (int *) calloc(2*searchRangeB+3, sizeof(int));
 
 #ifdef COMPLETE_DISPLAY
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/ppmtompeg/rgbtoycc.c netpbm-10.27/converter/ppm/ppmtompeg/rgbtoycc.c
--- netpbm-10.27-orig/converter/ppm/ppmtompeg/rgbtoycc.c	2004-11-13 23:13:03.000000000 +0100
+++ netpbm-10.27/converter/ppm/ppmtompeg/rgbtoycc.c	2005-05-12 11:36:39.515625000 +0200
@@ -72,6 +72,8 @@ compute_mult_tables(const pixval maxval)
         } 
         table_maxval = maxval;
 
+	overflow_add(table_maxval, 1);
+	overflow2(table_maxval+1, sizeof(float));
         mult299   = malloc((table_maxval+1)*sizeof(float));
         mult587   = malloc((table_maxval+1)*sizeof(float));
         mult114   = malloc((table_maxval+1)*sizeof(float));
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/ppmtopcx.c netpbm-10.27/converter/ppm/ppmtopcx.c
--- netpbm-10.27-orig/converter/ppm/ppmtopcx.c	2004-08-31 05:21:55.000000000 +0200
+++ netpbm-10.27/converter/ppm/ppmtopcx.c	2005-05-12 11:36:39.734375000 +0200
@@ -418,6 +418,8 @@ ppmTo16ColorPcx(pixel **            cons
             else                   Planes = 1;
         }
     }
+    overflow2(BitsPerPixel, cols);
+    overflow_add(BitsPerPixel * cols, 7);
     BytesPerLine = ((cols * BitsPerPixel) + 7) / 8;
     MALLOCARRAY_NOFAIL(indexRow, cols);
     MALLOCARRAY_NOFAIL(planesrow, BytesPerLine);
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/ppmtopict.c netpbm-10.27/converter/ppm/ppmtopict.c
--- netpbm-10.27-orig/converter/ppm/ppmtopict.c	2003-02-22 23:04:40.000000000 +0100
+++ netpbm-10.27/converter/ppm/ppmtopict.c	2005-05-12 11:36:39.703125000 +0200
@@ -245,6 +245,8 @@ char *argv[];
 	putShort(stdout, 0);			/* mode */
 
 	/* Finally, write out the data. */
+	overflow_add(cols/MAX_COUNT, 1);
+        overflow_add(cols, cols/MAX_COUNT+1);
 	packed = (char*) malloc((unsigned)(cols+cols/MAX_COUNT+1));
 	oc = 0;
 	for (row = 0; row < rows; row++)
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/ppmtopj.c netpbm-10.27/converter/ppm/ppmtopj.c
--- netpbm-10.27-orig/converter/ppm/ppmtopj.c	2002-09-06 18:32:14.000000000 +0200
+++ netpbm-10.27/converter/ppm/ppmtopj.c	2005-05-12 11:36:39.609375000 +0200
@@ -180,6 +180,7 @@ char *argv[];
 	pixels = ppm_readppm( ifp, &cols, &rows, &maxval );
 
 	pm_close( ifp );
+	overflow2(cols,2);
 	obuf = (unsigned char *) pm_allocrow(cols, sizeof(unsigned char));
 	cbuf = (unsigned char *) pm_allocrow(cols * 2, sizeof(unsigned char));
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/ppmtopjxl.c netpbm-10.27/converter/ppm/ppmtopjxl.c
--- netpbm-10.27-orig/converter/ppm/ppmtopjxl.c	2003-02-22 23:04:36.000000000 +0100
+++ netpbm-10.27/converter/ppm/ppmtopjxl.c	2005-05-12 11:36:39.687500000 +0200
@@ -273,6 +273,8 @@ main(argc, argv)
       pm_error("image too large; reduce with ppmscale");
    if (maxval > PCL_MAXVAL)
       pm_error("color range too large; reduce with ppmcscale");
+   if (cols < 0 || rows < 0)
+      pm_error("negative size is not possible");
 
    /* Figure out the colormap. */
    fprintf( stderr, "(Computing colormap..." ); fflush( stderr );
@@ -293,6 +295,8 @@ main(argc, argv)
       case 0: /* direct mode (no palette) */
 	 bpp = bitsperpixel(maxval); /* bits per pixel */
 	 bpg = bpp; bpb = bpp;
+	 overflow2(bpp, 3);
+	 overflow_add(bpp*3, 7);
 	 bpp = (bpp*3+7)>>3;     /* bytes per pixel now */
 	 bpr = (bpp<<3)-bpg-bpb; 
 	 bpp *= cols;            /* bytes per row now */
@@ -302,9 +306,13 @@ main(argc, argv)
       case 3: case 7: pclindex++;
       default:
 	 bpp = 8/pclindex;
+	 overflow_add(cols, bpp);
+	 if(bpp == 0)
+		pm_error("assert: no bpp");
 	 bpp = (cols+bpp-1)/bpp;      /* bytes per row */
       }
 
+   overflow2(bpp,2);
    if ((inrow = (char *)malloc((unsigned)bpp)) == NULL ||
        (outrow = (char *)malloc((unsigned)bpp*2)) == NULL ||
        (runcnt = (signed char *)malloc((unsigned)bpp)) == NULL)
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/ppmtowinicon.c netpbm-10.27/converter/ppm/ppmtowinicon.c
--- netpbm-10.27-orig/converter/ppm/ppmtowinicon.c	2004-05-01 21:00:55.000000000 +0200
+++ netpbm-10.27/converter/ppm/ppmtowinicon.c	2005-05-12 11:36:39.546875000 +0200
@@ -12,6 +12,7 @@
 
 #include <math.h>
 #include <string.h>
+#include <stdlib.h>
 
 #include "winico.h"
 #include "ppm.h"
@@ -218,6 +219,7 @@ createAndBitmap (gray ** const ba, int c
    MALLOCARRAY_NOFAIL(rowData, rows);
    icBitmap->xBytes = xBytes;
    icBitmap->data   = rowData;
+   overflow2(xBytes, rows);
    icBitmap->size   = xBytes * rows;
    for (y=0;y<rows;y++) {
       u1 * row;
@@ -346,6 +348,7 @@ create4Bitmap (pixel ** const pa, int co
    MALLOCARRAY_NOFAIL(rowData, rows);
    icBitmap->xBytes = xBytes;
    icBitmap->data   = rowData;
+   overflow2(xBytes, rows);
    icBitmap->size   = xBytes * rows;
 
    for (y=0;y<rows;y++) {
@@ -406,6 +409,7 @@ create8Bitmap (pixel ** const pa, int co
    MALLOCARRAY_NOFAIL(rowData, rows);
    icBitmap->xBytes = xBytes;
    icBitmap->data   = rowData;
+   overflow2(xBytes, rows);
    icBitmap->size   = xBytes * rows;
 
    for (y=0;y<rows;y++) {
@@ -713,6 +717,10 @@ addEntryToIcon(MS_Ico       const MSIcon
     entry->bitcount      = bpp;
     entry->ih            = createInfoHeader(entry, xorBitmap, andBitmap);
     entry->colors        = palette->colors;
+    overflow2(4, entry->color_count);
+    overflow_add(xorBitmap->size, andBitmap->size);
+    overflow_add(xorBitmap->size + andBitmap->size, 40);
+    overflow_add(xorBitmap->size + andBitmap->size + 40, 4 * entry->color_count);
     entry->size_in_bytes = 
         xorBitmap->size + andBitmap->size + 40 + (4 * entry->color_count);
     if (verbose) 
@@ -731,12 +739,13 @@ addEntryToIcon(MS_Ico       const MSIcon
     /*
     * Add the entry to the entries array.
     */
+    overflow_add(MSIconData->count,1);
     MSIconData->count++;
     /* 
     * Perhaps I should use something that allocs a decent amount at start...
     */
     MSIconData->entries = 
-        realloc (MSIconData->entries, MSIconData->count * sizeof(IC_Entry *));
+        realloc2 (MSIconData->entries, MSIconData->count * sizeof(IC_Entry *));
     MSIconData->entries[MSIconData->count-1] = entry;
 }
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/ppmtoxpm.c netpbm-10.27/converter/ppm/ppmtoxpm.c
--- netpbm-10.27-orig/converter/ppm/ppmtoxpm.c	2005-03-17 20:19:45.000000000 +0100
+++ netpbm-10.27/converter/ppm/ppmtoxpm.c	2005-05-12 11:36:39.718750000 +0200
@@ -193,6 +193,7 @@ genNumstr(unsigned int const input, int 
     unsigned int i;
 
     /* Allocate memory for printed number.  Abort if error. */
+    overflow_add(digits, 1);
     if (!(str = (char *) malloc(digits + 1)))
         pm_error("out of memory");
 
@@ -306,6 +307,7 @@ genCmap(colorhist_vector const chv, 
     unsigned int charsPerPixel;
     unsigned int xppMaxval;
     
+    if (includeTransparent) overflow_add(ncolors, 1);
     MALLOCARRAY(cmap, cmapSize);
     if (cmapP == NULL)
         pm_error("Out of memory allocating %u bytes for a color map.",
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/qrttoppm.c netpbm-10.27/converter/ppm/qrttoppm.c
--- netpbm-10.27-orig/converter/ppm/qrttoppm.c	1993-10-04 11:12:56.000000000 +0200
+++ netpbm-10.27/converter/ppm/qrttoppm.c	2005-05-12 11:36:39.718750000 +0200
@@ -46,7 +46,7 @@ main( argc, argv )
 
     ppm_writeppminit( stdout, cols, rows, maxval, 0 );
     pixelrow = ppm_allocrow( cols );
-    buf = (unsigned char *) malloc( 3 * cols );
+    buf = (unsigned char *) malloc2( 3 , cols );
     if ( buf == (unsigned char *) 0 )
 	pm_error( "out of memory" );
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/sldtoppm.c netpbm-10.27/converter/ppm/sldtoppm.c
--- netpbm-10.27-orig/converter/ppm/sldtoppm.c	2004-02-21 22:55:39.000000000 +0100
+++ netpbm-10.27/converter/ppm/sldtoppm.c	2005-05-12 11:36:39.609375000 +0200
@@ -307,6 +307,8 @@ static void slider(slvec, slflood)
 
     /* Allocate image buffer and clear it to black. */
 
+    overflow_add(ixdots,1);
+    overflow_add(iydots,1);
     pixels = ppm_allocarray(pixcols = ixdots + 1, pixrows = iydots + 1);
     PPM_ASSIGN(rgbcolour, 0, 0, 0);
     ppmd_filledrectangle(pixels, pixcols, pixrows, pixmaxval, 0, 0,
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/vidtoppm.c netpbm-10.27/converter/ppm/vidtoppm.c
--- netpbm-10.27-orig/converter/ppm/vidtoppm.c	2000-05-16 22:22:34.000000000 +0200
+++ netpbm-10.27/converter/ppm/vidtoppm.c	2005-05-12 09:29:47.000000000 +0200
@@ -245,7 +245,7 @@ char **argv;
 
 
     sprintf(ofname, "%s%d.ppm", obase, i);
-    outFile = fopen("/tmp/foobar", "wb");
+    outFile = fopen("./foobar", "wb");
     if (!outFile) {
       perror("Couldn't open output file.");
     }
@@ -263,7 +263,7 @@ char **argv;
 
     free(tdata);
 
-    sprintf(command, "rawtoppm %d %d < /tmp/foobar > %s",
+    sprintf(command, "rawtoppm %d %d < ./foobar > %s",
 	    width, height, ofname);
     system(command);
   }
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/ximtoppm.c netpbm-10.27/converter/ppm/ximtoppm.c
--- netpbm-10.27-orig/converter/ppm/ximtoppm.c	2004-10-19 17:35:17.000000000 +0200
+++ netpbm-10.27/converter/ppm/ximtoppm.c	2005-05-12 11:36:39.578125000 +0200
@@ -283,6 +283,7 @@ ReadXimHeader(in_fp, header)
     header->bits_channel = atoi(a_head.bits_per_channel);
     header->alpha_flag = atoi(a_head.alpha_channel);
     if (strlen(a_head.author)) {
+    	overflow_add(strlen(a_head.author),1);
         if (!(header->author = calloc((unsigned int)strlen(a_head.author)+1,
                 1))) {
             pm_message("ReadXimHeader: can't calloc author string" );
@@ -292,6 +293,7 @@ ReadXimHeader(in_fp, header)
         strncpy(header->author, a_head.author, strlen(a_head.author));
     }
     if (strlen(a_head.date)) {
+        overflow_add(strlen(a_head.date),1);
         if (!(header->date =calloc((unsigned int)strlen(a_head.date)+1,1))){
             pm_message("ReadXimHeader: can't calloc date string" );
             return(0);
@@ -300,6 +302,7 @@ ReadXimHeader(in_fp, header)
         strncpy(header->date, a_head.date, strlen(a_head.date));
     }
     if (strlen(a_head.program)) {
+        overflow_add(strlen(a_head.program),1);
         if (!(header->program = calloc(
                     (unsigned int)strlen(a_head.program) + 1, 1))) {
             pm_message("ReadXimHeader: can't calloc program string" );
@@ -326,6 +329,7 @@ ReadXimHeader(in_fp, header)
     if (header->nchannels == 3 && header->bits_channel == 8)
         header->ncolors = 0;
     else if (header->nchannels == 1 && header->bits_channel == 8) {
+	overflow2(header->ncolors, sizeof(Color));
         header->colors = (Color *)calloc((unsigned int)header->ncolors,
                 sizeof(Color));
         if (header->colors == NULL) {
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/xpmtoppm.c netpbm-10.27/converter/ppm/xpmtoppm.c
--- netpbm-10.27-orig/converter/ppm/xpmtoppm.c	2004-03-13 20:36:36.000000000 +0100
+++ netpbm-10.27/converter/ppm/xpmtoppm.c	2005-05-12 11:36:39.625000000 +0200
@@ -121,7 +121,7 @@ static bool backup;
 
 
 static void
-getline(char * const line, int const size, FILE * const stream) {
+xpmtoppm_getline(char * const line, int const size, FILE * const stream) {
 /*----------------------------------------------------------------------------
    Read the next line from the input file 'stream', through the one-line
    buffer lastInputLine[].
@@ -384,25 +384,25 @@ readXpm3Header(FILE * const stream, int 
     *widthP = *heightP = *ncolorsP = *chars_per_pixelP = -1;
 
     /* Read the XPM signature comment */
-    getline(line, sizeof(line), stream);
+    xpmtoppm_getline(line, sizeof(line), stream);
     if (strncmp(line, xpm3_signature, strlen(xpm3_signature)) != 0) 
         pm_error("Apparent XPM 3 file does not start with '/* XPM */'.  "
                  "First line is '%s'", xpm3_signature);
 
     /* Read the assignment line */
-    getline(line, sizeof(line), stream);
+    xpmtoppm_getline(line, sizeof(line), stream);
     if (strncmp(line, "static char", 11) != 0)
         pm_error("Cannot find data structure declaration.  Expected a "
                  "line starting with 'static char', but found the line "
                  "'%s'.", line);
 
 	/* Read the hints line */
-    getline(line, sizeof(line), stream);
+    xpmtoppm_getline(line, sizeof(line), stream);
     /* skip the comment line if any */
     if (!strncmp(line, "/*", 2)) {
         while (!strstr(line, "*/"))
-            getline(line, sizeof(line), stream);
-        getline(line, sizeof(line), stream);
+            xpmtoppm_getline(line, sizeof(line), stream);
+        xpmtoppm_getline(line, sizeof(line), stream);
     }
     if (sscanf(line, "\"%d %d %d %d\",", widthP, heightP,
                ncolorsP, chars_per_pixelP) != 4)
@@ -436,10 +436,10 @@ readXpm3Header(FILE * const stream, int 
         *transparentP = -1;  /* initial value */
 
         for (seqNum = 0; seqNum < *ncolorsP; seqNum++) {
-            getline(line, sizeof(line), stream);
+            xpmtoppm_getline(line, sizeof(line), stream);
             /* skip the comment line if any */
             if (!strncmp(line, "/*", 2))
-                getline(line, sizeof(line), stream);
+                xpmtoppm_getline(line, sizeof(line), stream);
             
             interpretXpm3ColorTableLine(line, seqNum, *chars_per_pixelP, 
                                         *colorsP, *ptabP, transparentP);
@@ -473,7 +473,7 @@ readXpm1Header(FILE * const stream, int 
     /* Read the initial defines. */
     processedStaticChar = FALSE;
     while (!processedStaticChar) {
-        getline(line, sizeof(line), stream);
+        xpmtoppm_getline(line, sizeof(line), stream);
 
         if (sscanf(line, "#define %s %d", str1, &v) == 2) {
             char *t1;
@@ -521,7 +521,7 @@ readXpm1Header(FILE * const stream, int 
     /* If there's a monochrome color table, skip it. */
     if (!strncmp(t1, "mono", 4)) {
         for (;;) {
-            getline(line, sizeof(line), stream);
+            xpmtoppm_getline(line, sizeof(line), stream);
             if (!strncmp(line, "static char", 11))
                 break;
         }
@@ -544,7 +544,7 @@ readXpm1Header(FILE * const stream, int 
 
     /* Read color table. */
     for (i = 0; i < *ncolorsP; ++i) {
-        getline(line, sizeof(line), stream);
+        xpmtoppm_getline(line, sizeof(line), stream);
 
         if ((t1 = strchr(line, '"')) == NULL)
             pm_error("D error scanning color table");
@@ -580,7 +580,7 @@ readXpm1Header(FILE * const stream, int 
        "static char ...").
     */
     for (;;) {
-        getline(line, sizeof(line), stream);
+        xpmtoppm_getline(line, sizeof(line), stream);
         if (strncmp(line, "static char", 11) == 0)
             break;
     }
@@ -671,7 +671,7 @@ ReadXPMFile(FILE * const stream, int * c
     backup = FALSE;
 
     /* Read the header line */
-    getline(line, sizeof(line), stream);
+    xpmtoppm_getline(line, sizeof(line), stream);
     backup = TRUE;  /* back up so next read reads this line again */
     
     rc = sscanf(line, "/* %s */", str1);
@@ -685,13 +685,14 @@ ReadXPMFile(FILE * const stream, int * c
                        &ncolors, colorsP, &ptab);
         *transparentP = -1;  /* No transparency in version 1 */
     }
+    overflow2(*widthP, *heightP);
     totalpixels = *widthP * *heightP;
     MALLOCARRAY(*dataP, totalpixels);
     if (*dataP == NULL)
         pm_error("Could not get %d bytes of memory for image", totalpixels);
     cursor = *dataP;
     maxcursor = *dataP + totalpixels - 1;
-	getline(line, sizeof(line), stream); 
+	xpmtoppm_getline(line, sizeof(line), stream); 
         /* read next line (first line may not always start with comment) */
     while (cursor <= maxcursor) {
         if (strncmp(line, "/*", 2) == 0) {
@@ -701,7 +702,7 @@ ReadXPMFile(FILE * const stream, int * c
                              ncolors, ptab, &cursor, maxcursor);
         }
         if (cursor <= maxcursor)
-            getline(line, sizeof(line), stream);
+            xpmtoppm_getline(line, sizeof(line), stream);
     }
     if (ptab) free(ptab);
 }
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/xvminitoppm.c netpbm-10.27/converter/ppm/xvminitoppm.c
--- netpbm-10.27-orig/converter/ppm/xvminitoppm.c	2002-07-30 18:31:40.000000000 +0200
+++ netpbm-10.27/converter/ppm/xvminitoppm.c	2005-05-12 09:29:47.015625000 +0200
@@ -14,7 +14,7 @@
 #include "ppm.h"
 #define BUFSIZE 256
 
-static void getline ARGS((FILE *fp, char *buf));
+static void xvminitoppm_getline ARGS((FILE *fp, char *buf));
 
 int 
 main(argc, argv)
@@ -48,18 +48,18 @@ main(argc, argv)
                 i++;
             }
     
-    getline(ifp, buf);
+    xvminitoppm_getline(ifp, buf);
     if( strncmp(buf, "P7 332", 6) != 0 )
         pm_error("bad magic number - not a XV thumbnail picture");
 
     while(1) {
-        getline(ifp, buf);
+        xvminitoppm_getline(ifp, buf);
         if( strncmp(buf, "#END_OF_COMMENTS", 16)==0 )
             break;
         if( strncmp(buf, "#BUILTIN", 8)==0 )
             pm_error("cannot convert builtin XV thumbnail pictures");
     }
-    getline(ifp, buf);
+    xvminitoppm_getline(ifp, buf);
     if( sscanf(buf, "%d %d %d", &cols, &rows, &maxval) != 3 ) 
         pm_error("error parsing dimension info");
     if( maxval != 255 )
@@ -85,7 +85,7 @@ main(argc, argv)
 
 
 static void
-getline(fp, buf)
+xvminitoppm_getline(fp, buf)
     FILE *fp;
     char *buf;
 {
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/converter/ppm/yuvtoppm.c netpbm-10.27/converter/ppm/yuvtoppm.c
--- netpbm-10.27-orig/converter/ppm/yuvtoppm.c	2003-07-06 22:32:09.000000000 +0200
+++ netpbm-10.27/converter/ppm/yuvtoppm.c	2005-05-12 11:36:39.734375000 +0200
@@ -72,6 +72,7 @@ main(argc, argv)
 
 	ppm_writeppminit(stdout, cols, rows, (pixval) 255, 0);
 	pixrow = ppm_allocrow(cols);
+    overflow_add(cols, 1);
     MALLOCARRAY(yuvbuf, (cols+1)/2);
     if (yuvbuf == NULL)
         pm_error("Unable to allocate YUV buffer for %d columns.", cols);
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/doc/COPYRIGHT.PATENT netpbm-10.27/doc/COPYRIGHT.PATENT
--- netpbm-10.27-orig/doc/COPYRIGHT.PATENT	2004-05-01 01:54:22.000000000 +0200
+++ netpbm-10.27/doc/COPYRIGHT.PATENT	2005-05-12 11:36:39.937500000 +0200
@@ -33,6 +33,11 @@ no warranties regarding any of the code 
 all the above to be modified by "to the best of the Netpbm
 maintainer's knowledge."
 
+These security fixes for netpbm are (c) Copyright 2002 Red Hat Inc.
+Red Hat has not fixed those items with patent claims or commercial
+use restrictions. These changes include NO WARRANTY and are provided
+under the Open Software License v.1 (see file OPENLICENSE).
+
 
 
 PATENTS
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/editor/Makefile netpbm-10.27/editor/Makefile
--- netpbm-10.27-orig/editor/Makefile	2004-09-26 23:54:21.000000000 +0200
+++ netpbm-10.27/editor/Makefile	2005-05-12 10:45:29.218750000 +0200
@@ -66,23 +66,23 @@ install.bin.local: $(PKGDIR)/bin
 # backward compatibility: program used to be pnminterp
 	cd $(PKGDIR)/bin ; \
 	rm -f pnminterp; \
-	$(SYMLINK) pamstretch$(EXE) pnminterp
+	$(SYMLINK) pamstretch$(EXE) pnminterp$(EXE)
 # pamoil replaced pgmoil in June 2001.
 	cd $(PKGDIR)/bin ; \
 	rm -f pgmoil ; \
-	$(SYMLINK) pamoil$(EXE) pgmoil
+	$(SYMLINK) pamoil$(EXE) pgmoil$(EXE)
 # In March 2002, pnmnorm replaced ppmnorm and pgmnorm
 	cd $(PKGDIR)/bin ; \
 	rm -f ppmnorm ; \
-	$(SYMLINK) pnmnorm$(EXE) ppmnorm 
+	$(SYMLINK) pnmnorm$(EXE) ppmnorm$(EXE) 
 	cd $(PKGDIR)/bin ; \
 	rm -f pgmnorm ; \
-	$(SYMLINK) pnmnorm$(EXE) pgmnorm
+	$(SYMLINK) pnmnorm$(EXE) pgmnorm$(EXE)
 # In March 2003, pamedge replaced pgmedge
 	cd $(PKGDIR)/bin ; \
 	rm -f pgmedge ; \
-	$(SYMLINK) pamedge$(EXE) pgmedge
+	$(SYMLINK) pamedge$(EXE) pgmedge$(EXE)
 # In October 2004, pamenlarge replaced pnmenlarge
 	cd $(PKGDIR)/bin ; \
 	rm -f pnmenlarge ; \
-	$(SYMLINK) pamenlarge$(EXE) pnmenlarge
+	$(SYMLINK) pamenlarge$(EXE) pnmenlarge$(EXE)
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/editor/pamcut.c netpbm-10.27/editor/pamcut.c
--- netpbm-10.27-orig/editor/pamcut.c	2005-01-04 01:07:53.000000000 +0100
+++ netpbm-10.27/editor/pamcut.c	2005-05-12 11:36:40.062500000 +0200
@@ -509,6 +509,8 @@ main(int argc, char *argv[]) {
     outpam.width  = rightcol-leftcol+1;
     outpam.height = bottomrow-toprow+1;
 
+    overflow_add(rightcol, 1);
+    overflow_add(toprow, 1);
     pnm_writepaminit(&outpam);
 
     /* Write out top padding */
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/editor/pamoil.c netpbm-10.27/editor/pamoil.c
--- netpbm-10.27-orig/editor/pamoil.c	2004-05-29 20:01:02.000000000 +0200
+++ netpbm-10.27/editor/pamoil.c	2005-05-12 11:36:40.031250000 +0200
@@ -112,6 +112,7 @@ main(int argc, char *argv[] ) {
     tuples = pnm_readpam(ifp, &inpam, PAM_STRUCT_SIZE(tuple_type));
     pm_close(ifp);
 
+    overflow_add(inpam.maxval, 1);
     MALLOCARRAY(hist, inpam.maxval + 1);
     if (hist == NULL)
         pm_error("Unable to allocate memory for histogram.");
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/editor/pamstretch-gen netpbm-10.27/editor/pamstretch-gen
--- netpbm-10.27-orig/editor/pamstretch-gen	2004-07-25 02:01:24.000000000 +0200
+++ netpbm-10.27/editor/pamstretch-gen	2005-05-12 11:08:04.187500000 +0200
@@ -31,10 +31,7 @@ if [ "$1" = "" ]; then
   exit 1
 fi
 
-tempdir="${TMPDIR-/tmp}/pamstretch-gen.$$"
-mkdir $tempdir || { echo "Could not create temporary file. Exiting."; exit 1;}
-chmod 700 $tempdir
-tempfile=$tempdir/pnmig
+tempfile=$(mktemp pnmig.XXXXXXXXXX) || exit 1
 
 trap 'rm -rf $tempdir' 0 1 3 15
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/editor/pbmclean.c netpbm-10.27/editor/pbmclean.c
--- netpbm-10.27-orig/editor/pbmclean.c	2005-02-27 17:33:57.000000000 +0100
+++ netpbm-10.27/editor/pbmclean.c	2005-05-12 11:36:40.046875000 +0200
@@ -147,7 +147,7 @@ nextrow(FILE * const ifd, int const row,
     inrow[0] = inrow[1];
     inrow[1] = inrow[2];
     inrow[2] = shuffle ;
-    if (row+1 < rows) {
+    if (row <= rows) {
         /* Read the "next" row in from the file.  Allocate buffer if neeeded */
         if (inrow[2] == NULL)
             inrow[2] = pbm_allocrow(cols);
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/editor/pbmlife.c netpbm-10.27/editor/pbmlife.c
--- netpbm-10.27-orig/editor/pbmlife.c	1993-10-04 11:10:37.000000000 +0200
+++ netpbm-10.27/editor/pbmlife.c	2005-05-12 11:36:39.968750000 +0200
@@ -54,7 +54,7 @@ char* argv[];
 	prevrow = thisrow;
 	thisrow = nextrow;
 	nextrow = temprow;
-	if ( row < rows - 1 )
+	if ( row <= rows )
 	    pbm_readpbmrow( ifp, nextrow, cols, format );
 
         for ( col = 0; col < cols; ++col )
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/editor/pbmpscale.c netpbm-10.27/editor/pbmpscale.c
--- netpbm-10.27-orig/editor/pbmpscale.c	2003-07-06 21:41:04.000000000 +0200
+++ netpbm-10.27/editor/pbmpscale.c	2005-05-12 11:36:39.984375000 +0200
@@ -109,6 +109,7 @@ main(argc, argv)
    inrow[0] = inrow[1] = inrow[2] = NULL;
    pbm_readpbminit(ifd, &columns, &rows, &format) ;
 
+   overflow2(columns, scale);
    outrow = pbm_allocrow(columns*scale) ;
    MALLOCARRAY(flags, columns);
    if (flags == NULL) 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/editor/pbmreduce.c netpbm-10.27/editor/pbmreduce.c
--- netpbm-10.27-orig/editor/pbmreduce.c	2003-07-06 21:41:49.000000000 +0200
+++ netpbm-10.27/editor/pbmreduce.c	2005-05-12 11:36:40.078125000 +0200
@@ -93,6 +93,7 @@ main( argc, argv )
 
     if ( halftone == QT_FS ) {
         /* Initialize Floyd-Steinberg. */
+        overflow_add(newcols, 2);
         MALLOCARRAY(thiserr, newcols + 2);
         MALLOCARRAY(nexterr, newcols + 2);
         if ( thiserr == NULL || nexterr == NULL )
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/editor/pnmcrop.c netpbm-10.27/editor/pnmcrop.c
--- netpbm-10.27-orig/editor/pnmcrop.c	2002-07-30 19:47:37.000000000 +0200
+++ netpbm-10.27/editor/pnmcrop.c	2005-05-12 11:36:39.953125000 +0200
@@ -379,6 +379,8 @@ main(int argc, char *argv[]) {
 
         xelrow = pnm_allocrow(cols);
 
+	overflow_add(right, 1);
+	overflow_add(bottom, 1);
         newcols = right - left + 1;
         newrows = bottom - top + 1;
         pnm_writepnminit(stdout, newcols, newrows, maxval, format, 0);
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/editor/pnmcut.c netpbm-10.27/editor/pnmcut.c
--- netpbm-10.27-orig/editor/pnmcut.c	2002-07-30 19:47:37.000000000 +0200
+++ netpbm-10.27/editor/pnmcut.c	2005-05-12 11:36:39.953125000 +0200
@@ -373,6 +373,7 @@ main(int argc, char *argv[]) {
                    toprow, leftcol, bottomrow, rightcol);
     }
 
+    overflow_add(rightcol, 1);
     output_cols = rightcol-leftcol+1;
     output_row = pnm_allocrow(output_cols);
     
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/editor/pnmgamma.c netpbm-10.27/editor/pnmgamma.c
--- netpbm-10.27-orig/editor/pnmgamma.c	2004-06-16 04:28:06.000000000 +0200
+++ netpbm-10.27/editor/pnmgamma.c	2005-05-12 11:36:40.078125000 +0200
@@ -274,6 +274,7 @@ createGammaTables(bool const ungamma, 
                   xelval **rtableP, xelval **gtableP, xelval **btableP) {
 
     /* Allocate space for the tables. */
+    overflow_add(maxval, 1);
     MALLOCARRAY(*rtableP, maxval+1);
     MALLOCARRAY(*gtableP, maxval+1);
     MALLOCARRAY(*btableP, maxval+1);
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/editor/pnmhisteq.c netpbm-10.27/editor/pnmhisteq.c
--- netpbm-10.27-orig/editor/pnmhisteq.c	2004-09-18 05:25:46.000000000 +0200
+++ netpbm-10.27/editor/pnmhisteq.c	2005-05-12 11:36:40.015625000 +0200
@@ -210,6 +210,7 @@ int main(argc, argv)
        user has specified an input map file, read it in at
        this point. */
 
+    overflow_add(maxval, 1);
     lumahist = (long *) pm_allocrow(maxval + 1, sizeof(long));
     memset((char *) lumahist, 0, (maxval + 1) * sizeof(long));
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/editor/pnmindex netpbm-10.27/editor/pnmindex
--- netpbm-10.27-orig/editor/pnmindex	2005-03-17 00:18:17.000000000 +0100
+++ netpbm-10.27/editor/pnmindex	2005-05-12 09:29:47.031250000 +0200
@@ -89,7 +89,7 @@ if [ $# -eq 0 ]; then
     usage
 fi
 
-tempdir="${TMPDIR-/tmp}/pnmindex.$$"
+tempdir="${TMPDIR-.}/pnmindex.$$"
 mkdir $tempdir || { echo "Could not create temporary file. Exiting."; exit 1;}
 chmod 700 $tempdir
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/editor/pnmindex.csh netpbm-10.27/editor/pnmindex.csh
--- netpbm-10.27-orig/editor/pnmindex.csh	2000-09-14 07:37:35.000000000 +0200
+++ netpbm-10.27/editor/pnmindex.csh	2005-05-12 11:36:40.046875000 +0200
@@ -1,5 +1,8 @@
 #!/bin/csh -f
 #
+echo "Unsafe code, needs debugging, do not ship"
+exit 1
+#
 # pnmindex - build a visual index of a bunch of anymaps
 #
 # Copyright (C) 1991 by Jef Poskanzer.
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/editor/pnmmargin netpbm-10.27/editor/pnmmargin
--- netpbm-10.27-orig/editor/pnmmargin	2003-12-31 05:01:26.000000000 +0100
+++ netpbm-10.27/editor/pnmmargin	2005-05-12 11:07:00.484375000 +0200
@@ -11,16 +11,11 @@
 # documentation.  This software is provided "as is" without express or
 # implied warranty.
 
-tempdir="${TMPDIR-/tmp}/pnmmargin.$$"
-mkdir $tempdir || { echo "Could not create temporary file. Exiting."; exit 1;}
-chmod 700 $tempdir
-
-trap 'rm -rf $tempdir' 0 1 3 15
-
-tmp1=$tempdir/pnmm1
-tmp2=$tempdir/pnmm2
-tmp3=$tempdir/pnmm3
-tmp4=$tempdir/pnmm4
+tmpdir=$(mktemp -d -t ppmmargin.XXXXXXX) || exit 1
+tmp1="$tmpdir/tmp1"
+tmp2="$tmpdir/tmp2"
+tmp3="$tmpdir/tmp3"
+tmp4="$tmpdir/tmp4"
 
 color="-gofigure"
 
@@ -39,6 +34,9 @@ while true ; do
 	shift
 	if [ ! ${1-""} ] ; then
 	    echo "usage: $0 [-white|-black|-color <colorspec>] <size> [pnmfile]" 1>&2
+            if [ -d "$tmpdir" ]; then
+                rm -rf "$tmpdir"
+            fi
 	    exit 1
 	fi
 	color="$1"
@@ -46,6 +44,9 @@ while true ; do
 	;;
 	-* )
 	echo "usage: $0 [-white|-black|-color <colorspec>] <size> [pnmfile]" 1>&2
+        if [ -d "$tmpdir" ]; then
+            rm -rf "$tmpdir"
+        fi
 	exit 1
 	;;
 	* )
@@ -56,6 +57,9 @@ done
 
 if [ ! ${1-""} ] ; then
     echo "usage: $0 [-white|-black|-color <colorspec>] <size> [pnmfile]" 1>&2
+        if [ -d "$tmpdir" ]; then
+            rm -rf "$tmpdir"
+        fi
     exit 1
 fi
 size="$1"
@@ -63,6 +67,9 @@ shift
 
 if [ ${2-""} ] ; then
     echo "usage: $0 [-white|-black|-color <colorspec>] <size> [pnmfile]" 1>&2
+        if [ -d "$tmpdir" ]; then
+            rm -rf "$tmpdir"
+        fi
     exit 1
 fi
 
@@ -86,3 +93,7 @@ pamflip -rotate90 $tmp2 > $tmp3
 # Cat things together.
 pnmcat -lr $tmp2 $tmp1 $tmp2 > $tmp4
 pnmcat -tb $tmp3 $tmp4 $tmp3
+
+if [ -d "$tmpdir" ]; then
+	rm -rf "$tmpdir"
+fi
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/editor/pnmpad.c netpbm-10.27/editor/pnmpad.c
--- netpbm-10.27-orig/editor/pnmpad.c	2004-05-16 00:02:15.000000000 +0200
+++ netpbm-10.27/editor/pnmpad.c	2005-05-12 11:36:40.015625000 +0200
@@ -356,6 +356,8 @@ main(int argc, char ** argv) {
 
     computePadSizes(cmdline, cols, rows, &lpad, &rpad, &tpad, &bpad);
 
+    overflow_add(cols, lpad);
+    overflow_add(cols + lpad, rpad);
     newcols = cols + lpad + rpad;
     xelrow = pnm_allocrow(newcols);
     bgrow = pnm_allocrow(newcols);
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/editor/pnmpaste.c netpbm-10.27/editor/pnmpaste.c
--- netpbm-10.27-orig/editor/pnmpaste.c	2002-07-30 19:47:35.000000000 +0200
+++ netpbm-10.27/editor/pnmpaste.c	2005-05-12 11:36:39.968750000 +0200
@@ -100,11 +100,16 @@ main( argc, argv )
 	    "y is too large -- the second anymap has only %d rows",
 	    rows2 );
 
+    overflow_add(x, cols2);
+    overflow_add(y, rows2);
     if ( x < 0 )
 	x += cols2;
     if ( y < 0 )
 	y += rows2;
 
+    overflow_add(x, cols1);
+    overflow_add(y, rows1);
+    
     if ( x + cols1 > cols2 )
 	pm_error( "x + width is too large by %d pixels", x + cols1 - cols2 );
     if ( y + rows1 > rows2 )
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/editor/pnmremap.c netpbm-10.27/editor/pnmremap.c
--- netpbm-10.27-orig/editor/pnmremap.c	2005-02-23 05:35:06.000000000 +0100
+++ netpbm-10.27/editor/pnmremap.c	2005-05-12 11:36:40.031250000 +0200
@@ -280,6 +280,7 @@ initFserr(struct pam * const pamP, struc
 
     unsigned int const fserrSize = pamP->width + 2;
 
+    overflow_add(pamP->width, 2);
     MALLOCARRAY(fserrP->thiserr, pamP->depth);
     if (fserrP->thiserr == NULL)
         pm_error("Out of memory allocating Floyd-Steinberg structures");
@@ -319,6 +320,7 @@ floydInitRow(struct pam * const pamP, st
 
     int col;
     
+    overflow_add(pamP->width, 2);
     for (col = 0; col < pamP->width + 2; ++col) {
         unsigned int plane;
         for (plane = 0; plane < pamP->depth; ++plane) 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/editor/pnmrotate.c netpbm-10.27/editor/pnmrotate.c
--- netpbm-10.27-orig/editor/pnmrotate.c	2004-02-02 20:19:52.000000000 +0100
+++ netpbm-10.27/editor/pnmrotate.c	2005-05-12 11:36:40.062500000 +0200
@@ -11,6 +11,7 @@
 */
 
 #include <math.h>
+#include <limits.h>
 
 #include "pnm.h"
 #include "shhopt.h"
@@ -572,11 +573,18 @@ main(int argc, char *argv[]) { 
     yshearfac = sin(cmdline.angle);
     if (yshearfac < 0.0)
         yshearfac = -yshearfac;
+    overflow2(rows, xshearfac);
+    overflow_add(cols, 1);
+    overflow_add(rows * xshearfac, cols);
     tempcols = rows * xshearfac + cols + 0.999999;
     yshearjunk = (tempcols - cols) * yshearfac;
     newrows = tempcols * yshearfac + rows + 0.999999;
     x2shearjunk = (newrows - rows - yshearjunk) * xshearfac;
     newrows -= 2 * yshearjunk;
+
+    if(newrows * xshearfac + tempcols + 0.999999 - 2 * x2shearjunk > INT_MAX)
+        pm_error("image too large");
+
     newcols = newrows * xshearfac + tempcols + 0.999999 - 2 * x2shearjunk;
     direction = cmdline.angle > 0 ? COUNTERCLOCKWISE : CLOCKWISE;
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/editor/pnmscalefixed.c netpbm-10.27/editor/pnmscalefixed.c
--- netpbm-10.27-orig/editor/pnmscalefixed.c	2002-07-30 19:52:49.000000000 +0200
+++ netpbm-10.27/editor/pnmscalefixed.c	2005-05-12 11:36:40.000000000 +0200
@@ -209,6 +209,8 @@ compute_output_dimensions(const struct c
                           const int rows, const int cols,
                           int * newrowsP, int * newcolsP) {
 
+    overflow2(rows, cols);
+
     if (cmdline.pixels) {
         if (rows * cols <= cmdline.pixels) {
             *newrowsP = rows;
@@ -260,6 +262,8 @@ compute_output_dimensions(const struct c
 
     if (*newcolsP < 1) *newcolsP = 1;
     if (*newrowsP < 1) *newrowsP = 1;
+    
+    overflow2(*newcolsP, *newrowsP);
 }        
 
 
@@ -441,6 +445,9 @@ main(int argc, char **argv ) {
        unfilled.  We can address that by stretching, whereas the other
        case would require throwing away some of the input.
     */
+    
+    overflow2(newcols, SCALE);
+    overflow2(newrows, SCALE);
     sxscale = SCALE * newcols / cols;
     syscale = SCALE * newrows / rows;
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/editor/pnmshear.c netpbm-10.27/editor/pnmshear.c
--- netpbm-10.27-orig/editor/pnmshear.c	2002-12-11 21:00:02.000000000 +0100
+++ netpbm-10.27/editor/pnmshear.c	2005-05-12 11:36:40.000000000 +0200
@@ -12,6 +12,7 @@
 
 #include <math.h>
 #include <string.h>
+#include <limits.h>
 
 #include "pnm.h"
 #include "shhopt.h"
@@ -198,6 +199,11 @@ main(int argc, char * argv[]) {
     if ( shearfac < 0.0 )
         shearfac = -shearfac;
 
+    if(rows * shearfac >= INT_MAX-1)
+    	pm_error("image too large");
+    
+    overflow_add(rows * shearfac, cols+1);
+    
     newcols = rows * shearfac + cols + 0.999999;
 
     pnm_writepnminit( stdout, newcols, rows, newmaxval, newformat, 0 );
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/editor/ppmdither.c netpbm-10.27/editor/ppmdither.c
--- netpbm-10.27-orig/editor/ppmdither.c	2003-07-06 21:54:02.000000000 +0200
+++ netpbm-10.27/editor/ppmdither.c	2005-05-12 11:36:39.984375000 +0200
@@ -111,6 +111,9 @@ dith_matrix(unsigned int const dith_dim)
             (dith_dim * sizeof(int *)) + /* pointers */
             (dith_dim * dith_dim * sizeof(int)); /* data */
 
+        overflow2(dith_dim, sizeof(int *));
+        overflow3(dith_dim, dith_dim, sizeof(int));
+        overflow_add(dith_dim * sizeof(int *), dith_dim * dith_dim * sizeof(int));
         dith_mat = (unsigned int **) malloc(dith_mat_sz);
 
         if (dith_mat == NULL) 
@@ -148,7 +151,7 @@ dith_setup(const unsigned int dith_power
            const unsigned int dith_ng, 
            const unsigned int dith_nb, 
            const pixval output_maxval,
-           pixel ** const colormapP) {
+           pixel ** colormapP) {
 /*----------------------------------------------------------------------------
    Set up the dithering parameters, color map (lookup table) and
    dithering matrix.
@@ -165,7 +168,8 @@ dith_setup(const unsigned int dith_power
     if (dith_nb < 2) 
         pm_error("too few shades for blue, minimum of 2");
 
-    MALLOCARRAY(*colormapP, dith_nr * dith_ng * dith_nb);
+    overflow2(dith_nr, dith_ng);
+    colormapP = malloc3(dith_nr * dith_ng, dith_nb,  sizeof(pixel));
     if (*colormapP == NULL) 
         pm_error("Unable to allocate space for the color lookup table "
                  "(%d by %d by %d pixels).", dith_nr, dith_ng, dith_nb);
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/editor/ppmfade netpbm-10.27/editor/ppmfade
--- netpbm-10.27-orig/editor/ppmfade	2005-03-16 22:10:39.000000000 +0100
+++ netpbm-10.27/editor/ppmfade	2005-05-12 11:03:30.500000000 +0200
@@ -14,6 +14,7 @@
 #
 #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
 use strict;
+use File::Temp "tempdir";
 
 my $SPREAD =  1;
 my $SHIFT =   2;
@@ -116,20 +117,26 @@ if ($first_file ne "undefined") {
 
 print("Frames are " . $width . "W x " . $height . "H\n");
 
+#
+# We create a tmp-directory right here
+#
+my $tmpdir = tempdir("ppmfade.XXXXXX", CLEANUP => 1);
+
+
 if ($first_file eq "undefined") {
     print "Fading from black to ";
-    system("ppmmake \\#000 $width $height >junk1$$.ppm");
+    system("ppmmake \\#000 $width $height >$tmpdir/junk1$$.ppm");
 } else {
     print "Fading from $first_file to ";
-    system("cp", $first_file, "junk1$$.ppm");
+    system("cp", $first_file, "$tmpdir/junk1$$.ppm");
 }
 
 if ($last_file eq "undefined") {
     print "black.\n";
-    system("ppmmake \\#000 $width $height >junk2$$.ppm");
+    system("ppmmake \\#000 $width $height >$tmpdir/junk2$$.ppm");
 } else {
     print "$last_file\n";
-    system("cp", $last_file, "junk2$$.ppm");
+    system("cp", $last_file, "$tmpdir/junk2$$.ppm");
 }
 
 #
@@ -137,14 +144,14 @@ if ($last_file eq "undefined") {
 #
 
 # Here's what our temporary files are:
-#   junk1$$.ppm: The original (fade-from) image
-#   junk2$$.ppm: The target (fade-from) image
-#   junk3$$.ppm: The frame of the fade for the current iteration of the 
+#   $tmpdir/junk1$$.ppm: The original (fade-from) image
+#   $tmpdir/junk2$$.ppm: The target (fade-from) image
+#   $tmpdir/junk3$$.ppm: The frame of the fade for the current iteration of the 
 #                the for loop.
-#   junk1a$$.ppm: If the fade involves a ppmmix sequence from one intermediate
+#   $tmpdir/junk1a$$.ppm: If the fade involves a ppmmix sequence from one intermediate
 #                 image to another, this is the first frame of that 
 #                 sequence.
-#   junk2a$$.ppm: This is the last frame of the above-mentioned ppmmix sequence
+#   $tmpdir/junk2a$$.ppm: This is the last frame of the above-mentioned ppmmix sequence
 
 my $i;    # Frame number
 for ($i = 1; $i <= $nframes; $i++) {
@@ -152,148 +159,148 @@ for ($i = 1; $i <= $nframes; $i++) {
     if ($mode eq $SPREAD) {
         if ($i <= 10) {
             my $n = $spline20[$i] * 100;
-            system("ppmspread $n junk1$$.ppm >junk3$$.ppm");
+            system("ppmspread $n $tmpdir/junk1$$.ppm >$tmpdir/junk3$$.ppm");
         } elsif ($i <= 20) {
             my $n;
             $n = $spline20[$i] * 100;
-            system("ppmspread $n junk1$$.ppm >junk1a$$.ppm");
+            system("ppmspread $n $tmpdir/junk1$$.ppm >$tmpdir/junk1a$$.ppm");
             $n = (1-$spline20[$i-10]) * 100;
-            system("ppmspread $n junk2$$.ppm >junk2a$$.ppm");
+            system("ppmspread $n $tmpdir/junk2$$.ppm >$tmpdir/junk2a$$.ppm");
             $n = $spline10[$i-10];
-            system("ppmmix $n junk1a$$.ppm junk2a$$.ppm >junk3$$.ppm");
+            system("ppmmix $n $tmpdir/junk1a$$.ppm $tmpdir/junk2a$$.ppm >$tmpdir/junk3$$.ppm");
         } else {
             my $n = (1-$spline20[$i-10])*100;
-            system("ppmspread $n junk2$$.ppm >junk3$$.ppm");
+            ystem("ppmspread $n $tmpdir/junk2$$.ppm >$tmpdir/junk3$$.ppm");
         }
     } elsif ($mode eq $SHIFT) {
         if ($i <= 10) {
             my $n = $spline20[$i] * 100;
-            system("ppmshift $n junk1$$.ppm >junk3$$.ppm");
+            system("ppmshift $n $tmpdir/junk1$$.ppm >$tmpdir/junk3$$.ppm");
         } elsif ($i <= 20) {
             my $n;
             $n = $spline20[$i] * 100;
-            system("ppmshift $n junk1$$.ppm >junk1a$$.ppm");
+            system("ppmshift $n $tmpdir/junk1$$.ppm >$tmpdir/junk1a$$.ppm");
             $n = (1-$spline20[$i-10])*100;
-            system("ppmshift $n junk2$$.ppm >junk2a$$.ppm");
+            system("ppmshift $n $tmpdir/junk2$$.ppm >$tmpdir/junk2a$$.ppm");
             $n = $spline10[$i-10];
-            system("ppmmix $n junk1a$$.ppm junk2a$$.ppm >junk3$$.ppm");
+            system("ppmmix $n $tmpdir/junk1a$$.ppm $tmpdir/junk2a$$.ppm >$tmpdir/junk3$$.ppm");
         } else {
             my $n = (1-$spline20[$i-10]) * 100;
-            system("ppmshift $n junk2$$.ppm >junk3$$.ppm");
+            system("ppmshift $n $tmpdir/junk2$$.ppm >$tmpdir/junk3$$.ppm");
         }
     } elsif ($mode eq $RELIEF) {
         if ($i == 1) {
-            system("ppmrelief junk1$$.ppm >junk1r$$.ppm");
+            system("ppmrelief $tmpdir/junk1$$.ppm >$tmpdir/junk1r$$.ppm");
         }
         if ($i <= 10) {
             my $n = $spline10[$i];
-            system("ppmmix $n junk1$$.ppm junk1r$$.ppm >junk3$$.ppm");
+            system("ppmmix $n $tmpdir/junk1$$.ppm $tmpdir/junk1r$$.ppm >$tmpdir/junk3$$.ppm");
         } elsif ($i <= 20) {
             my $n = $spline10[$i-10];
-            system("ppmmix $n junk1r$$.ppm junk2r$$.ppm >junk3$$.ppm");
+            system("ppmmix $n $tmpdir/junk1r$$.ppm $tmpdir/junk2r$$.ppm >$tmpdir/junk3$$.ppm");
         } else {
             my $n = $spline10[$i-20];
-            system("ppmmix $n junk2r$$.ppm junk2$$.ppm >junk3$$.ppm");
+            system("ppmmix $n $tmpdir/junk2r$$.ppm $tmpdir/junk2$$.ppm >$tmpdir/junk3$$.ppm");
         }
         if ($i == 10) {
-            system("ppmrelief junk2$$.ppm >junk2r$$.ppm");
+            system("ppmrelief $tmpdir/junk2$$.ppm >$tmpdir/junk2r$$.ppm");
         }
     } elsif ($mode eq $OIL) {
         if ($i == 1) {
-            system("ppmtopgm junk1$$.ppm | pgmoil >junko$$.ppm");
-            system("rgb3toppm junko$$.ppm junko$$.ppm junko$$.ppm " .
-                   ">junk1o$$.ppm");
+            system("ppmtopgm $tmpdir/junk1$$.ppm | pgmoil >$tmpdir/junko$$.ppm");
+            system("rgb3toppm $tmpdir/junko$$.ppm $tmpdir/junko$$.ppm $tmpdir/junko$$.ppm " .
+                   ">$tmpdir/junk1o$$.ppm");
         }
         if ($i <= 10) {
             my $n = $spline10[$i];
-            system("ppmmix $n junk1$$.ppm junk1o$$.ppm >junk3$$.ppm");
+            system("ppmmix $n $tmpdir/junk1$$.ppm $tmpdir/junk1o$$.ppm >$tmpdir/junk3$$.ppm");
         } elsif ($i <= 20) {
             my $n = $spline10[$i-10];
-            system("ppmmix $n junk1o$$.ppm junk2o$$.ppm >junk3$$.ppm");
+            system("ppmmix $n $tmpdir/junk1o$$.ppm $tmpdir/junk2o$$.ppm >$tmpdir/junk3$$.ppm");
         } else {
             my $n = $spline10[$i-20];
-            system("ppmmix $n junk2o$$.ppm junk2$$.ppm >junk3$$.ppm");
+            system("ppmmix $n $tmpdir/junk2o$$.ppm $tmpdir/junk2$$.ppm >$tmpdir/junk3$$.ppm");
         }
         if ($i == 10) {
-            system("ppmtopgm junk2$$.ppm | pgmoil >junko$$.ppm");
-            system("rgb3toppm junko$$.ppm junko$$.ppm junko$$.ppm " .
-                   ">junk2o$$.ppm");
+            system("ppmtopgm $tmpdir/junk2$$.ppm | pgmoil >$tmpdir/junko$$.ppm");
+            system("rgb3toppm $tmpdir/junko$$.ppm $tmpdir/junko$$.ppm $tmpdir/junko$$.ppm " .
+                   ">$tmpdir/junk2o$$.ppm");
         }
     } elsif ($mode eq $EDGE) {
         if ($i == 1) {
-            system("ppmtopgm junk1$$.ppm | pgmedge >junko$$.ppm");
-            system("rgb3toppm junko$$.ppm junko$$.ppm junko$$.ppm " .
-                   ">junk1o$$.ppm");
+            system("ppmtopgm $tmpdir/junk1$$.ppm | pgmedge >$tmpdir/junko$$.ppm");
+            system("rgb3toppm $tmpdir/junko$$.ppm $tmpdir/junko$$.ppm $tmpdir/junko$$.ppm " .
+                   ">$tmpdir/junk1o$$.ppm");
         }
         if ($i <= 10) {
             my $n = $spline10[$i];
-            system("ppmmix $n junk1$$.ppm junk1o$$.ppm >junk3$$.ppm");
+            system("ppmmix $n $tmpdir/junk1$$.ppm $tmpdir/junk1o$$.ppm >$tmpdir/junk3$$.ppm");
         } elsif ($i <= 20) {
             my $n = $spline10[$i-10];
-            system("ppmmix $n junk1o$$.ppm junk2o$$.ppm >junk3$$.ppm");
+            system("ppmmix $n $tmpdir/junk1o$$.ppm $tmpdir/junk2o$$.ppm >$tmpdir/junk3$$.ppm");
         } else {
             my $n = $spline10[$i-20];
-            system("ppmmix $n junk2o$$.ppm junk2$$.ppm >junk3$$.ppm");
+            system("ppmmix $n $tmpdir/junk2o$$.ppm $tmpdir/junk2$$.ppm >$tmpdir/junk3$$.ppm");
         }
         if ($i == 10) {
-            system("ppmtopgm junk2$$.ppm | pgmedge >junko$$.ppm");
-            system("rgb3toppm junko$$.ppm junko$$.ppm junko$$.ppm " .
-                   ">junk2o$$.ppm");
+            system("ppmtopgm $tmpdir/junk2$$.ppm | pgmedge >$tmpdir/junko$$.ppm");
+            system("rgb3toppm $tmpdir/junko$$.ppm $tmpdir/junko$$.ppm $tmpdir/junko$$.ppm " .
+                   ">$tmpdir/junk2o$$.ppm");
         } 
     } elsif ($mode eq $BENTLEY) {
         if ($i == 1) {
-            system("ppmtopgm junk1$$.ppm | pgmbentley >junko$$.ppm");
-            system("rgb3toppm junko$$.ppm junko$$.ppm junko$$.ppm " .
-                   ">junk1o$$.ppm");
+            system("ppmtopgm $tmpdir/junk1$$.ppm | pgmbentley >$tmpdir/junko$$.ppm");
+            system("rgb3toppm $tmpdir/junko$$.ppm $tmpdir/junko$$.ppm $tmpdir/junko$$.ppm " .
+                   ">$tmpdir/junk1o$$.ppm");
         }
         if ($i <= 10) {
             my $n = $spline10[$i];
-            system("ppmmix $n junk1$$.ppm junk1o$$.ppm >junk3$$.ppm");
+            system("ppmmix $n $tmpdir/junk1$$.ppm $tmpdir/junk1o$$.ppm >$tmpdir/junk3$$.ppm");
         } elsif ($i <= 20) {
             my $n = $spline10[$i-10];
-            system("ppmmix $n junk1o$$.ppm junk2o$$.ppm >junk3$$.ppm");
+            system("ppmmix $n $tmpdir/junk1o$$.ppm $tmpdir/junk2o$$.ppm >$tmpdir/junk3$$.ppm");
         } else {
             my $n = $spline10[$i-20];
-            system("ppmmix $n junk2o$$.ppm junk2$$.ppm >junk3$$.ppm");
+            system("ppmmix $n $tmpdir/junk2o$$.ppm $tmpdir/junk2$$.ppm >$tmpdir/junk3$$.ppm");
         }
         if ($i == 10) {
-            system("ppmtopgm junk2$$.ppm | pgmbentley >junko$$.ppm");
-            system("rgb3toppm junko$$.ppm junko$$.ppm junko$$.ppm " .
-                   ">junk2o$$.ppm");
+            system("ppmtopgm $tmpdir/junk2$$.ppm | pgmbentley >$tmpdir/junko$$.ppm");
+            system("rgb3toppm $tmpdir/junko$$.ppm $tmpdir/junko$$.ppm $tmpdir/junko$$.ppm " .
+                   ">$tmpdir/junk2o$$.ppm");
         }
     } elsif ($mode eq $BLOCK) {
         if ($i <= 10) {
             my $n = 1 - 1.9*$spline20[$i];
-            system("pamscale $n junk1$$.ppm | " .
-                   "pamscale -width $width -height $height >junk3$$.ppm");
+            system("pamscale $n $tmpdir/junk1$$.ppm | " .
+                   "pamscale -width $width -height $height >$tmpdir/junk3$$.ppm");
         } elsif ($i <= 20) {
             my $n = $spline10[$i-10];
-            system("ppmmix $n junk1a$$.ppm junk2a$$.ppm >junk3$$.ppm");
+            system("ppmmix $n $tmpdir/junk1a$$.ppm $tmpdir/junk2a$$.ppm >$tmpdir/junk3$$.ppm");
         } else {
             my $n = 1 - 1.9*$spline20[31-$i];
-            system("pamscale $n junk2$$.ppm | " .
-                   "pamscale -width $width -height $height >junk3$$.ppm");
+            system("pamscale $n $tmpdir/junk2$$.ppm | " .
+                   "pamscale -width $width -height $height >$tmpdir/junk3$$.ppm");
         }
         if ($i == 10) {
-            system("cp", "junk3$$.ppm", "junk1a$$.ppm");
-            system("pamscale $n junk2$$.ppm | " .
-                   "pamscale -width $width -height $height >junk2a$$.ppm");
+            system("cp", "$tmpdir/junk3$$.ppm", "$tmpdir/junk1a$$.ppm");
+            system("pamscale $n $tmpdir/junk2$$.ppm | " .
+                   "pamscale -width $width -height $height >$tmpdir/junk2a$$.ppm");
         }    
     } elsif ($mode eq $MIX) {
         my $fade_factor = sqrt(1/($nframes-$i+1));
-        system("ppmmix $fade_factor junk1$$.ppm junk2$$.ppm >junk3$$.ppm");
+        system("ppmmix $fade_factor $tmpdir/junk1$$.ppm $tmpdir/junk2$$.ppm >$tmpdir/junk3$$.ppm");
     } else {
         print("Internal error: impossible mode value '$mode'\n");
     }
 
     my $outfile = sprintf("%s.%04d.ppm", $base_name, $i);
-    system("cp", "junk3$$.ppm", $outfile);
+    system("cp", "$tmpdir/junk3$$.ppm", $outfile);
 }
 
 #
 #  Clean up shop.
 #
-system("rm junk*$$.ppm");
+system("rm $tmpdir/junk*$$.ppm");
 
 exit(0);
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/editor/ppmquantall netpbm-10.27/editor/ppmquantall
--- netpbm-10.27-orig/editor/ppmquantall	2005-03-17 00:44:03.000000000 +0100
+++ netpbm-10.27/editor/ppmquantall	2005-05-12 11:04:17.375000000 +0200
@@ -63,13 +63,8 @@ for i in ${files[@]}; do
     heights=(${heights[*]} `grep -v '^#' $i | sed '1d; s/.* //; 2q'`)
 done
 
-tempdir="${TMPDIR-/tmp}/ppmquantall.$$"
-mkdir $tempdir || { echo "Could not create temporary file. Exiting."; exit 1;}
-chmod 700 $tempdir
-
-trap 'rm -rf $tempdir' 0 1 3 15
-
-all=$tempdir/pqa.all.$$
+all=$(mktemp -t pqa.all.XXXXXXXXXX) || exit 1
+rm -f $all
 
 pnmcat -topbottom -jleft -white ${files[@]} | pnmquant $newcolors > $all
 if [ $? != 0 ]; then
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/editor/ppmshadow netpbm-10.27/editor/ppmshadow
--- netpbm-10.27-orig/editor/ppmshadow	2005-03-16 22:10:25.000000000 +0100
+++ netpbm-10.27/editor/ppmshadow	2005-05-12 11:09:43.906250000 +0200
@@ -27,9 +27,10 @@ use strict;
 my $true=1; my $false=0;
 
 my $tmpdir = $ENV{TMPDIR} || "/tmp";
-my $ourtmp = "$tmpdir/ppmshadow$$";
-mkdir($ourtmp) or 
-    die("Unable to create directory for temporary files '$ourtmp");
+chomp($ourtmp = `mktemp -d -t PPMshadow.XXXXXX`);
+if ($? >> 8) {
+    die "Can't create tmpdir";
+}
 
 #   Process command line options
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/generator/pbmpage.c netpbm-10.27/generator/pbmpage.c
--- netpbm-10.27-orig/generator/pbmpage.c	2003-07-09 20:48:11.000000000 +0200
+++ netpbm-10.27/generator/pbmpage.c	2005-05-12 11:15:10.359375000 +0200
@@ -15,6 +15,7 @@
 #include <math.h>
 #include <stdio.h>
 #include <stdlib.h>
+#include <string.h>
 #include "pbm.h"
 
 /* Support both US and A4. */
@@ -161,6 +162,9 @@ output_pbm(FILE *file, const int Width, 
     /* We round the allocated row space up to a multiple of 8 so the ugly
        fast code below can work.
        */
+       
+    overflow_add(Width, 7);
+
     pbmrow = pbm_allocrow(((Width+7)/8)*8);
     
     bitmap_cursor = 0;
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/generator/pbmtext.c netpbm-10.27/generator/pbmtext.c
--- netpbm-10.27-orig/generator/pbmtext.c	2004-12-08 05:56:06.000000000 +0100
+++ netpbm-10.27/generator/pbmtext.c	2005-05-12 11:36:39.281250000 +0200
@@ -89,12 +89,14 @@ parse_command_line(int argc, char ** arg
         
         for (i = 1; i < argc; i++) {
             if (i > 1) {
+				overflow_add(totaltextsize, 1);
                 totaltextsize += 1;
                 text = realloc(text, totaltextsize);
                 if (text == NULL)
                     pm_error("out of memory allocating space for input text");
                 strcat(text, " ");
             } 
+            overflow_add(totaltextsize, strlen(argv[i]));
             totaltextsize += strlen(argv[i]);
             text = realloc(text, totaltextsize);
             if (text == NULL)
@@ -572,6 +574,7 @@ get_text(const char          cmdline_tex
     struct text input_text;
 
     if (cmdline_text) {
+        overflow_add(strlen(cmdline_text), 1);
         allocTextArray(&input_text, 1, strlen(cmdline_text));
         strcpy(input_text.textArray[0], cmdline_text);
         fix_control_chars(input_text.textArray[0], fn);
@@ -594,7 +597,9 @@ get_text(const char          cmdline_tex
         while (fgets(buf, sizeof(buf), stdin) != NULL) {
             fix_control_chars(buf, fn);
             if (lineCount >= maxlines) {
+                overflow2(maxlines, 2);
                 maxlines *= 2;
+                overflow2(maxlines, sizeof(char *));
                 text_array = (char**) realloc((char*) text_array, 
                                               maxlines * sizeof(char*));
                 if (text_array == NULL)
@@ -680,6 +685,7 @@ main(int argc, char *argv[]) {
             hmargin = fontP->maxwidth;
         } else {
             vmargin = fontP->maxheight;
+		    overflow2(2, fontP->maxwidth);
             hmargin = 2 * fontP->maxwidth;
         }
     }
@@ -695,12 +701,19 @@ main(int argc, char *argv[]) {
     } else
         lp = input_text;
     
+    overflow2(2, vmargin);
+    overflow2(lp.lineCount, fontP->maxheight);
+    overflow2(lp.lineCount-1, cmdline.lspace);
+    overflow_add(vmargin * 2, lp.lineCount * fontP->maxheight);
+    overflow_add(vmargin * 2 + lp.lineCount * fontP->maxheight, (lp.lineCount-1) * cmdline.lspace);
     rows = 2 * vmargin + 
         lp.lineCount * fontP->maxheight + 
         (lp.lineCount-1) * cmdline.lspace;
 
     compute_image_width(lp, fontP, cmdline.space, &maxwidth, &maxleftb);
 
+    overflow2(2, hmargin);
+    overflow_add(2*hmargin, maxwidth);
     cols = 2 * hmargin + maxwidth;
     bits = pbm_allocarray(cols, rows);
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/generator/pgmcrater.c netpbm-10.27/generator/pgmcrater.c
--- netpbm-10.27-orig/generator/pgmcrater.c	2003-07-06 22:02:41.000000000 +0200
+++ netpbm-10.27/generator/pgmcrater.c	2005-05-12 11:31:50.781250000 +0200
@@ -131,7 +131,7 @@ static void gencraters()
     /* Acquire the elevation array and initialise it to mean
        surface elevation. */
 
-    MALLOCARRAY(aux, SCRX * SCRY);
+    aux = (unsigned short *) malloc3(SCRX, SCRY, sizeof(short));
     if (aux == NULL) 
         pm_error("out of memory allocating elevation array");
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/generator/pgmkernel.c netpbm-10.27/generator/pgmkernel.c
--- netpbm-10.27-orig/generator/pgmkernel.c	2003-07-06 22:03:29.000000000 +0200
+++ netpbm-10.27/generator/pgmkernel.c	2005-05-12 11:32:18.921875000 +0200
@@ -68,7 +68,7 @@ main ( argc, argv )
     kycenter = (fysize - 1) / 2.0;
     ixsize = fxsize + 0.999;
     iysize = fysize + 0.999;
-    MALLOCARRAY(fkernel, ixsize * iysize);
+    fkernel = (double *) malloc3 (ixsize, iysize, sizeof(double));
     for (i = 0; i < iysize; i++) 
         for (j = 0; j < ixsize; j++) {
             fkernel[i*ixsize+j] = 1.0 / (1.0 + w * sqrt((double)
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/generator/ppmrainbow netpbm-10.27/generator/ppmrainbow
--- netpbm-10.27-orig/generator/ppmrainbow	2003-01-04 01:40:56.000000000 +0100
+++ netpbm-10.27/generator/ppmrainbow	2005-05-12 11:14:02.000000000 +0200
@@ -11,7 +11,7 @@ my ($Twid, $Thgt, $tmpdir, $norepeat, $v
 # set defaults
 $Twid = 600;
 $Thgt = 8;
-$tmpdir = $ENV{"TMPDIR"} || "/tmp";
+$tmpdir = $ENV{"TMPDIR"} || ".tmp";
 $norepeat = $FALSE;
 $verbose = $FALSE;
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/lib/Makefile netpbm-10.27/lib/Makefile
--- netpbm-10.27-orig/lib/Makefile	2005-02-05 19:47:27.000000000 +0100
+++ netpbm-10.27/lib/Makefile	2005-05-12 11:49:52.406250000 +0200
@@ -3,7 +3,8 @@ ifeq ($(SRCDIR)x,x)
   BUILDDIR = $(SRCDIR)
 endif
 SUBDIR = lib
-VPATH=.:$(SRCDIR)/$(SUBDIR)
+RESDIR = $(SRCDIR)/res
+VPATH=. $(SRCDIR)/$(SUBDIR) $(RESDIR)
 DLLTOOL=dlltool
 include $(BUILDDIR)/Makefile.config
 
@@ -76,7 +77,7 @@ extra_staticlib: $(EXTRA_STATICLIB)
 
 $(LIBOBJECTS): %.o: %.c $(HEADERLINKS)
 # Note that the user may have configured -I options into CFLAGS.
-	$(CC) -c $(INCLUDES) -DNDEBUG $(CFLAGS) $(CFLAGS_SHLIB) \
+	$(CC) -c $(INCLUDES) -DNDEBUG $(CPPFLAGS) $(CFLAGS) $(CFLAGS_SHLIB) \
 	  $(CFLAGS_PERSONAL) $(CADD) -o $@ $<
 
 MAJ = $(NETPBM_MAJOR_RELEASE)
@@ -116,14 +117,16 @@ libnetpbm.$(NETPBMLIBSUFFIX).$(MAJ).$(MI
 endif
 
 ifeq ($(NETPBMLIBTYPE),dll)
+$(NETPBMSHLIBPREFIX)netpbm-dllversion.o: $(RESDIR)/$(NETPBMSHLIBPREFIX)netpbm-dllversion.c
+	$(CC) -c -o $@ $< $(CPPFLAGS) $(CFLAGS)
+LIBOBJECTS+=$(NETPBMSHLIBPREFIX)netpbm-dllversion.o
 ifeq ($(STATICLIB_TOO),y)
 $(NETPBMSHLIBPREFIX)netpbm$(DLLVER).dll: $(LIBOBJECTS) $(LIBOBJECTS_X) libnetpbm.$(STATICLIBSUFFIX)
 else
 $(NETPBMSHLIBPREFIX)netpbm$(DLLVER).dll: $(LIBOBJECTS) $(LIBOBJECTS_X)
 endif
-	$(LD) $(LDSHLIB) -Wl,--export-all-symbols \
-            -Wl,-soname,$(NETPBMSHLIBPREFIX)netpbm$(DLLVER).dll \
-            -Wl,--out-implib,libnetpbm.dll.a -o $@ $(LDFLAGS) \
+	@echo "VPATH = $(VPATH)"
+	rm -f libnetpbm.def && o2dll -l libnetpbm.dll.a -o $@ $(LDFLAGS) \
             $(LIBOBJECTS) $(LIBOBJECTS_X) $(LDLIBS) $(LADD) 
 endif
 
@@ -238,26 +241,26 @@ install.hdr: $(INTERFACE_HEADERS:%=%_ins
 	  $(SRCDIR)/lib/$(@:%_installhdr=%) $(PKGDIR)/include/;
 
 .PHONY: install.staticlib
-install.staticlib: $(PKGDIR)/link
+install.staticlib: $(PKGDIR)/lib
 	$(INSTALL) -c -m $(INSTALL_PERM_LIBS) libnetpbm.$(STATICLIBSUFFIX) \
-	  $(PKGDIR)/link
+	  $(PKGDIR)/lib
 
 # Install a shared library stub -- the ".so" file used at link time to
 # prepare a program for dynamically linking a library at run time 
 .PHONY: install.sharedlibstub
-install.sharedlibstub: $(PKGDIR)/link
+install.sharedlibstub: $(PKGDIR)/lib
 ifeq ($(NETPBMLIBTYPE),unixshared)
 # install the link-time (.so) links to the runtime libraries
-	cd $(PKGDIR)/link ; \
+	cd $(PKGDIR)/lib ; \
           rm -f libnetpbm.$(NETPBMLIBSUFFIX); \
           $(SYMLINK) ../lib/libnetpbm.$(NETPBMLIBSUFFIX).$(MAJ) \
             libnetpbm.$(NETPBMLIBSUFFIX)
 endif
 ifeq ($(NETPBMLIBTYPE),dll)
-	$(INSTALL) -c -m $(INSTALL_PERM_LIBS) libnetpbm.dll.a $(PKGDIR)/link
+	$(INSTALL) -c -m $(INSTALL_PERM_LIBS) libnetpbm.dll.a $(PKGDIR)/lib
 endif
 ifeq ($(NETPBMLIBTYPE),dylib)
-	cd $(PKGDIR)/link/ ; \
+	cd $(PKGDIR)/lib/ ; \
           rm -f libnetpbm.dylib; \
 	$(SYMLINK) ../lib/libnetpbm.$(MAJ).$(MIN).dylib libnetpbm.dylib
 endif
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/lib/libpam.c netpbm-10.27/lib/libpam.c
--- netpbm-10.27-orig/lib/libpam.c	2005-03-17 04:19:49.000000000 +0100
+++ netpbm-10.27/lib/libpam.c	2005-05-12 11:36:40.156250000 +0200
@@ -270,7 +270,8 @@ allocPamRow(const struct pam * const pam
     int const bytesPerTuple = allocationDepth(pamP) * sizeof(sample);
     tuple * tuplerow;
 
-    tuplerow = malloc(pamP->width * (sizeof(tuple *) + bytesPerTuple));
+    overflow_add(sizeof(tuple *), bytesPerTuple);
+    tuplerow = malloc2(pamP->width, sizeof(tuple *) + bytesPerTuple);
                       
     if (tuplerow != NULL) {
         /* Now we initialize the pointers to the individual tuples
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/lib/libpammap.c netpbm-10.27/lib/libpammap.c
--- netpbm-10.27-orig/lib/libpammap.c	2005-03-17 05:27:49.000000000 +0100
+++ netpbm-10.27/lib/libpammap.c	2005-05-12 11:36:40.125000000 +0200
@@ -101,6 +101,8 @@ allocTupleIntListItem(struct pam * const
     */
     struct tupleint_list_item * retval;
 
+    overflow2(pamP->depth, sizeof(sample));
+    overflow_add(sizeof(*retval)-sizeof(retval->tupleint.tuple), pamP->depth*sizeof(sample));
     unsigned int const size = 
         sizeof(*retval) - sizeof(retval->tupleint.tuple) 
         + pamP->depth * sizeof(sample);
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/lib/libpbm1.c netpbm-10.27/lib/libpbm1.c
--- netpbm-10.27-orig/lib/libpbm1.c	2005-02-05 19:41:54.000000000 +0100
+++ netpbm-10.27/lib/libpbm1.c	2005-05-12 11:36:40.171875000 +0200
@@ -56,6 +56,7 @@ pbm_check(FILE * file, const enum pm_che
         pm_message("pm_filepos passed to pm_check() is %u bytes",
                    sizeof(pm_filepos));
 #endif
+        overflow2(bytes_per_row, rows);
         pm_check(file, check_type, need_raster_size, retval_p);
     }
 }
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/lib/libpbmvms.c netpbm-10.27/lib/libpbmvms.c
--- netpbm-10.27-orig/lib/libpbmvms.c	2000-05-26 20:34:55.000000000 +0200
+++ netpbm-10.27/lib/libpbmvms.c	2005-05-12 11:36:40.140625000 +0200
@@ -1,3 +1,5 @@
+#warning "NOT AUDITED"
+
 /***************************************************************************
   This file contains library routines needed to build Netpbm for VMS.
   However, as of 2000.05.26, when these were split out of libpbm1.c
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/lib/libpm.c netpbm-10.27/lib/libpm.c
--- netpbm-10.27-orig/lib/libpm.c	2005-03-24 20:55:02.000000000 +0100
+++ netpbm-10.27/lib/libpm.c	2005-05-12 11:39:04.484375000 +0200
@@ -36,6 +36,7 @@
     /* This makes the the x64() functions available on AIX */
 
 #include <stdio.h>
+#include <limits.h>
 #include <stdarg.h>
 #include <string.h>
 #include <errno.h>
@@ -51,6 +52,10 @@
 #include "mallocvar.h"
 #include "pm.h"
 
+#ifdef __WIN32__
+#include <windows.h>
+#endif /* __WIN32__ */
+
 /* The following are set by pm_init(), then used by subsequent calls to other
    pm_xxx() functions.
    */
@@ -59,6 +64,9 @@ static bool pm_showmessages;  
     /* Programs should display informational messages (because the user didn't
        specify the --quiet option).
     */
+#ifdef __WIN32__
+  char exec_parent[MAX_PATH]; /* parent directory of program */
+#endif /* __WIN32__ */
 
 int pm_plain_output;
     /* Boolean: programs should produce output in plain format */
@@ -155,7 +163,7 @@ char*
 pm_allocrow(int const cols, int const size) {
     char * itrow;
 
-    itrow = malloc( cols * size );
+    itrow = (char*) malloc2( cols , size );
     if ( itrow == NULL )
         pm_error( "out of memory allocating a row" );
     return itrow;
@@ -195,7 +203,7 @@ pm_allocarray(int const cols, int const 
     if ( rowIndex == NULL )
         pm_error("out of memory allocating row index (%u rows) for an array",
                  rows);
-    rowheap = malloc( rows * cols * size );
+    rowheap = (char*) malloc3( rows, cols, size );
     if ( rowheap == NULL ) {
         /* We couldn't get the whole heap in one block, so try fragmented
            format.
@@ -417,6 +425,18 @@ pm_init(const char * const progname, uns
     if (!isatty(1)) setmode(1,O_BINARY);  /* Standard Output */
 #endif /* HAVE_SETMODE */
 #endif /* O_BINARY */
+
+#ifdef _WIN32
+  { char *lastslash;
+
+  GetModuleFileName (NULL, exec_parent, MAX_PATH);
+  if ((lastslash = strrchr (exec_parent, '\\')) != NULL)
+   *lastslash = '\0';
+  if ((lastslash = strrchr (exec_parent, '\\')) != NULL)
+   *lastslash = '\0';
+  }
+#endif /* _WIN32 */
+
 }
 
 
@@ -484,6 +504,12 @@ showNetpbmHelp(const char progname[]) {
         netpbmConfigFileName = "/etc/netpbm";
     
     netpbmConfigFile = fopen(netpbmConfigFileName, "r");
+#ifdef __WIN32__
+    if (netpbmConfigFile == NULL) { /* try ../etc/netpbm */
+		sprintf(netpbmConfigFileName, "%s\\etc\\netpbm", exec_parent);
+	    netpbmConfigFile = fopen(netpbmConfigFileName, "r");
+	}
+#endif /* __WIN32__ */
     if (netpbmConfigFile == NULL) {
         pm_message("Unable to open Netpbm configuration file '%s'.  "
                    "Errno = %d (%s).  "
@@ -963,6 +989,7 @@ pm_readbigshort(FILE *  const ifP, 
     if (c == EOF)
         abortWithReadError(ifP);
     s = (c & 0xff) << 8;
+
     c = getc(ifP);
     if (c == EOF)
         abortWithReadError(ifP);
@@ -1042,6 +1069,8 @@ pm_readlittleshort(FILE *  const ifP, 
     if (c == EOF)
         abortWithReadError(ifP);
     s = c & 0xff;
+
+    c = getc(ifP);
     if (c == EOF)
         abortWithReadError(ifP);
     s |= (c & 0xff) << 8;
@@ -1075,13 +1104,18 @@ pm_readlittlelong(FILE * const ifP, 
     if (c == EOF)
         abortWithReadError(ifP);
     l = c & 0xff;
+
     c = getc(ifP);
     if (c == EOF)
         abortWithReadError(ifP);
     l |= (c & 0xff) << 8;
+
+    c = getc(ifP);
     if (c == EOF)
         abortWithReadError(ifP);
     l |= (c & 0xff) << 16;
+
+    c = getc(ifP);
     if (c == EOF)
         abortWithReadError(ifP);
     l |= (c & 0xff) << 24;
@@ -1368,4 +1402,53 @@ pm_check(FILE *               const file
 }
 
 
+/*
+ *	Maths wrapping
+ */
+ 
+void overflow2(int a, int b)
+{
+	if(a < 0 || b < 0)
+		pm_error("object too large");
+	if(b == 0)
+		return;
+	if(a > INT_MAX / b)
+		pm_error("object too large");
+}
+
+void overflow3(int a, int b, int c)
+{
+	overflow2(a,b);
+	overflow2(a*b, c);
+}
+
+void overflow_add(int a, int b)
+{
+	if( a > INT_MAX - b)
+		pm_error("object too large");
+}
+
+void *malloc2(int a, int b)
+{
+	overflow2(a, b);
+	if(a*b == 0)
+		pm_error("Zero byte allocation");
+	return malloc(a*b);
+}
+
+void *malloc3(int a, int b, int c)
+{
+	overflow3(a, b, c);
+	if(a*b*c == 0)
+		pm_error("Zero byte allocation");
+	return malloc(a*b*c);
+}
+
+void *realloc2(void * a, int b, int c)
+{
+	overflow2(b, c);
+	if(b*c == 0)
+		pm_error("Zero byte allocation");
+	return realloc(a, b*c);
+}
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/lib/libsystem.c netpbm-10.27/lib/libsystem.c
--- netpbm-10.27-orig/lib/libsystem.c	2003-02-01 21:22:57.000000000 +0100
+++ netpbm-10.27/lib/libsystem.c	2005-05-12 09:48:44.859375000 +0200
@@ -163,6 +163,7 @@ cleanupFeederProcess(pid_t const feederP
     waitpid(feederPid, &status, 0);
 
     if (WIFSIGNALED(status)) {
+#ifdef SIGPIPE
         if (WTERMSIG(status) == SIGPIPE)
             pm_message("WARNING: "
                        "Standard Input feeder process was terminated by a "
@@ -170,6 +171,7 @@ cleanupFeederProcess(pid_t const feederP
                        "Standard Input before the Standard Input feeder was "
                        "through feeding it.");
         else
+#endif /* SIGPIPE */
             pm_message("WARNING: "
                        "Standard Input feeder was terminated by a Signal %d.",
                        WTERMSIG(status));
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/lib/pm.h netpbm-10.27/lib/pm.h
--- netpbm-10.27-orig/lib/pm.h	2005-03-24 21:00:43.000000000 +0100
+++ netpbm-10.27/lib/pm.h	2005-05-12 11:36:40.171875000 +0200
@@ -331,6 +331,21 @@ pm_arg0toprogname(const char arg0[]);
 
 
 
+void *malloc2(int, int);
+void *malloc3(int, int, int);
+void overflow2(int, int);
+void overflow3(int, int, int);
+void overflow_add(int, int);
+
 #endif
 
 
+#ifdef __WIN32__
+#ifdef NETPBM_USE_DLL
+#ifndef BUILD_DLL
+   __attribute__((dllimport))
+#endif	/* BUILD_DLL */
+#endif /* NETPBM_USE_DLL */
+   extern char exec_parent[MAX_PATH]; /* parent directory of program */
+#endif /* __WIN32__ */
+
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/manweb netpbm-10.27/manweb
--- netpbm-10.27-orig/manweb	2003-09-08 17:46:40.000000000 +0200
+++ netpbm-10.27/manweb	2005-05-12 09:29:47.078125000 +0200
@@ -315,7 +315,7 @@ sub readConfFile($) {
         if (defined($envVblValue)) {
             $confFile = $envVblValue;
         } else {
-            $confFile = "/etc/manweb.conf";
+            $confFile = "../etc/manweb.conf";
         }
     }
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/other/Makefile netpbm-10.27/other/Makefile
--- netpbm-10.27-orig/other/Makefile	2004-02-08 04:35:28.000000000 +0100
+++ netpbm-10.27/other/Makefile	2005-05-12 10:45:29.187500000 +0200
@@ -60,5 +60,5 @@ install.bin.local: $(PKGDIR)/bin
 # Remember that $(SYMLINK) might just be a copy command.
 # backward compatibility: program replaces pnmarith
 	cd $(PKGDIR)/bin ; \
-	$(SYMLINK) pamarith$(EXE) pnmarith
+	$(SYMLINK) pamarith$(EXE) pnmarith$(EXE)
 FORCE:
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/other/pnmcolormap.c netpbm-10.27/other/pnmcolormap.c
--- netpbm-10.27-orig/other/pnmcolormap.c	2004-08-11 01:37:03.000000000 +0200
+++ netpbm-10.27/other/pnmcolormap.c	2005-05-12 11:36:39.937500000 +0200
@@ -788,6 +788,7 @@ colormapToSquare(struct pam * const pamP
             pamP->width = intsqrt;
         else 
             pamP->width = intsqrt + 1;
+            overflow_add(intsqrt, 1);
     }
     {
         unsigned int const intQuotient = colormapSize / pamP->width;
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/urt/README netpbm-10.27/urt/README
--- netpbm-10.27-orig/urt/README	2000-06-02 22:53:04.000000000 +0200
+++ netpbm-10.27/urt/README	2005-05-12 11:36:40.218750000 +0200
@@ -18,3 +18,8 @@ in its initializer in the original.  But
 defines stdout as a variable, so that wouldn't compile.  So I changed
 it to NULL and added a line to rle_hdr_init to set that field to
 'stdout' dynamically.  2000.06.02 BJH.
+
+Redid the code to check for maths overflows and other crawly horrors.
+Removed pipe through and compress support (unsafe)
+
+Alan Cox <alan@redhat.com>
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/urt/Runput.c netpbm-10.27/urt/Runput.c
--- netpbm-10.27-orig/urt/Runput.c	2002-03-13 05:24:43.000000000 +0100
+++ netpbm-10.27/urt/Runput.c	2005-05-12 11:36:40.187500000 +0200
@@ -17,6 +17,8 @@
  *
  *  Modified at BRL 16-May-88 by Mike Muuss to avoid Alliant STDC desire
  *  to have all "void" functions so declared.
+ *
+ *  2002-12-19: Fix maths wrapping bugs. Alan Cox <alan@redhat.com>
  */
 /* 
  * Runput.c - General purpose Run Length Encoding.
@@ -200,9 +202,11 @@ RunSetup(rle_hdr * the_hdr)
     if ( the_hdr->background != 0 )
     {
 	register int i;
-	register rle_pixel *background =
-	    (rle_pixel *)malloc( (unsigned)(the_hdr->ncolors + 1) );
+	register rle_pixel *background;
 	register int *bg_color;
+
+	overflow_add(the_hdr->ncolors,1);
+	background = (rle_pixel *)malloc( (unsigned)(the_hdr->ncolors + 1) );
 	/* 
 	 * If even number of bg color bytes, put out one more to get to 
 	 * 16 bit boundary.
@@ -222,7 +226,7 @@ RunSetup(rle_hdr * the_hdr)
 	/* Big-endian machines are harder */
 	register int i, nmap = (1 << the_hdr->cmaplen) *
 			       the_hdr->ncmap;
-	register char *h_cmap = (char *)malloc( nmap * 2 );
+	register char *h_cmap = (char *)malloc2( nmap, 2 );
 	if ( h_cmap == NULL )
 	{
 	    fprintf( stderr,
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/urt/rle.h netpbm-10.27/urt/rle.h
--- netpbm-10.27-orig/urt/rle.h	2002-03-13 16:32:34.000000000 +0100
+++ netpbm-10.27/urt/rle.h	2005-05-12 11:36:40.218750000 +0200
@@ -14,6 +14,9 @@
  * If you modify this software, you should include a notice giving the
  * name of the person performing the modification, the date of modification,
  * and the reason for such modification.
+ *
+ *  2002-12-19: Fix maths wrapping bugs. Alan Cox <alan@redhat.com>
+ *  Header declarations needed
  */
 /* 
  * rle.h - Global declarations for Utah Raster Toolkit RLE programs.
@@ -169,6 +172,16 @@ rle_hdr				/* End of typedef. */
  */
 extern rle_hdr rle_dflt_hdr;
 
+/* 
+ * Provided by pm library
+ */
+ 
+extern void overflow_add(int, int);
+extern void overflow2(int, int);
+extern void overflow3(int, int, int);
+extern void *malloc2(int, int);
+extern void *malloc3(int, int, int);
+extern void *realloc2(void *, int, int);
 
 /* Declare RLE library routines. */
 
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/urt/rle_addhist.c netpbm-10.27/urt/rle_addhist.c
--- netpbm-10.27-orig/urt/rle_addhist.c	2003-01-08 20:35:44.000000000 +0100
+++ netpbm-10.27/urt/rle_addhist.c	2005-05-12 11:36:40.203125000 +0200
@@ -14,6 +14,8 @@
  * If you modify this software, you should include a notice giving the
  * name of the person performing the modification, the date of modification,
  * and the reason for such modification.
+ *
+ *  2002-12-19: Fix maths wrapping bugs. Alan Cox <alan@redhat.com>
  */
 /* 
  * rle_addhist.c - Add to the HISTORY comment in header
@@ -69,19 +71,29 @@ rle_hdr *in_hdr,*out_hdr;
 
 	length=0;
 	for(i=0;argv[i];i++)
+	{
+		overflow_add(length, strlen(argv[i]));
+		overflow_add(length+1, strlen(argv[i]));
 		length+= strlen(argv[i]) +1;					/* length of each arg plus space. */
-
+	}
 	(void)time (&temp);
 	timedate=ctime(&temp);
 	length+= strlen(timedate);						/* length of date and time in ASCII. */
 
+	overflow_add(strlen(padding), 4);
+	overflow_add(strlen(histoire), strlen(padding) + 4);
+	overflow_add(length, strlen(histoire) + strlen(padding) + 4);
 	length+= strlen(padding) + 3 + strlen(histoire) + 1;			/* length of padding, "on "  and length of history name plus "="*/
 	if(in_hdr)								/* if we are interested in the old comments... */
 		old=rle_getcom(histoire,in_hdr);				/* get old comment. */
 
-	if((old) && (*old)) length+= strlen(old);				/* add length if there. */
+	if((old) && (*old)) 
+	{
+		overflow_add(length, strlen(old));
+		length+= strlen(old);				/* add length if there. */
+	}
 
-	length++;								/*Cater for the null. */
+	overflow_add(length, 1);
 
 	if((newc=(char *)malloc((unsigned int) length)) == NULL)return;
 
@@ -95,5 +107,4 @@ rle_hdr *in_hdr,*out_hdr;
 	(void)strcat(newc,padding);							/* to line up multiple histories.*/
 
 	(void)rle_putcom(newc,out_hdr);
-
 }
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/urt/rle_getrow.c netpbm-10.27/urt/rle_getrow.c
--- netpbm-10.27-orig/urt/rle_getrow.c	2004-10-19 17:41:01.000000000 +0200
+++ netpbm-10.27/urt/rle_getrow.c	2005-05-12 11:36:40.203125000 +0200
@@ -17,6 +17,8 @@
  *
  *  Modified at BRL 16-May-88 by Mike Muuss to avoid Alliant STDC desire
  *  to have all "void" functions so declared.
+ *
+ *  2002-12-19: Fix maths wrapping bugs. Alan Cox <alan@redhat.com>
  */
 /* 
  * rle_getrow.c - Read an RLE file in.
@@ -99,10 +101,8 @@ rle_hdr * the_hdr;
 
     if ( !(setup.h_flags & H_NO_BACKGROUND) && setup.h_ncolors > 0 )
     {
-    the_hdr->bg_color = (int *)malloc(
-        (unsigned)(sizeof(int) * setup.h_ncolors) );
-    bg_color = (rle_pixel *)malloc(
-        (unsigned)(1 + (setup.h_ncolors / 2) * 2) );
+    the_hdr->bg_color = (int *)malloc2(sizeof(int), setup.h_ncolors);
+    bg_color = (rle_pixel *)malloc2(1 + (setup.h_ncolors / 2), 2);
     RLE_CHECK_ALLOC( the_hdr->cmd, the_hdr->bg_color && bg_color,
              "background color" );
     fread( (char *)bg_color, 1, 1 + (setup.h_ncolors / 2) * 2, infile );
@@ -144,9 +144,8 @@ rle_hdr * the_hdr;
     register int i;
     register char *maptemp;
 
-    the_hdr->cmap = (rle_map *)malloc(
-        (unsigned)(sizeof(rle_map) * maplen) );
-    maptemp = (char *)malloc( 2 * maplen );
+    the_hdr->cmap = (rle_map *)malloc2(sizeof(rle_map), maplen );
+    maptemp = (char *)malloc2( 2, maplen );
     if ( the_hdr->cmap == NULL || maptemp == NULL )
     {
         fprintf( stderr,
@@ -169,6 +168,8 @@ rle_hdr * the_hdr;
     register char * cp;
 
     VAXSHORT( comlen, infile ); /* get comment length */
+
+    overflow_add(comlen, 1);
     evenlen = (comlen + 1) & ~1;    /* make it even */
     if ( evenlen )
     {
@@ -189,7 +190,7 @@ rle_hdr * the_hdr;
         i++;            /* extra for NULL pointer at end */
         /* Get space to put pointers to comments */
         the_hdr->comments =
-        (CONST_DECL char **)malloc( (unsigned)(i * sizeof(char *)) );
+        (CONST_DECL char **)malloc2(i, sizeof(char *));
         if ( the_hdr->comments == NULL )
         {
         fprintf( stderr,
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/urt/rle_hdr.c netpbm-10.27/urt/rle_hdr.c
--- netpbm-10.27-orig/urt/rle_hdr.c	2000-06-09 09:49:51.000000000 +0200
+++ netpbm-10.27/urt/rle_hdr.c	2005-05-12 11:36:40.234375000 +0200
@@ -14,6 +14,8 @@
  * If you modify this software, you should include a notice giving the
  * name of the person performing the modification, the date of modification,
  * and the reason for such modification.
+ *
+ *  2002-12-19: Fix maths wrapping bugs. Alan Cox <alan@redhat.com>
  */
 /* 
  * rle_hdr.c - Functions to manipulate rle_hdr structures.
@@ -77,7 +79,10 @@ int img_num;
     /* Fill in with copies of the strings. */
     if ( the_hdr->cmd != pgmname )
     {
-	char *tmp = (char *)malloc( strlen( pgmname ) + 1 );
+	char *tmp ;
+
+	overflow_add(strlen(pgmname), 1);
+	tmp = malloc( strlen( pgmname ) + 1 );
 	RLE_CHECK_ALLOC( pgmname, tmp, 0 );
 	strcpy( tmp, pgmname );
 	the_hdr->cmd = tmp;
@@ -85,7 +90,9 @@ int img_num;
 
     if ( the_hdr->file_name != fname )
     {
-	char *tmp = (char *)malloc( strlen( fname ) + 1 );
+	char *tmp;
+	overflow_add(strlen(fname), 1);
+	tmp = malloc( strlen( fname ) + 1 );
 	RLE_CHECK_ALLOC( pgmname, tmp, 0 );
 	strcpy( tmp, fname );
 	the_hdr->file_name = tmp;
@@ -150,6 +157,7 @@ rle_hdr *from_hdr, *to_hdr;
     if ( to_hdr->bg_color )
     {
 	int size = to_hdr->ncolors * sizeof(int);
+	overflow2(to_hdr->ncolors, sizeof(int));
 	to_hdr->bg_color = (int *)malloc( size );
 	RLE_CHECK_ALLOC( to_hdr->cmd, to_hdr->bg_color, "background color" );
 	memcpy( to_hdr->bg_color, from_hdr->bg_color, size );
@@ -158,7 +166,7 @@ rle_hdr *from_hdr, *to_hdr;
     if ( to_hdr->cmap )
     {
 	int size = to_hdr->ncmap * (1 << to_hdr->cmaplen) * sizeof(rle_map);
-	to_hdr->cmap = (rle_map *)malloc( size );
+	to_hdr->cmap = (rle_map *)malloc3( to_hdr->ncmap, 1<<to_hdr->cmaplen, sizeof(rle_map));
 	RLE_CHECK_ALLOC( to_hdr->cmd, to_hdr->cmap, "color map" );
 	memcpy( to_hdr->cmap, from_hdr->cmap, size );
     }
@@ -171,11 +179,16 @@ rle_hdr *from_hdr, *to_hdr;
 	int size = 0;
 	CONST_DECL char **cp;
 	for ( cp=to_hdr->comments; *cp; cp++ )
+	{
+	    overflow_add(size, 1);
 	    size++;		/* Count the comments. */
+ 	}
 	/* Check if there are really any comments. */
 	if ( size )
 	{
+	    overflow_add(size, 1);
 	    size++;		/* Copy the NULL pointer, too. */
+	    overflow2(size, sizeof(char *));
 	    size *= sizeof(char *);
 	    to_hdr->comments = (CONST_DECL char **)malloc( size );
 	    RLE_CHECK_ALLOC( to_hdr->cmd, to_hdr->comments, "comments" );
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/urt/rle_open_f.c netpbm-10.27/urt/rle_open_f.c
--- netpbm-10.27-orig/urt/rle_open_f.c	2005-01-01 05:03:50.000000000 +0100
+++ netpbm-10.27/urt/rle_open_f.c	2005-05-12 11:36:40.187500000 +0200
@@ -6,6 +6,9 @@
  * 		University of Michigan
  * Date:	11/14/89
  * Copyright (c) 1990, University of Michigan
+ *
+ *  2002-12-19: Fix maths wrapping bugs. Alan Cox <alan@redhat.com>
+ *  Killed of crazy unsafe pipe/compress stuff
  */
 
 #include "rle.h"
@@ -185,7 +188,7 @@ rle_open_f_noexit(const char * const pro
 	    
         cp = file_name + strlen( (char*) file_name ) - 2;
         /* Pipe case. */
-        if ( *file_name == '|' )
+        if ( *file_name == '|' && 0 /* BOLLOCKS ARE WE DOING THIS ANY MORE */)
         {
             int thepid;		/* PID from my_popen */
             if ( (fp = my_popen( file_name + 1, mode, &thepid )) == NULL )
@@ -200,9 +203,10 @@ rle_open_f_noexit(const char * const pro
         }
 
         /* Compress case. */
-        else if ( cp > file_name && *cp == '.' && *(cp + 1) == 'Z' )
+        else if ( /* SMOKING SOMETHING */ 0 && cp > file_name && *cp == '.' && *(cp + 1) == 'Z' )
         {
             int thepid;		/* PID from my_popen. */
+            overflow_add(20, strlen(file_name));
             combuf = (char *)malloc( 20 + strlen( file_name ) );
             if ( combuf == NULL )
             {
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/urt/rle_putcom.c netpbm-10.27/urt/rle_putcom.c
--- netpbm-10.27-orig/urt/rle_putcom.c	2000-05-19 01:12:22.000000000 +0200
+++ netpbm-10.27/urt/rle_putcom.c	2005-05-12 11:36:40.234375000 +0200
@@ -14,6 +14,8 @@
  * If you modify this software, you should include a notice giving the
  * name of the person performing the modification, the date of modification,
  * and the reason for such modification.
+ *
+ *  2002-12-19: Fix maths wrapping bugs. Alan Cox <alan@redhat.com>
  */
 /* 
  * rle_putcom.c - Add a picture comment to the header struct.
@@ -89,19 +91,22 @@ rle_hdr * the_hdr;
 
     if ( the_hdr->comments == NULL )
     {
-	the_hdr->comments = (CONST_DECL char **)malloc( 2 * sizeof(char *) );
+	the_hdr->comments = (CONST_DECL char **)malloc2( 2, sizeof(char *) );
 	the_hdr->comments[0] = value;
 	the_hdr->comments[1] = NULL;
     }
     else
     {
 	for ( i = 2, cp = the_hdr->comments; *cp != NULL; i++, cp++ )
+	{
+	    overflow_add(i, 1);
 	    if ( match( value, *cp ) != NULL )
 	    {
 		v = *cp;
 		*cp = value;
 		return v;
 	    }
+	}
 	/* Not found */
 	/* Can't realloc because somebody else might be pointing to this
 	 * comments block.  Of course, if this were true, then the
@@ -111,7 +116,7 @@ rle_hdr * the_hdr;
 	 * could copy the pointers, too.
 	 */
 	old_comments = the_hdr->comments;
-	the_hdr->comments = (CONST_DECL char **)malloc(i * sizeof(char *) );
+	the_hdr->comments = (CONST_DECL char **)malloc2(i , sizeof(char *) );
 	the_hdr->comments[--i] = NULL;
 	the_hdr->comments[--i] = value;
 	for ( i--; i >= 0; i-- )
diff -ipuwr -x config.log -x config.status -x config.cache -x '*.Po' -x '*.pot' -x '*.bak' -x '*.orig' -x '*.rej' -x '*.new' -x '*~' -x '*.o' -x '*.exe' -x patches netpbm-10.27-orig/urt/scanargs.c netpbm-10.27/urt/scanargs.c
--- netpbm-10.27-orig/urt/scanargs.c	2003-01-08 20:38:25.000000000 +0100
+++ netpbm-10.27/urt/scanargs.c	2005-05-12 11:36:40.234375000 +0200
@@ -38,6 +38,8 @@
  *
  *  Modified at BRL 16-May-88 by Mike Muuss to avoid Alliant STDC desire
  *  to have all "void" functions so declared.
+ *
+ *  2002-12-19: Fix maths wrapping bugs. Alan Cox <alan@redhat.com>
  */
 
 #include "rle.h"
@@ -65,8 +67,8 @@ typedef int *ptr;
 /* 
  * Storage allocation macros
  */
-#define NEW( type, cnt )	(type *) malloc( (cnt) * sizeof( type ) )
-#define RENEW( type, ptr, cnt )	(type *) realloc( ptr, (cnt) * sizeof( type ) )
+#define NEW( type, cnt )	(type *) malloc2( (cnt) , sizeof( type ) )
+#define RENEW( type, ptr, cnt )	(type *) realloc2( ptr, (cnt), sizeof( type ) )
 
 #if defined(c_plusplus) && !defined(USE_PROTOTYPES)
 #define USE_PROTOTYPES
